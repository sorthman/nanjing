package org.linlinjava.litemall.db.domain;

import java.time.LocalDateTime;
import java.util.ArrayList;
import java.util.List;

public class VisituserExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table visituser
     *
     * @mbg.generated
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table visituser
     *
     * @mbg.generated
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table visituser
     *
     * @mbg.generated
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table visituser
     *
     * @mbg.generated
     */
    public VisituserExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table visituser
     *
     * @mbg.generated
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table visituser
     *
     * @mbg.generated
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table visituser
     *
     * @mbg.generated
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table visituser
     *
     * @mbg.generated
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table visituser
     *
     * @mbg.generated
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table visituser
     *
     * @mbg.generated
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table visituser
     *
     * @mbg.generated
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table visituser
     *
     * @mbg.generated
     */
    public VisituserExample orderBy(String orderByClause) {
        this.setOrderByClause(orderByClause);
        return this;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table visituser
     *
     * @mbg.generated
     */
    public VisituserExample orderBy(String ... orderByClauses) {
        StringBuffer sb = new StringBuffer();
        for (int i = 0; i < orderByClauses.length; i++) {
            sb.append(orderByClauses[i]);
            if (i < orderByClauses.length - 1) {
                sb.append(" , ");
            }
        }
        this.setOrderByClause(sb.toString());
        return this;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table visituser
     *
     * @mbg.generated
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table visituser
     *
     * @mbg.generated
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria(this);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table visituser
     *
     * @mbg.generated
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table visituser
     *
     * @mbg.generated
     */
    public static Criteria newAndCreateCriteria() {
        VisituserExample example = new VisituserExample();
        return example.createCriteria();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table visituser
     *
     * @mbg.generated
     */
    public VisituserExample when(boolean condition, IExampleWhen then) {
        if (condition) {
            then.example(this);
        }
        return this;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table visituser
     *
     * @mbg.generated
     */
    public VisituserExample when(boolean condition, IExampleWhen then, IExampleWhen otherwise) {
        if (condition) {
            then.example(this);
        } else {
            otherwise.example(this);
        }
        return this;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table visituser
     *
     * @mbg.generated
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andIdIsNull() {
            addCriterion("id is null");
            return (Criteria) this;
        }

        public Criteria andIdIsNotNull() {
            addCriterion("id is not null");
            return (Criteria) this;
        }

        public Criteria andIdEqualTo(Integer value) {
            addCriterion("id =", value, "id");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table visituser
         *
         * @mbg.generated
         */
        public Criteria andIdEqualToColumn(Visituser.Column column) {
            addCriterion(new StringBuilder("id = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIdNotEqualTo(Integer value) {
            addCriterion("id <>", value, "id");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table visituser
         *
         * @mbg.generated
         */
        public Criteria andIdNotEqualToColumn(Visituser.Column column) {
            addCriterion(new StringBuilder("id <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIdGreaterThan(Integer value) {
            addCriterion("id >", value, "id");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table visituser
         *
         * @mbg.generated
         */
        public Criteria andIdGreaterThanColumn(Visituser.Column column) {
            addCriterion(new StringBuilder("id > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("id >=", value, "id");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table visituser
         *
         * @mbg.generated
         */
        public Criteria andIdGreaterThanOrEqualToColumn(Visituser.Column column) {
            addCriterion(new StringBuilder("id >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIdLessThan(Integer value) {
            addCriterion("id <", value, "id");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table visituser
         *
         * @mbg.generated
         */
        public Criteria andIdLessThanColumn(Visituser.Column column) {
            addCriterion(new StringBuilder("id < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIdLessThanOrEqualTo(Integer value) {
            addCriterion("id <=", value, "id");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table visituser
         *
         * @mbg.generated
         */
        public Criteria andIdLessThanOrEqualToColumn(Visituser.Column column) {
            addCriterion(new StringBuilder("id <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIdIn(List<Integer> values) {
            addCriterion("id in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotIn(List<Integer> values) {
            addCriterion("id not in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdBetween(Integer value1, Integer value2) {
            addCriterion("id between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotBetween(Integer value1, Integer value2) {
            addCriterion("id not between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andNameIsNull() {
            addCriterion("`name` is null");
            return (Criteria) this;
        }

        public Criteria andNameIsNotNull() {
            addCriterion("`name` is not null");
            return (Criteria) this;
        }

        public Criteria andNameEqualTo(String value) {
            addCriterion("`name` =", value, "name");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table visituser
         *
         * @mbg.generated
         */
        public Criteria andNameEqualToColumn(Visituser.Column column) {
            addCriterion(new StringBuilder("`name` = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andNameNotEqualTo(String value) {
            addCriterion("`name` <>", value, "name");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table visituser
         *
         * @mbg.generated
         */
        public Criteria andNameNotEqualToColumn(Visituser.Column column) {
            addCriterion(new StringBuilder("`name` <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andNameGreaterThan(String value) {
            addCriterion("`name` >", value, "name");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table visituser
         *
         * @mbg.generated
         */
        public Criteria andNameGreaterThanColumn(Visituser.Column column) {
            addCriterion(new StringBuilder("`name` > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andNameGreaterThanOrEqualTo(String value) {
            addCriterion("`name` >=", value, "name");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table visituser
         *
         * @mbg.generated
         */
        public Criteria andNameGreaterThanOrEqualToColumn(Visituser.Column column) {
            addCriterion(new StringBuilder("`name` >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andNameLessThan(String value) {
            addCriterion("`name` <", value, "name");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table visituser
         *
         * @mbg.generated
         */
        public Criteria andNameLessThanColumn(Visituser.Column column) {
            addCriterion(new StringBuilder("`name` < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andNameLessThanOrEqualTo(String value) {
            addCriterion("`name` <=", value, "name");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table visituser
         *
         * @mbg.generated
         */
        public Criteria andNameLessThanOrEqualToColumn(Visituser.Column column) {
            addCriterion(new StringBuilder("`name` <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andNameLike(String value) {
            addCriterion("`name` like", value, "name");
            return (Criteria) this;
        }

        public Criteria andNameNotLike(String value) {
            addCriterion("`name` not like", value, "name");
            return (Criteria) this;
        }

        public Criteria andNameIn(List<String> values) {
            addCriterion("`name` in", values, "name");
            return (Criteria) this;
        }

        public Criteria andNameNotIn(List<String> values) {
            addCriterion("`name` not in", values, "name");
            return (Criteria) this;
        }

        public Criteria andNameBetween(String value1, String value2) {
            addCriterion("`name` between", value1, value2, "name");
            return (Criteria) this;
        }

        public Criteria andNameNotBetween(String value1, String value2) {
            addCriterion("`name` not between", value1, value2, "name");
            return (Criteria) this;
        }

        public Criteria andPhoneIsNull() {
            addCriterion("phone is null");
            return (Criteria) this;
        }

        public Criteria andPhoneIsNotNull() {
            addCriterion("phone is not null");
            return (Criteria) this;
        }

        public Criteria andPhoneEqualTo(String value) {
            addCriterion("phone =", value, "phone");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table visituser
         *
         * @mbg.generated
         */
        public Criteria andPhoneEqualToColumn(Visituser.Column column) {
            addCriterion(new StringBuilder("phone = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andPhoneNotEqualTo(String value) {
            addCriterion("phone <>", value, "phone");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table visituser
         *
         * @mbg.generated
         */
        public Criteria andPhoneNotEqualToColumn(Visituser.Column column) {
            addCriterion(new StringBuilder("phone <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andPhoneGreaterThan(String value) {
            addCriterion("phone >", value, "phone");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table visituser
         *
         * @mbg.generated
         */
        public Criteria andPhoneGreaterThanColumn(Visituser.Column column) {
            addCriterion(new StringBuilder("phone > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andPhoneGreaterThanOrEqualTo(String value) {
            addCriterion("phone >=", value, "phone");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table visituser
         *
         * @mbg.generated
         */
        public Criteria andPhoneGreaterThanOrEqualToColumn(Visituser.Column column) {
            addCriterion(new StringBuilder("phone >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andPhoneLessThan(String value) {
            addCriterion("phone <", value, "phone");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table visituser
         *
         * @mbg.generated
         */
        public Criteria andPhoneLessThanColumn(Visituser.Column column) {
            addCriterion(new StringBuilder("phone < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andPhoneLessThanOrEqualTo(String value) {
            addCriterion("phone <=", value, "phone");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table visituser
         *
         * @mbg.generated
         */
        public Criteria andPhoneLessThanOrEqualToColumn(Visituser.Column column) {
            addCriterion(new StringBuilder("phone <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andPhoneLike(String value) {
            addCriterion("phone like", value, "phone");
            return (Criteria) this;
        }

        public Criteria andPhoneNotLike(String value) {
            addCriterion("phone not like", value, "phone");
            return (Criteria) this;
        }

        public Criteria andPhoneIn(List<String> values) {
            addCriterion("phone in", values, "phone");
            return (Criteria) this;
        }

        public Criteria andPhoneNotIn(List<String> values) {
            addCriterion("phone not in", values, "phone");
            return (Criteria) this;
        }

        public Criteria andPhoneBetween(String value1, String value2) {
            addCriterion("phone between", value1, value2, "phone");
            return (Criteria) this;
        }

        public Criteria andPhoneNotBetween(String value1, String value2) {
            addCriterion("phone not between", value1, value2, "phone");
            return (Criteria) this;
        }

        public Criteria andIdcardIsNull() {
            addCriterion("idcard is null");
            return (Criteria) this;
        }

        public Criteria andIdcardIsNotNull() {
            addCriterion("idcard is not null");
            return (Criteria) this;
        }

        public Criteria andIdcardEqualTo(String value) {
            addCriterion("idcard =", value, "idcard");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table visituser
         *
         * @mbg.generated
         */
        public Criteria andIdcardEqualToColumn(Visituser.Column column) {
            addCriterion(new StringBuilder("idcard = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIdcardNotEqualTo(String value) {
            addCriterion("idcard <>", value, "idcard");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table visituser
         *
         * @mbg.generated
         */
        public Criteria andIdcardNotEqualToColumn(Visituser.Column column) {
            addCriterion(new StringBuilder("idcard <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIdcardGreaterThan(String value) {
            addCriterion("idcard >", value, "idcard");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table visituser
         *
         * @mbg.generated
         */
        public Criteria andIdcardGreaterThanColumn(Visituser.Column column) {
            addCriterion(new StringBuilder("idcard > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIdcardGreaterThanOrEqualTo(String value) {
            addCriterion("idcard >=", value, "idcard");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table visituser
         *
         * @mbg.generated
         */
        public Criteria andIdcardGreaterThanOrEqualToColumn(Visituser.Column column) {
            addCriterion(new StringBuilder("idcard >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIdcardLessThan(String value) {
            addCriterion("idcard <", value, "idcard");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table visituser
         *
         * @mbg.generated
         */
        public Criteria andIdcardLessThanColumn(Visituser.Column column) {
            addCriterion(new StringBuilder("idcard < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIdcardLessThanOrEqualTo(String value) {
            addCriterion("idcard <=", value, "idcard");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table visituser
         *
         * @mbg.generated
         */
        public Criteria andIdcardLessThanOrEqualToColumn(Visituser.Column column) {
            addCriterion(new StringBuilder("idcard <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIdcardLike(String value) {
            addCriterion("idcard like", value, "idcard");
            return (Criteria) this;
        }

        public Criteria andIdcardNotLike(String value) {
            addCriterion("idcard not like", value, "idcard");
            return (Criteria) this;
        }

        public Criteria andIdcardIn(List<String> values) {
            addCriterion("idcard in", values, "idcard");
            return (Criteria) this;
        }

        public Criteria andIdcardNotIn(List<String> values) {
            addCriterion("idcard not in", values, "idcard");
            return (Criteria) this;
        }

        public Criteria andIdcardBetween(String value1, String value2) {
            addCriterion("idcard between", value1, value2, "idcard");
            return (Criteria) this;
        }

        public Criteria andIdcardNotBetween(String value1, String value2) {
            addCriterion("idcard not between", value1, value2, "idcard");
            return (Criteria) this;
        }

        public Criteria andSexIsNull() {
            addCriterion("sex is null");
            return (Criteria) this;
        }

        public Criteria andSexIsNotNull() {
            addCriterion("sex is not null");
            return (Criteria) this;
        }

        public Criteria andSexEqualTo(String value) {
            addCriterion("sex =", value, "sex");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table visituser
         *
         * @mbg.generated
         */
        public Criteria andSexEqualToColumn(Visituser.Column column) {
            addCriterion(new StringBuilder("sex = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andSexNotEqualTo(String value) {
            addCriterion("sex <>", value, "sex");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table visituser
         *
         * @mbg.generated
         */
        public Criteria andSexNotEqualToColumn(Visituser.Column column) {
            addCriterion(new StringBuilder("sex <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andSexGreaterThan(String value) {
            addCriterion("sex >", value, "sex");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table visituser
         *
         * @mbg.generated
         */
        public Criteria andSexGreaterThanColumn(Visituser.Column column) {
            addCriterion(new StringBuilder("sex > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andSexGreaterThanOrEqualTo(String value) {
            addCriterion("sex >=", value, "sex");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table visituser
         *
         * @mbg.generated
         */
        public Criteria andSexGreaterThanOrEqualToColumn(Visituser.Column column) {
            addCriterion(new StringBuilder("sex >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andSexLessThan(String value) {
            addCriterion("sex <", value, "sex");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table visituser
         *
         * @mbg.generated
         */
        public Criteria andSexLessThanColumn(Visituser.Column column) {
            addCriterion(new StringBuilder("sex < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andSexLessThanOrEqualTo(String value) {
            addCriterion("sex <=", value, "sex");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table visituser
         *
         * @mbg.generated
         */
        public Criteria andSexLessThanOrEqualToColumn(Visituser.Column column) {
            addCriterion(new StringBuilder("sex <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andSexLike(String value) {
            addCriterion("sex like", value, "sex");
            return (Criteria) this;
        }

        public Criteria andSexNotLike(String value) {
            addCriterion("sex not like", value, "sex");
            return (Criteria) this;
        }

        public Criteria andSexIn(List<String> values) {
            addCriterion("sex in", values, "sex");
            return (Criteria) this;
        }

        public Criteria andSexNotIn(List<String> values) {
            addCriterion("sex not in", values, "sex");
            return (Criteria) this;
        }

        public Criteria andSexBetween(String value1, String value2) {
            addCriterion("sex between", value1, value2, "sex");
            return (Criteria) this;
        }

        public Criteria andSexNotBetween(String value1, String value2) {
            addCriterion("sex not between", value1, value2, "sex");
            return (Criteria) this;
        }

        public Criteria andAgeIsNull() {
            addCriterion("age is null");
            return (Criteria) this;
        }

        public Criteria andAgeIsNotNull() {
            addCriterion("age is not null");
            return (Criteria) this;
        }

        public Criteria andAgeEqualTo(Integer value) {
            addCriterion("age =", value, "age");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table visituser
         *
         * @mbg.generated
         */
        public Criteria andAgeEqualToColumn(Visituser.Column column) {
            addCriterion(new StringBuilder("age = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andAgeNotEqualTo(Integer value) {
            addCriterion("age <>", value, "age");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table visituser
         *
         * @mbg.generated
         */
        public Criteria andAgeNotEqualToColumn(Visituser.Column column) {
            addCriterion(new StringBuilder("age <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andAgeGreaterThan(Integer value) {
            addCriterion("age >", value, "age");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table visituser
         *
         * @mbg.generated
         */
        public Criteria andAgeGreaterThanColumn(Visituser.Column column) {
            addCriterion(new StringBuilder("age > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andAgeGreaterThanOrEqualTo(Integer value) {
            addCriterion("age >=", value, "age");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table visituser
         *
         * @mbg.generated
         */
        public Criteria andAgeGreaterThanOrEqualToColumn(Visituser.Column column) {
            addCriterion(new StringBuilder("age >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andAgeLessThan(Integer value) {
            addCriterion("age <", value, "age");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table visituser
         *
         * @mbg.generated
         */
        public Criteria andAgeLessThanColumn(Visituser.Column column) {
            addCriterion(new StringBuilder("age < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andAgeLessThanOrEqualTo(Integer value) {
            addCriterion("age <=", value, "age");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table visituser
         *
         * @mbg.generated
         */
        public Criteria andAgeLessThanOrEqualToColumn(Visituser.Column column) {
            addCriterion(new StringBuilder("age <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andAgeIn(List<Integer> values) {
            addCriterion("age in", values, "age");
            return (Criteria) this;
        }

        public Criteria andAgeNotIn(List<Integer> values) {
            addCriterion("age not in", values, "age");
            return (Criteria) this;
        }

        public Criteria andAgeBetween(Integer value1, Integer value2) {
            addCriterion("age between", value1, value2, "age");
            return (Criteria) this;
        }

        public Criteria andAgeNotBetween(Integer value1, Integer value2) {
            addCriterion("age not between", value1, value2, "age");
            return (Criteria) this;
        }

        public Criteria andBirthdayIsNull() {
            addCriterion("birthday is null");
            return (Criteria) this;
        }

        public Criteria andBirthdayIsNotNull() {
            addCriterion("birthday is not null");
            return (Criteria) this;
        }

        public Criteria andBirthdayEqualTo(String value) {
            addCriterion("birthday =", value, "birthday");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table visituser
         *
         * @mbg.generated
         */
        public Criteria andBirthdayEqualToColumn(Visituser.Column column) {
            addCriterion(new StringBuilder("birthday = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andBirthdayNotEqualTo(String value) {
            addCriterion("birthday <>", value, "birthday");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table visituser
         *
         * @mbg.generated
         */
        public Criteria andBirthdayNotEqualToColumn(Visituser.Column column) {
            addCriterion(new StringBuilder("birthday <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andBirthdayGreaterThan(String value) {
            addCriterion("birthday >", value, "birthday");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table visituser
         *
         * @mbg.generated
         */
        public Criteria andBirthdayGreaterThanColumn(Visituser.Column column) {
            addCriterion(new StringBuilder("birthday > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andBirthdayGreaterThanOrEqualTo(String value) {
            addCriterion("birthday >=", value, "birthday");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table visituser
         *
         * @mbg.generated
         */
        public Criteria andBirthdayGreaterThanOrEqualToColumn(Visituser.Column column) {
            addCriterion(new StringBuilder("birthday >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andBirthdayLessThan(String value) {
            addCriterion("birthday <", value, "birthday");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table visituser
         *
         * @mbg.generated
         */
        public Criteria andBirthdayLessThanColumn(Visituser.Column column) {
            addCriterion(new StringBuilder("birthday < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andBirthdayLessThanOrEqualTo(String value) {
            addCriterion("birthday <=", value, "birthday");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table visituser
         *
         * @mbg.generated
         */
        public Criteria andBirthdayLessThanOrEqualToColumn(Visituser.Column column) {
            addCriterion(new StringBuilder("birthday <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andBirthdayLike(String value) {
            addCriterion("birthday like", value, "birthday");
            return (Criteria) this;
        }

        public Criteria andBirthdayNotLike(String value) {
            addCriterion("birthday not like", value, "birthday");
            return (Criteria) this;
        }

        public Criteria andBirthdayIn(List<String> values) {
            addCriterion("birthday in", values, "birthday");
            return (Criteria) this;
        }

        public Criteria andBirthdayNotIn(List<String> values) {
            addCriterion("birthday not in", values, "birthday");
            return (Criteria) this;
        }

        public Criteria andBirthdayBetween(String value1, String value2) {
            addCriterion("birthday between", value1, value2, "birthday");
            return (Criteria) this;
        }

        public Criteria andBirthdayNotBetween(String value1, String value2) {
            addCriterion("birthday not between", value1, value2, "birthday");
            return (Criteria) this;
        }

        public Criteria andLiveaddressIsNull() {
            addCriterion("liveaddress is null");
            return (Criteria) this;
        }

        public Criteria andLiveaddressIsNotNull() {
            addCriterion("liveaddress is not null");
            return (Criteria) this;
        }

        public Criteria andLiveaddressEqualTo(String value) {
            addCriterion("liveaddress =", value, "liveaddress");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table visituser
         *
         * @mbg.generated
         */
        public Criteria andLiveaddressEqualToColumn(Visituser.Column column) {
            addCriterion(new StringBuilder("liveaddress = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andLiveaddressNotEqualTo(String value) {
            addCriterion("liveaddress <>", value, "liveaddress");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table visituser
         *
         * @mbg.generated
         */
        public Criteria andLiveaddressNotEqualToColumn(Visituser.Column column) {
            addCriterion(new StringBuilder("liveaddress <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andLiveaddressGreaterThan(String value) {
            addCriterion("liveaddress >", value, "liveaddress");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table visituser
         *
         * @mbg.generated
         */
        public Criteria andLiveaddressGreaterThanColumn(Visituser.Column column) {
            addCriterion(new StringBuilder("liveaddress > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andLiveaddressGreaterThanOrEqualTo(String value) {
            addCriterion("liveaddress >=", value, "liveaddress");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table visituser
         *
         * @mbg.generated
         */
        public Criteria andLiveaddressGreaterThanOrEqualToColumn(Visituser.Column column) {
            addCriterion(new StringBuilder("liveaddress >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andLiveaddressLessThan(String value) {
            addCriterion("liveaddress <", value, "liveaddress");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table visituser
         *
         * @mbg.generated
         */
        public Criteria andLiveaddressLessThanColumn(Visituser.Column column) {
            addCriterion(new StringBuilder("liveaddress < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andLiveaddressLessThanOrEqualTo(String value) {
            addCriterion("liveaddress <=", value, "liveaddress");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table visituser
         *
         * @mbg.generated
         */
        public Criteria andLiveaddressLessThanOrEqualToColumn(Visituser.Column column) {
            addCriterion(new StringBuilder("liveaddress <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andLiveaddressLike(String value) {
            addCriterion("liveaddress like", value, "liveaddress");
            return (Criteria) this;
        }

        public Criteria andLiveaddressNotLike(String value) {
            addCriterion("liveaddress not like", value, "liveaddress");
            return (Criteria) this;
        }

        public Criteria andLiveaddressIn(List<String> values) {
            addCriterion("liveaddress in", values, "liveaddress");
            return (Criteria) this;
        }

        public Criteria andLiveaddressNotIn(List<String> values) {
            addCriterion("liveaddress not in", values, "liveaddress");
            return (Criteria) this;
        }

        public Criteria andLiveaddressBetween(String value1, String value2) {
            addCriterion("liveaddress between", value1, value2, "liveaddress");
            return (Criteria) this;
        }

        public Criteria andLiveaddressNotBetween(String value1, String value2) {
            addCriterion("liveaddress not between", value1, value2, "liveaddress");
            return (Criteria) this;
        }

        public Criteria andTraffictypeIsNull() {
            addCriterion("traffictype is null");
            return (Criteria) this;
        }

        public Criteria andTraffictypeIsNotNull() {
            addCriterion("traffictype is not null");
            return (Criteria) this;
        }

        public Criteria andTraffictypeEqualTo(String value) {
            addCriterion("traffictype =", value, "traffictype");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table visituser
         *
         * @mbg.generated
         */
        public Criteria andTraffictypeEqualToColumn(Visituser.Column column) {
            addCriterion(new StringBuilder("traffictype = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andTraffictypeNotEqualTo(String value) {
            addCriterion("traffictype <>", value, "traffictype");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table visituser
         *
         * @mbg.generated
         */
        public Criteria andTraffictypeNotEqualToColumn(Visituser.Column column) {
            addCriterion(new StringBuilder("traffictype <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andTraffictypeGreaterThan(String value) {
            addCriterion("traffictype >", value, "traffictype");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table visituser
         *
         * @mbg.generated
         */
        public Criteria andTraffictypeGreaterThanColumn(Visituser.Column column) {
            addCriterion(new StringBuilder("traffictype > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andTraffictypeGreaterThanOrEqualTo(String value) {
            addCriterion("traffictype >=", value, "traffictype");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table visituser
         *
         * @mbg.generated
         */
        public Criteria andTraffictypeGreaterThanOrEqualToColumn(Visituser.Column column) {
            addCriterion(new StringBuilder("traffictype >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andTraffictypeLessThan(String value) {
            addCriterion("traffictype <", value, "traffictype");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table visituser
         *
         * @mbg.generated
         */
        public Criteria andTraffictypeLessThanColumn(Visituser.Column column) {
            addCriterion(new StringBuilder("traffictype < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andTraffictypeLessThanOrEqualTo(String value) {
            addCriterion("traffictype <=", value, "traffictype");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table visituser
         *
         * @mbg.generated
         */
        public Criteria andTraffictypeLessThanOrEqualToColumn(Visituser.Column column) {
            addCriterion(new StringBuilder("traffictype <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andTraffictypeLike(String value) {
            addCriterion("traffictype like", value, "traffictype");
            return (Criteria) this;
        }

        public Criteria andTraffictypeNotLike(String value) {
            addCriterion("traffictype not like", value, "traffictype");
            return (Criteria) this;
        }

        public Criteria andTraffictypeIn(List<String> values) {
            addCriterion("traffictype in", values, "traffictype");
            return (Criteria) this;
        }

        public Criteria andTraffictypeNotIn(List<String> values) {
            addCriterion("traffictype not in", values, "traffictype");
            return (Criteria) this;
        }

        public Criteria andTraffictypeBetween(String value1, String value2) {
            addCriterion("traffictype between", value1, value2, "traffictype");
            return (Criteria) this;
        }

        public Criteria andTraffictypeNotBetween(String value1, String value2) {
            addCriterion("traffictype not between", value1, value2, "traffictype");
            return (Criteria) this;
        }

        public Criteria andTrafficinfoIsNull() {
            addCriterion("trafficinfo is null");
            return (Criteria) this;
        }

        public Criteria andTrafficinfoIsNotNull() {
            addCriterion("trafficinfo is not null");
            return (Criteria) this;
        }

        public Criteria andTrafficinfoEqualTo(String value) {
            addCriterion("trafficinfo =", value, "trafficinfo");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table visituser
         *
         * @mbg.generated
         */
        public Criteria andTrafficinfoEqualToColumn(Visituser.Column column) {
            addCriterion(new StringBuilder("trafficinfo = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andTrafficinfoNotEqualTo(String value) {
            addCriterion("trafficinfo <>", value, "trafficinfo");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table visituser
         *
         * @mbg.generated
         */
        public Criteria andTrafficinfoNotEqualToColumn(Visituser.Column column) {
            addCriterion(new StringBuilder("trafficinfo <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andTrafficinfoGreaterThan(String value) {
            addCriterion("trafficinfo >", value, "trafficinfo");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table visituser
         *
         * @mbg.generated
         */
        public Criteria andTrafficinfoGreaterThanColumn(Visituser.Column column) {
            addCriterion(new StringBuilder("trafficinfo > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andTrafficinfoGreaterThanOrEqualTo(String value) {
            addCriterion("trafficinfo >=", value, "trafficinfo");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table visituser
         *
         * @mbg.generated
         */
        public Criteria andTrafficinfoGreaterThanOrEqualToColumn(Visituser.Column column) {
            addCriterion(new StringBuilder("trafficinfo >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andTrafficinfoLessThan(String value) {
            addCriterion("trafficinfo <", value, "trafficinfo");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table visituser
         *
         * @mbg.generated
         */
        public Criteria andTrafficinfoLessThanColumn(Visituser.Column column) {
            addCriterion(new StringBuilder("trafficinfo < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andTrafficinfoLessThanOrEqualTo(String value) {
            addCriterion("trafficinfo <=", value, "trafficinfo");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table visituser
         *
         * @mbg.generated
         */
        public Criteria andTrafficinfoLessThanOrEqualToColumn(Visituser.Column column) {
            addCriterion(new StringBuilder("trafficinfo <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andTrafficinfoLike(String value) {
            addCriterion("trafficinfo like", value, "trafficinfo");
            return (Criteria) this;
        }

        public Criteria andTrafficinfoNotLike(String value) {
            addCriterion("trafficinfo not like", value, "trafficinfo");
            return (Criteria) this;
        }

        public Criteria andTrafficinfoIn(List<String> values) {
            addCriterion("trafficinfo in", values, "trafficinfo");
            return (Criteria) this;
        }

        public Criteria andTrafficinfoNotIn(List<String> values) {
            addCriterion("trafficinfo not in", values, "trafficinfo");
            return (Criteria) this;
        }

        public Criteria andTrafficinfoBetween(String value1, String value2) {
            addCriterion("trafficinfo between", value1, value2, "trafficinfo");
            return (Criteria) this;
        }

        public Criteria andTrafficinfoNotBetween(String value1, String value2) {
            addCriterion("trafficinfo not between", value1, value2, "trafficinfo");
            return (Criteria) this;
        }

        public Criteria andIfwhIsNull() {
            addCriterion("ifwh is null");
            return (Criteria) this;
        }

        public Criteria andIfwhIsNotNull() {
            addCriterion("ifwh is not null");
            return (Criteria) this;
        }

        public Criteria andIfwhEqualTo(String value) {
            addCriterion("ifwh =", value, "ifwh");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table visituser
         *
         * @mbg.generated
         */
        public Criteria andIfwhEqualToColumn(Visituser.Column column) {
            addCriterion(new StringBuilder("ifwh = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIfwhNotEqualTo(String value) {
            addCriterion("ifwh <>", value, "ifwh");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table visituser
         *
         * @mbg.generated
         */
        public Criteria andIfwhNotEqualToColumn(Visituser.Column column) {
            addCriterion(new StringBuilder("ifwh <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIfwhGreaterThan(String value) {
            addCriterion("ifwh >", value, "ifwh");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table visituser
         *
         * @mbg.generated
         */
        public Criteria andIfwhGreaterThanColumn(Visituser.Column column) {
            addCriterion(new StringBuilder("ifwh > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIfwhGreaterThanOrEqualTo(String value) {
            addCriterion("ifwh >=", value, "ifwh");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table visituser
         *
         * @mbg.generated
         */
        public Criteria andIfwhGreaterThanOrEqualToColumn(Visituser.Column column) {
            addCriterion(new StringBuilder("ifwh >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIfwhLessThan(String value) {
            addCriterion("ifwh <", value, "ifwh");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table visituser
         *
         * @mbg.generated
         */
        public Criteria andIfwhLessThanColumn(Visituser.Column column) {
            addCriterion(new StringBuilder("ifwh < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIfwhLessThanOrEqualTo(String value) {
            addCriterion("ifwh <=", value, "ifwh");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table visituser
         *
         * @mbg.generated
         */
        public Criteria andIfwhLessThanOrEqualToColumn(Visituser.Column column) {
            addCriterion(new StringBuilder("ifwh <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIfwhLike(String value) {
            addCriterion("ifwh like", value, "ifwh");
            return (Criteria) this;
        }

        public Criteria andIfwhNotLike(String value) {
            addCriterion("ifwh not like", value, "ifwh");
            return (Criteria) this;
        }

        public Criteria andIfwhIn(List<String> values) {
            addCriterion("ifwh in", values, "ifwh");
            return (Criteria) this;
        }

        public Criteria andIfwhNotIn(List<String> values) {
            addCriterion("ifwh not in", values, "ifwh");
            return (Criteria) this;
        }

        public Criteria andIfwhBetween(String value1, String value2) {
            addCriterion("ifwh between", value1, value2, "ifwh");
            return (Criteria) this;
        }

        public Criteria andIfwhNotBetween(String value1, String value2) {
            addCriterion("ifwh not between", value1, value2, "ifwh");
            return (Criteria) this;
        }

        public Criteria andIfxqIsNull() {
            addCriterion("ifxq is null");
            return (Criteria) this;
        }

        public Criteria andIfxqIsNotNull() {
            addCriterion("ifxq is not null");
            return (Criteria) this;
        }

        public Criteria andIfxqEqualTo(String value) {
            addCriterion("ifxq =", value, "ifxq");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table visituser
         *
         * @mbg.generated
         */
        public Criteria andIfxqEqualToColumn(Visituser.Column column) {
            addCriterion(new StringBuilder("ifxq = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIfxqNotEqualTo(String value) {
            addCriterion("ifxq <>", value, "ifxq");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table visituser
         *
         * @mbg.generated
         */
        public Criteria andIfxqNotEqualToColumn(Visituser.Column column) {
            addCriterion(new StringBuilder("ifxq <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIfxqGreaterThan(String value) {
            addCriterion("ifxq >", value, "ifxq");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table visituser
         *
         * @mbg.generated
         */
        public Criteria andIfxqGreaterThanColumn(Visituser.Column column) {
            addCriterion(new StringBuilder("ifxq > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIfxqGreaterThanOrEqualTo(String value) {
            addCriterion("ifxq >=", value, "ifxq");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table visituser
         *
         * @mbg.generated
         */
        public Criteria andIfxqGreaterThanOrEqualToColumn(Visituser.Column column) {
            addCriterion(new StringBuilder("ifxq >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIfxqLessThan(String value) {
            addCriterion("ifxq <", value, "ifxq");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table visituser
         *
         * @mbg.generated
         */
        public Criteria andIfxqLessThanColumn(Visituser.Column column) {
            addCriterion(new StringBuilder("ifxq < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIfxqLessThanOrEqualTo(String value) {
            addCriterion("ifxq <=", value, "ifxq");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table visituser
         *
         * @mbg.generated
         */
        public Criteria andIfxqLessThanOrEqualToColumn(Visituser.Column column) {
            addCriterion(new StringBuilder("ifxq <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIfxqLike(String value) {
            addCriterion("ifxq like", value, "ifxq");
            return (Criteria) this;
        }

        public Criteria andIfxqNotLike(String value) {
            addCriterion("ifxq not like", value, "ifxq");
            return (Criteria) this;
        }

        public Criteria andIfxqIn(List<String> values) {
            addCriterion("ifxq in", values, "ifxq");
            return (Criteria) this;
        }

        public Criteria andIfxqNotIn(List<String> values) {
            addCriterion("ifxq not in", values, "ifxq");
            return (Criteria) this;
        }

        public Criteria andIfxqBetween(String value1, String value2) {
            addCriterion("ifxq between", value1, value2, "ifxq");
            return (Criteria) this;
        }

        public Criteria andIfxqNotBetween(String value1, String value2) {
            addCriterion("ifxq not between", value1, value2, "ifxq");
            return (Criteria) this;
        }

        public Criteria andVisitaddressIsNull() {
            addCriterion("visitaddress is null");
            return (Criteria) this;
        }

        public Criteria andVisitaddressIsNotNull() {
            addCriterion("visitaddress is not null");
            return (Criteria) this;
        }

        public Criteria andVisitaddressEqualTo(String value) {
            addCriterion("visitaddress =", value, "visitaddress");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table visituser
         *
         * @mbg.generated
         */
        public Criteria andVisitaddressEqualToColumn(Visituser.Column column) {
            addCriterion(new StringBuilder("visitaddress = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andVisitaddressNotEqualTo(String value) {
            addCriterion("visitaddress <>", value, "visitaddress");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table visituser
         *
         * @mbg.generated
         */
        public Criteria andVisitaddressNotEqualToColumn(Visituser.Column column) {
            addCriterion(new StringBuilder("visitaddress <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andVisitaddressGreaterThan(String value) {
            addCriterion("visitaddress >", value, "visitaddress");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table visituser
         *
         * @mbg.generated
         */
        public Criteria andVisitaddressGreaterThanColumn(Visituser.Column column) {
            addCriterion(new StringBuilder("visitaddress > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andVisitaddressGreaterThanOrEqualTo(String value) {
            addCriterion("visitaddress >=", value, "visitaddress");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table visituser
         *
         * @mbg.generated
         */
        public Criteria andVisitaddressGreaterThanOrEqualToColumn(Visituser.Column column) {
            addCriterion(new StringBuilder("visitaddress >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andVisitaddressLessThan(String value) {
            addCriterion("visitaddress <", value, "visitaddress");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table visituser
         *
         * @mbg.generated
         */
        public Criteria andVisitaddressLessThanColumn(Visituser.Column column) {
            addCriterion(new StringBuilder("visitaddress < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andVisitaddressLessThanOrEqualTo(String value) {
            addCriterion("visitaddress <=", value, "visitaddress");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table visituser
         *
         * @mbg.generated
         */
        public Criteria andVisitaddressLessThanOrEqualToColumn(Visituser.Column column) {
            addCriterion(new StringBuilder("visitaddress <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andVisitaddressLike(String value) {
            addCriterion("visitaddress like", value, "visitaddress");
            return (Criteria) this;
        }

        public Criteria andVisitaddressNotLike(String value) {
            addCriterion("visitaddress not like", value, "visitaddress");
            return (Criteria) this;
        }

        public Criteria andVisitaddressIn(List<String> values) {
            addCriterion("visitaddress in", values, "visitaddress");
            return (Criteria) this;
        }

        public Criteria andVisitaddressNotIn(List<String> values) {
            addCriterion("visitaddress not in", values, "visitaddress");
            return (Criteria) this;
        }

        public Criteria andVisitaddressBetween(String value1, String value2) {
            addCriterion("visitaddress between", value1, value2, "visitaddress");
            return (Criteria) this;
        }

        public Criteria andVisitaddressNotBetween(String value1, String value2) {
            addCriterion("visitaddress not between", value1, value2, "visitaddress");
            return (Criteria) this;
        }

        public Criteria andTemperatureIsNull() {
            addCriterion("temperature is null");
            return (Criteria) this;
        }

        public Criteria andTemperatureIsNotNull() {
            addCriterion("temperature is not null");
            return (Criteria) this;
        }

        public Criteria andTemperatureEqualTo(String value) {
            addCriterion("temperature =", value, "temperature");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table visituser
         *
         * @mbg.generated
         */
        public Criteria andTemperatureEqualToColumn(Visituser.Column column) {
            addCriterion(new StringBuilder("temperature = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andTemperatureNotEqualTo(String value) {
            addCriterion("temperature <>", value, "temperature");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table visituser
         *
         * @mbg.generated
         */
        public Criteria andTemperatureNotEqualToColumn(Visituser.Column column) {
            addCriterion(new StringBuilder("temperature <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andTemperatureGreaterThan(String value) {
            addCriterion("temperature >", value, "temperature");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table visituser
         *
         * @mbg.generated
         */
        public Criteria andTemperatureGreaterThanColumn(Visituser.Column column) {
            addCriterion(new StringBuilder("temperature > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andTemperatureGreaterThanOrEqualTo(String value) {
            addCriterion("temperature >=", value, "temperature");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table visituser
         *
         * @mbg.generated
         */
        public Criteria andTemperatureGreaterThanOrEqualToColumn(Visituser.Column column) {
            addCriterion(new StringBuilder("temperature >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andTemperatureLessThan(String value) {
            addCriterion("temperature <", value, "temperature");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table visituser
         *
         * @mbg.generated
         */
        public Criteria andTemperatureLessThanColumn(Visituser.Column column) {
            addCriterion(new StringBuilder("temperature < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andTemperatureLessThanOrEqualTo(String value) {
            addCriterion("temperature <=", value, "temperature");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table visituser
         *
         * @mbg.generated
         */
        public Criteria andTemperatureLessThanOrEqualToColumn(Visituser.Column column) {
            addCriterion(new StringBuilder("temperature <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andTemperatureLike(String value) {
            addCriterion("temperature like", value, "temperature");
            return (Criteria) this;
        }

        public Criteria andTemperatureNotLike(String value) {
            addCriterion("temperature not like", value, "temperature");
            return (Criteria) this;
        }

        public Criteria andTemperatureIn(List<String> values) {
            addCriterion("temperature in", values, "temperature");
            return (Criteria) this;
        }

        public Criteria andTemperatureNotIn(List<String> values) {
            addCriterion("temperature not in", values, "temperature");
            return (Criteria) this;
        }

        public Criteria andTemperatureBetween(String value1, String value2) {
            addCriterion("temperature between", value1, value2, "temperature");
            return (Criteria) this;
        }

        public Criteria andTemperatureNotBetween(String value1, String value2) {
            addCriterion("temperature not between", value1, value2, "temperature");
            return (Criteria) this;
        }

        public Criteria andVisitcodeIsNull() {
            addCriterion("visitcode is null");
            return (Criteria) this;
        }

        public Criteria andVisitcodeIsNotNull() {
            addCriterion("visitcode is not null");
            return (Criteria) this;
        }

        public Criteria andVisitcodeEqualTo(Integer value) {
            addCriterion("visitcode =", value, "visitcode");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table visituser
         *
         * @mbg.generated
         */
        public Criteria andVisitcodeEqualToColumn(Visituser.Column column) {
            addCriterion(new StringBuilder("visitcode = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andVisitcodeNotEqualTo(Integer value) {
            addCriterion("visitcode <>", value, "visitcode");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table visituser
         *
         * @mbg.generated
         */
        public Criteria andVisitcodeNotEqualToColumn(Visituser.Column column) {
            addCriterion(new StringBuilder("visitcode <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andVisitcodeGreaterThan(Integer value) {
            addCriterion("visitcode >", value, "visitcode");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table visituser
         *
         * @mbg.generated
         */
        public Criteria andVisitcodeGreaterThanColumn(Visituser.Column column) {
            addCriterion(new StringBuilder("visitcode > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andVisitcodeGreaterThanOrEqualTo(Integer value) {
            addCriterion("visitcode >=", value, "visitcode");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table visituser
         *
         * @mbg.generated
         */
        public Criteria andVisitcodeGreaterThanOrEqualToColumn(Visituser.Column column) {
            addCriterion(new StringBuilder("visitcode >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andVisitcodeLessThan(Integer value) {
            addCriterion("visitcode <", value, "visitcode");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table visituser
         *
         * @mbg.generated
         */
        public Criteria andVisitcodeLessThanColumn(Visituser.Column column) {
            addCriterion(new StringBuilder("visitcode < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andVisitcodeLessThanOrEqualTo(Integer value) {
            addCriterion("visitcode <=", value, "visitcode");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table visituser
         *
         * @mbg.generated
         */
        public Criteria andVisitcodeLessThanOrEqualToColumn(Visituser.Column column) {
            addCriterion(new StringBuilder("visitcode <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andVisitcodeIn(List<Integer> values) {
            addCriterion("visitcode in", values, "visitcode");
            return (Criteria) this;
        }

        public Criteria andVisitcodeNotIn(List<Integer> values) {
            addCriterion("visitcode not in", values, "visitcode");
            return (Criteria) this;
        }

        public Criteria andVisitcodeBetween(Integer value1, Integer value2) {
            addCriterion("visitcode between", value1, value2, "visitcode");
            return (Criteria) this;
        }

        public Criteria andVisitcodeNotBetween(Integer value1, Integer value2) {
            addCriterion("visitcode not between", value1, value2, "visitcode");
            return (Criteria) this;
        }

        public Criteria andRemarkIsNull() {
            addCriterion("remark is null");
            return (Criteria) this;
        }

        public Criteria andRemarkIsNotNull() {
            addCriterion("remark is not null");
            return (Criteria) this;
        }

        public Criteria andRemarkEqualTo(String value) {
            addCriterion("remark =", value, "remark");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table visituser
         *
         * @mbg.generated
         */
        public Criteria andRemarkEqualToColumn(Visituser.Column column) {
            addCriterion(new StringBuilder("remark = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andRemarkNotEqualTo(String value) {
            addCriterion("remark <>", value, "remark");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table visituser
         *
         * @mbg.generated
         */
        public Criteria andRemarkNotEqualToColumn(Visituser.Column column) {
            addCriterion(new StringBuilder("remark <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andRemarkGreaterThan(String value) {
            addCriterion("remark >", value, "remark");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table visituser
         *
         * @mbg.generated
         */
        public Criteria andRemarkGreaterThanColumn(Visituser.Column column) {
            addCriterion(new StringBuilder("remark > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andRemarkGreaterThanOrEqualTo(String value) {
            addCriterion("remark >=", value, "remark");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table visituser
         *
         * @mbg.generated
         */
        public Criteria andRemarkGreaterThanOrEqualToColumn(Visituser.Column column) {
            addCriterion(new StringBuilder("remark >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andRemarkLessThan(String value) {
            addCriterion("remark <", value, "remark");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table visituser
         *
         * @mbg.generated
         */
        public Criteria andRemarkLessThanColumn(Visituser.Column column) {
            addCriterion(new StringBuilder("remark < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andRemarkLessThanOrEqualTo(String value) {
            addCriterion("remark <=", value, "remark");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table visituser
         *
         * @mbg.generated
         */
        public Criteria andRemarkLessThanOrEqualToColumn(Visituser.Column column) {
            addCriterion(new StringBuilder("remark <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andRemarkLike(String value) {
            addCriterion("remark like", value, "remark");
            return (Criteria) this;
        }

        public Criteria andRemarkNotLike(String value) {
            addCriterion("remark not like", value, "remark");
            return (Criteria) this;
        }

        public Criteria andRemarkIn(List<String> values) {
            addCriterion("remark in", values, "remark");
            return (Criteria) this;
        }

        public Criteria andRemarkNotIn(List<String> values) {
            addCriterion("remark not in", values, "remark");
            return (Criteria) this;
        }

        public Criteria andRemarkBetween(String value1, String value2) {
            addCriterion("remark between", value1, value2, "remark");
            return (Criteria) this;
        }

        public Criteria andRemarkNotBetween(String value1, String value2) {
            addCriterion("remark not between", value1, value2, "remark");
            return (Criteria) this;
        }

        public Criteria andAddtimeIsNull() {
            addCriterion("addtime is null");
            return (Criteria) this;
        }

        public Criteria andAddtimeIsNotNull() {
            addCriterion("addtime is not null");
            return (Criteria) this;
        }

        public Criteria andAddtimeEqualTo(LocalDateTime value) {
            addCriterion("addtime =", value, "addtime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table visituser
         *
         * @mbg.generated
         */
        public Criteria andAddtimeEqualToColumn(Visituser.Column column) {
            addCriterion(new StringBuilder("addtime = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andAddtimeNotEqualTo(LocalDateTime value) {
            addCriterion("addtime <>", value, "addtime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table visituser
         *
         * @mbg.generated
         */
        public Criteria andAddtimeNotEqualToColumn(Visituser.Column column) {
            addCriterion(new StringBuilder("addtime <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andAddtimeGreaterThan(LocalDateTime value) {
            addCriterion("addtime >", value, "addtime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table visituser
         *
         * @mbg.generated
         */
        public Criteria andAddtimeGreaterThanColumn(Visituser.Column column) {
            addCriterion(new StringBuilder("addtime > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andAddtimeGreaterThanOrEqualTo(LocalDateTime value) {
            addCriterion("addtime >=", value, "addtime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table visituser
         *
         * @mbg.generated
         */
        public Criteria andAddtimeGreaterThanOrEqualToColumn(Visituser.Column column) {
            addCriterion(new StringBuilder("addtime >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andAddtimeLessThan(LocalDateTime value) {
            addCriterion("addtime <", value, "addtime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table visituser
         *
         * @mbg.generated
         */
        public Criteria andAddtimeLessThanColumn(Visituser.Column column) {
            addCriterion(new StringBuilder("addtime < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andAddtimeLessThanOrEqualTo(LocalDateTime value) {
            addCriterion("addtime <=", value, "addtime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table visituser
         *
         * @mbg.generated
         */
        public Criteria andAddtimeLessThanOrEqualToColumn(Visituser.Column column) {
            addCriterion(new StringBuilder("addtime <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andAddtimeIn(List<LocalDateTime> values) {
            addCriterion("addtime in", values, "addtime");
            return (Criteria) this;
        }

        public Criteria andAddtimeNotIn(List<LocalDateTime> values) {
            addCriterion("addtime not in", values, "addtime");
            return (Criteria) this;
        }

        public Criteria andAddtimeBetween(LocalDateTime value1, LocalDateTime value2) {
            addCriterion("addtime between", value1, value2, "addtime");
            return (Criteria) this;
        }

        public Criteria andAddtimeNotBetween(LocalDateTime value1, LocalDateTime value2) {
            addCriterion("addtime not between", value1, value2, "addtime");
            return (Criteria) this;
        }

        public Criteria andModifytimeIsNull() {
            addCriterion("modifytime is null");
            return (Criteria) this;
        }

        public Criteria andModifytimeIsNotNull() {
            addCriterion("modifytime is not null");
            return (Criteria) this;
        }

        public Criteria andModifytimeEqualTo(LocalDateTime value) {
            addCriterion("modifytime =", value, "modifytime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table visituser
         *
         * @mbg.generated
         */
        public Criteria andModifytimeEqualToColumn(Visituser.Column column) {
            addCriterion(new StringBuilder("modifytime = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andModifytimeNotEqualTo(LocalDateTime value) {
            addCriterion("modifytime <>", value, "modifytime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table visituser
         *
         * @mbg.generated
         */
        public Criteria andModifytimeNotEqualToColumn(Visituser.Column column) {
            addCriterion(new StringBuilder("modifytime <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andModifytimeGreaterThan(LocalDateTime value) {
            addCriterion("modifytime >", value, "modifytime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table visituser
         *
         * @mbg.generated
         */
        public Criteria andModifytimeGreaterThanColumn(Visituser.Column column) {
            addCriterion(new StringBuilder("modifytime > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andModifytimeGreaterThanOrEqualTo(LocalDateTime value) {
            addCriterion("modifytime >=", value, "modifytime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table visituser
         *
         * @mbg.generated
         */
        public Criteria andModifytimeGreaterThanOrEqualToColumn(Visituser.Column column) {
            addCriterion(new StringBuilder("modifytime >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andModifytimeLessThan(LocalDateTime value) {
            addCriterion("modifytime <", value, "modifytime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table visituser
         *
         * @mbg.generated
         */
        public Criteria andModifytimeLessThanColumn(Visituser.Column column) {
            addCriterion(new StringBuilder("modifytime < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andModifytimeLessThanOrEqualTo(LocalDateTime value) {
            addCriterion("modifytime <=", value, "modifytime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table visituser
         *
         * @mbg.generated
         */
        public Criteria andModifytimeLessThanOrEqualToColumn(Visituser.Column column) {
            addCriterion(new StringBuilder("modifytime <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andModifytimeIn(List<LocalDateTime> values) {
            addCriterion("modifytime in", values, "modifytime");
            return (Criteria) this;
        }

        public Criteria andModifytimeNotIn(List<LocalDateTime> values) {
            addCriterion("modifytime not in", values, "modifytime");
            return (Criteria) this;
        }

        public Criteria andModifytimeBetween(LocalDateTime value1, LocalDateTime value2) {
            addCriterion("modifytime between", value1, value2, "modifytime");
            return (Criteria) this;
        }

        public Criteria andModifytimeNotBetween(LocalDateTime value1, LocalDateTime value2) {
            addCriterion("modifytime not between", value1, value2, "modifytime");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table visituser
     *
     * @mbg.generated do_not_delete_during_merge
     */
    public static class Criteria extends GeneratedCriteria {
        /**
         * This field was generated by MyBatis Generator.
         * This field corresponds to the database table visituser
         *
         * @mbg.generated
         */
        private VisituserExample example;

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table visituser
         *
         * @mbg.generated
         */
        protected Criteria(VisituserExample example) {
            super();
            this.example = example;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table visituser
         *
         * @mbg.generated
         */
        public VisituserExample example() {
            return this.example;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table visituser
         *
         * @mbg.generated
         */
        @Deprecated
        public Criteria andIf(boolean ifAdd, ICriteriaAdd add) {
            if (ifAdd) {
                add.add(this);
            }
            return this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table visituser
         *
         * @mbg.generated
         */
        public Criteria when(boolean condition, ICriteriaWhen then) {
            if (condition) {
                then.criteria(this);
            }
            return this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table visituser
         *
         * @mbg.generated
         */
        public Criteria when(boolean condition, ICriteriaWhen then, ICriteriaWhen otherwise) {
            if (condition) {
                then.criteria(this);
            } else {
                otherwise.criteria(this);
            }
            return this;
        }

        @Deprecated
        public interface ICriteriaAdd {
            /**
             * This method was generated by MyBatis Generator.
             * This method corresponds to the database table visituser
             *
             * @mbg.generated
             */
            Criteria add(Criteria add);
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table visituser
     *
     * @mbg.generated
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }

    public interface ICriteriaWhen {
        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table visituser
         *
         * @mbg.generated
         */
        void criteria(Criteria criteria);
    }

    public interface IExampleWhen {
        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table visituser
         *
         * @mbg.generated
         */
        void example(org.linlinjava.litemall.db.domain.VisituserExample example);
    }
}