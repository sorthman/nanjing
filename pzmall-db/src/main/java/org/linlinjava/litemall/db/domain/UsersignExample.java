package org.linlinjava.litemall.db.domain;

import java.time.LocalDateTime;
import java.util.ArrayList;
import java.util.List;

public class UsersignExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table usersign
     *
     * @mbg.generated
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table usersign
     *
     * @mbg.generated
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table usersign
     *
     * @mbg.generated
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table usersign
     *
     * @mbg.generated
     */
    public UsersignExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table usersign
     *
     * @mbg.generated
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table usersign
     *
     * @mbg.generated
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table usersign
     *
     * @mbg.generated
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table usersign
     *
     * @mbg.generated
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table usersign
     *
     * @mbg.generated
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table usersign
     *
     * @mbg.generated
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table usersign
     *
     * @mbg.generated
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table usersign
     *
     * @mbg.generated
     */
    public UsersignExample orderBy(String orderByClause) {
        this.setOrderByClause(orderByClause);
        return this;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table usersign
     *
     * @mbg.generated
     */
    public UsersignExample orderBy(String ... orderByClauses) {
        StringBuffer sb = new StringBuffer();
        for (int i = 0; i < orderByClauses.length; i++) {
            sb.append(orderByClauses[i]);
            if (i < orderByClauses.length - 1) {
                sb.append(" , ");
            }
        }
        this.setOrderByClause(sb.toString());
        return this;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table usersign
     *
     * @mbg.generated
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table usersign
     *
     * @mbg.generated
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria(this);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table usersign
     *
     * @mbg.generated
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table usersign
     *
     * @mbg.generated
     */
    public static Criteria newAndCreateCriteria() {
        UsersignExample example = new UsersignExample();
        return example.createCriteria();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table usersign
     *
     * @mbg.generated
     */
    public UsersignExample when(boolean condition, IExampleWhen then) {
        if (condition) {
            then.example(this);
        }
        return this;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table usersign
     *
     * @mbg.generated
     */
    public UsersignExample when(boolean condition, IExampleWhen then, IExampleWhen otherwise) {
        if (condition) {
            then.example(this);
        } else {
            otherwise.example(this);
        }
        return this;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table usersign
     *
     * @mbg.generated
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andIdIsNull() {
            addCriterion("id is null");
            return (Criteria) this;
        }

        public Criteria andIdIsNotNull() {
            addCriterion("id is not null");
            return (Criteria) this;
        }

        public Criteria andIdEqualTo(Integer value) {
            addCriterion("id =", value, "id");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table usersign
         *
         * @mbg.generated
         */
        public Criteria andIdEqualToColumn(Usersign.Column column) {
            addCriterion(new StringBuilder("id = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIdNotEqualTo(Integer value) {
            addCriterion("id <>", value, "id");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table usersign
         *
         * @mbg.generated
         */
        public Criteria andIdNotEqualToColumn(Usersign.Column column) {
            addCriterion(new StringBuilder("id <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIdGreaterThan(Integer value) {
            addCriterion("id >", value, "id");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table usersign
         *
         * @mbg.generated
         */
        public Criteria andIdGreaterThanColumn(Usersign.Column column) {
            addCriterion(new StringBuilder("id > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("id >=", value, "id");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table usersign
         *
         * @mbg.generated
         */
        public Criteria andIdGreaterThanOrEqualToColumn(Usersign.Column column) {
            addCriterion(new StringBuilder("id >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIdLessThan(Integer value) {
            addCriterion("id <", value, "id");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table usersign
         *
         * @mbg.generated
         */
        public Criteria andIdLessThanColumn(Usersign.Column column) {
            addCriterion(new StringBuilder("id < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIdLessThanOrEqualTo(Integer value) {
            addCriterion("id <=", value, "id");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table usersign
         *
         * @mbg.generated
         */
        public Criteria andIdLessThanOrEqualToColumn(Usersign.Column column) {
            addCriterion(new StringBuilder("id <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIdIn(List<Integer> values) {
            addCriterion("id in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotIn(List<Integer> values) {
            addCriterion("id not in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdBetween(Integer value1, Integer value2) {
            addCriterion("id between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotBetween(Integer value1, Integer value2) {
            addCriterion("id not between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andUidIsNull() {
            addCriterion("`uid` is null");
            return (Criteria) this;
        }

        public Criteria andUidIsNotNull() {
            addCriterion("`uid` is not null");
            return (Criteria) this;
        }

        public Criteria andUidEqualTo(Integer value) {
            addCriterion("`uid` =", value, "uid");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table usersign
         *
         * @mbg.generated
         */
        public Criteria andUidEqualToColumn(Usersign.Column column) {
            addCriterion(new StringBuilder("`uid` = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andUidNotEqualTo(Integer value) {
            addCriterion("`uid` <>", value, "uid");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table usersign
         *
         * @mbg.generated
         */
        public Criteria andUidNotEqualToColumn(Usersign.Column column) {
            addCriterion(new StringBuilder("`uid` <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andUidGreaterThan(Integer value) {
            addCriterion("`uid` >", value, "uid");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table usersign
         *
         * @mbg.generated
         */
        public Criteria andUidGreaterThanColumn(Usersign.Column column) {
            addCriterion(new StringBuilder("`uid` > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andUidGreaterThanOrEqualTo(Integer value) {
            addCriterion("`uid` >=", value, "uid");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table usersign
         *
         * @mbg.generated
         */
        public Criteria andUidGreaterThanOrEqualToColumn(Usersign.Column column) {
            addCriterion(new StringBuilder("`uid` >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andUidLessThan(Integer value) {
            addCriterion("`uid` <", value, "uid");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table usersign
         *
         * @mbg.generated
         */
        public Criteria andUidLessThanColumn(Usersign.Column column) {
            addCriterion(new StringBuilder("`uid` < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andUidLessThanOrEqualTo(Integer value) {
            addCriterion("`uid` <=", value, "uid");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table usersign
         *
         * @mbg.generated
         */
        public Criteria andUidLessThanOrEqualToColumn(Usersign.Column column) {
            addCriterion(new StringBuilder("`uid` <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andUidIn(List<Integer> values) {
            addCriterion("`uid` in", values, "uid");
            return (Criteria) this;
        }

        public Criteria andUidNotIn(List<Integer> values) {
            addCriterion("`uid` not in", values, "uid");
            return (Criteria) this;
        }

        public Criteria andUidBetween(Integer value1, Integer value2) {
            addCriterion("`uid` between", value1, value2, "uid");
            return (Criteria) this;
        }

        public Criteria andUidNotBetween(Integer value1, Integer value2) {
            addCriterion("`uid` not between", value1, value2, "uid");
            return (Criteria) this;
        }

        public Criteria andTemperatureIsNull() {
            addCriterion("temperature is null");
            return (Criteria) this;
        }

        public Criteria andTemperatureIsNotNull() {
            addCriterion("temperature is not null");
            return (Criteria) this;
        }

        public Criteria andTemperatureEqualTo(String value) {
            addCriterion("temperature =", value, "temperature");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table usersign
         *
         * @mbg.generated
         */
        public Criteria andTemperatureEqualToColumn(Usersign.Column column) {
            addCriterion(new StringBuilder("temperature = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andTemperatureNotEqualTo(String value) {
            addCriterion("temperature <>", value, "temperature");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table usersign
         *
         * @mbg.generated
         */
        public Criteria andTemperatureNotEqualToColumn(Usersign.Column column) {
            addCriterion(new StringBuilder("temperature <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andTemperatureGreaterThan(String value) {
            addCriterion("temperature >", value, "temperature");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table usersign
         *
         * @mbg.generated
         */
        public Criteria andTemperatureGreaterThanColumn(Usersign.Column column) {
            addCriterion(new StringBuilder("temperature > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andTemperatureGreaterThanOrEqualTo(String value) {
            addCriterion("temperature >=", value, "temperature");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table usersign
         *
         * @mbg.generated
         */
        public Criteria andTemperatureGreaterThanOrEqualToColumn(Usersign.Column column) {
            addCriterion(new StringBuilder("temperature >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andTemperatureLessThan(String value) {
            addCriterion("temperature <", value, "temperature");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table usersign
         *
         * @mbg.generated
         */
        public Criteria andTemperatureLessThanColumn(Usersign.Column column) {
            addCriterion(new StringBuilder("temperature < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andTemperatureLessThanOrEqualTo(String value) {
            addCriterion("temperature <=", value, "temperature");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table usersign
         *
         * @mbg.generated
         */
        public Criteria andTemperatureLessThanOrEqualToColumn(Usersign.Column column) {
            addCriterion(new StringBuilder("temperature <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andTemperatureLike(String value) {
            addCriterion("temperature like", value, "temperature");
            return (Criteria) this;
        }

        public Criteria andTemperatureNotLike(String value) {
            addCriterion("temperature not like", value, "temperature");
            return (Criteria) this;
        }

        public Criteria andTemperatureIn(List<String> values) {
            addCriterion("temperature in", values, "temperature");
            return (Criteria) this;
        }

        public Criteria andTemperatureNotIn(List<String> values) {
            addCriterion("temperature not in", values, "temperature");
            return (Criteria) this;
        }

        public Criteria andTemperatureBetween(String value1, String value2) {
            addCriterion("temperature between", value1, value2, "temperature");
            return (Criteria) this;
        }

        public Criteria andTemperatureNotBetween(String value1, String value2) {
            addCriterion("temperature not between", value1, value2, "temperature");
            return (Criteria) this;
        }

        public Criteria andIfkesouIsNull() {
            addCriterion("ifkesou is null");
            return (Criteria) this;
        }

        public Criteria andIfkesouIsNotNull() {
            addCriterion("ifkesou is not null");
            return (Criteria) this;
        }

        public Criteria andIfkesouEqualTo(String value) {
            addCriterion("ifkesou =", value, "ifkesou");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table usersign
         *
         * @mbg.generated
         */
        public Criteria andIfkesouEqualToColumn(Usersign.Column column) {
            addCriterion(new StringBuilder("ifkesou = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIfkesouNotEqualTo(String value) {
            addCriterion("ifkesou <>", value, "ifkesou");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table usersign
         *
         * @mbg.generated
         */
        public Criteria andIfkesouNotEqualToColumn(Usersign.Column column) {
            addCriterion(new StringBuilder("ifkesou <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIfkesouGreaterThan(String value) {
            addCriterion("ifkesou >", value, "ifkesou");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table usersign
         *
         * @mbg.generated
         */
        public Criteria andIfkesouGreaterThanColumn(Usersign.Column column) {
            addCriterion(new StringBuilder("ifkesou > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIfkesouGreaterThanOrEqualTo(String value) {
            addCriterion("ifkesou >=", value, "ifkesou");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table usersign
         *
         * @mbg.generated
         */
        public Criteria andIfkesouGreaterThanOrEqualToColumn(Usersign.Column column) {
            addCriterion(new StringBuilder("ifkesou >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIfkesouLessThan(String value) {
            addCriterion("ifkesou <", value, "ifkesou");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table usersign
         *
         * @mbg.generated
         */
        public Criteria andIfkesouLessThanColumn(Usersign.Column column) {
            addCriterion(new StringBuilder("ifkesou < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIfkesouLessThanOrEqualTo(String value) {
            addCriterion("ifkesou <=", value, "ifkesou");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table usersign
         *
         * @mbg.generated
         */
        public Criteria andIfkesouLessThanOrEqualToColumn(Usersign.Column column) {
            addCriterion(new StringBuilder("ifkesou <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIfkesouLike(String value) {
            addCriterion("ifkesou like", value, "ifkesou");
            return (Criteria) this;
        }

        public Criteria andIfkesouNotLike(String value) {
            addCriterion("ifkesou not like", value, "ifkesou");
            return (Criteria) this;
        }

        public Criteria andIfkesouIn(List<String> values) {
            addCriterion("ifkesou in", values, "ifkesou");
            return (Criteria) this;
        }

        public Criteria andIfkesouNotIn(List<String> values) {
            addCriterion("ifkesou not in", values, "ifkesou");
            return (Criteria) this;
        }

        public Criteria andIfkesouBetween(String value1, String value2) {
            addCriterion("ifkesou between", value1, value2, "ifkesou");
            return (Criteria) this;
        }

        public Criteria andIfkesouNotBetween(String value1, String value2) {
            addCriterion("ifkesou not between", value1, value2, "ifkesou");
            return (Criteria) this;
        }

        public Criteria andHealthinfoIsNull() {
            addCriterion("healthinfo is null");
            return (Criteria) this;
        }

        public Criteria andHealthinfoIsNotNull() {
            addCriterion("healthinfo is not null");
            return (Criteria) this;
        }

        public Criteria andHealthinfoEqualTo(String value) {
            addCriterion("healthinfo =", value, "healthinfo");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table usersign
         *
         * @mbg.generated
         */
        public Criteria andHealthinfoEqualToColumn(Usersign.Column column) {
            addCriterion(new StringBuilder("healthinfo = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andHealthinfoNotEqualTo(String value) {
            addCriterion("healthinfo <>", value, "healthinfo");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table usersign
         *
         * @mbg.generated
         */
        public Criteria andHealthinfoNotEqualToColumn(Usersign.Column column) {
            addCriterion(new StringBuilder("healthinfo <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andHealthinfoGreaterThan(String value) {
            addCriterion("healthinfo >", value, "healthinfo");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table usersign
         *
         * @mbg.generated
         */
        public Criteria andHealthinfoGreaterThanColumn(Usersign.Column column) {
            addCriterion(new StringBuilder("healthinfo > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andHealthinfoGreaterThanOrEqualTo(String value) {
            addCriterion("healthinfo >=", value, "healthinfo");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table usersign
         *
         * @mbg.generated
         */
        public Criteria andHealthinfoGreaterThanOrEqualToColumn(Usersign.Column column) {
            addCriterion(new StringBuilder("healthinfo >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andHealthinfoLessThan(String value) {
            addCriterion("healthinfo <", value, "healthinfo");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table usersign
         *
         * @mbg.generated
         */
        public Criteria andHealthinfoLessThanColumn(Usersign.Column column) {
            addCriterion(new StringBuilder("healthinfo < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andHealthinfoLessThanOrEqualTo(String value) {
            addCriterion("healthinfo <=", value, "healthinfo");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table usersign
         *
         * @mbg.generated
         */
        public Criteria andHealthinfoLessThanOrEqualToColumn(Usersign.Column column) {
            addCriterion(new StringBuilder("healthinfo <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andHealthinfoLike(String value) {
            addCriterion("healthinfo like", value, "healthinfo");
            return (Criteria) this;
        }

        public Criteria andHealthinfoNotLike(String value) {
            addCriterion("healthinfo not like", value, "healthinfo");
            return (Criteria) this;
        }

        public Criteria andHealthinfoIn(List<String> values) {
            addCriterion("healthinfo in", values, "healthinfo");
            return (Criteria) this;
        }

        public Criteria andHealthinfoNotIn(List<String> values) {
            addCriterion("healthinfo not in", values, "healthinfo");
            return (Criteria) this;
        }

        public Criteria andHealthinfoBetween(String value1, String value2) {
            addCriterion("healthinfo between", value1, value2, "healthinfo");
            return (Criteria) this;
        }

        public Criteria andHealthinfoNotBetween(String value1, String value2) {
            addCriterion("healthinfo not between", value1, value2, "healthinfo");
            return (Criteria) this;
        }

        public Criteria andImgurlIsNull() {
            addCriterion("imgurl is null");
            return (Criteria) this;
        }

        public Criteria andImgurlIsNotNull() {
            addCriterion("imgurl is not null");
            return (Criteria) this;
        }

        public Criteria andImgurlEqualTo(String value) {
            addCriterion("imgurl =", value, "imgurl");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table usersign
         *
         * @mbg.generated
         */
        public Criteria andImgurlEqualToColumn(Usersign.Column column) {
            addCriterion(new StringBuilder("imgurl = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andImgurlNotEqualTo(String value) {
            addCriterion("imgurl <>", value, "imgurl");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table usersign
         *
         * @mbg.generated
         */
        public Criteria andImgurlNotEqualToColumn(Usersign.Column column) {
            addCriterion(new StringBuilder("imgurl <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andImgurlGreaterThan(String value) {
            addCriterion("imgurl >", value, "imgurl");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table usersign
         *
         * @mbg.generated
         */
        public Criteria andImgurlGreaterThanColumn(Usersign.Column column) {
            addCriterion(new StringBuilder("imgurl > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andImgurlGreaterThanOrEqualTo(String value) {
            addCriterion("imgurl >=", value, "imgurl");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table usersign
         *
         * @mbg.generated
         */
        public Criteria andImgurlGreaterThanOrEqualToColumn(Usersign.Column column) {
            addCriterion(new StringBuilder("imgurl >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andImgurlLessThan(String value) {
            addCriterion("imgurl <", value, "imgurl");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table usersign
         *
         * @mbg.generated
         */
        public Criteria andImgurlLessThanColumn(Usersign.Column column) {
            addCriterion(new StringBuilder("imgurl < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andImgurlLessThanOrEqualTo(String value) {
            addCriterion("imgurl <=", value, "imgurl");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table usersign
         *
         * @mbg.generated
         */
        public Criteria andImgurlLessThanOrEqualToColumn(Usersign.Column column) {
            addCriterion(new StringBuilder("imgurl <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andImgurlLike(String value) {
            addCriterion("imgurl like", value, "imgurl");
            return (Criteria) this;
        }

        public Criteria andImgurlNotLike(String value) {
            addCriterion("imgurl not like", value, "imgurl");
            return (Criteria) this;
        }

        public Criteria andImgurlIn(List<String> values) {
            addCriterion("imgurl in", values, "imgurl");
            return (Criteria) this;
        }

        public Criteria andImgurlNotIn(List<String> values) {
            addCriterion("imgurl not in", values, "imgurl");
            return (Criteria) this;
        }

        public Criteria andImgurlBetween(String value1, String value2) {
            addCriterion("imgurl between", value1, value2, "imgurl");
            return (Criteria) this;
        }

        public Criteria andImgurlNotBetween(String value1, String value2) {
            addCriterion("imgurl not between", value1, value2, "imgurl");
            return (Criteria) this;
        }

        public Criteria andVideourlIsNull() {
            addCriterion("videourl is null");
            return (Criteria) this;
        }

        public Criteria andVideourlIsNotNull() {
            addCriterion("videourl is not null");
            return (Criteria) this;
        }

        public Criteria andVideourlEqualTo(String value) {
            addCriterion("videourl =", value, "videourl");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table usersign
         *
         * @mbg.generated
         */
        public Criteria andVideourlEqualToColumn(Usersign.Column column) {
            addCriterion(new StringBuilder("videourl = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andVideourlNotEqualTo(String value) {
            addCriterion("videourl <>", value, "videourl");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table usersign
         *
         * @mbg.generated
         */
        public Criteria andVideourlNotEqualToColumn(Usersign.Column column) {
            addCriterion(new StringBuilder("videourl <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andVideourlGreaterThan(String value) {
            addCriterion("videourl >", value, "videourl");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table usersign
         *
         * @mbg.generated
         */
        public Criteria andVideourlGreaterThanColumn(Usersign.Column column) {
            addCriterion(new StringBuilder("videourl > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andVideourlGreaterThanOrEqualTo(String value) {
            addCriterion("videourl >=", value, "videourl");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table usersign
         *
         * @mbg.generated
         */
        public Criteria andVideourlGreaterThanOrEqualToColumn(Usersign.Column column) {
            addCriterion(new StringBuilder("videourl >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andVideourlLessThan(String value) {
            addCriterion("videourl <", value, "videourl");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table usersign
         *
         * @mbg.generated
         */
        public Criteria andVideourlLessThanColumn(Usersign.Column column) {
            addCriterion(new StringBuilder("videourl < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andVideourlLessThanOrEqualTo(String value) {
            addCriterion("videourl <=", value, "videourl");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table usersign
         *
         * @mbg.generated
         */
        public Criteria andVideourlLessThanOrEqualToColumn(Usersign.Column column) {
            addCriterion(new StringBuilder("videourl <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andVideourlLike(String value) {
            addCriterion("videourl like", value, "videourl");
            return (Criteria) this;
        }

        public Criteria andVideourlNotLike(String value) {
            addCriterion("videourl not like", value, "videourl");
            return (Criteria) this;
        }

        public Criteria andVideourlIn(List<String> values) {
            addCriterion("videourl in", values, "videourl");
            return (Criteria) this;
        }

        public Criteria andVideourlNotIn(List<String> values) {
            addCriterion("videourl not in", values, "videourl");
            return (Criteria) this;
        }

        public Criteria andVideourlBetween(String value1, String value2) {
            addCriterion("videourl between", value1, value2, "videourl");
            return (Criteria) this;
        }

        public Criteria andVideourlNotBetween(String value1, String value2) {
            addCriterion("videourl not between", value1, value2, "videourl");
            return (Criteria) this;
        }

        public Criteria andSigntimeIsNull() {
            addCriterion("signtime is null");
            return (Criteria) this;
        }

        public Criteria andSigntimeIsNotNull() {
            addCriterion("signtime is not null");
            return (Criteria) this;
        }

        public Criteria andSigntimeEqualTo(LocalDateTime value) {
            addCriterion("signtime =", value, "signtime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table usersign
         *
         * @mbg.generated
         */
        public Criteria andSigntimeEqualToColumn(Usersign.Column column) {
            addCriterion(new StringBuilder("signtime = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andSigntimeNotEqualTo(LocalDateTime value) {
            addCriterion("signtime <>", value, "signtime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table usersign
         *
         * @mbg.generated
         */
        public Criteria andSigntimeNotEqualToColumn(Usersign.Column column) {
            addCriterion(new StringBuilder("signtime <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andSigntimeGreaterThan(LocalDateTime value) {
            addCriterion("signtime >", value, "signtime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table usersign
         *
         * @mbg.generated
         */
        public Criteria andSigntimeGreaterThanColumn(Usersign.Column column) {
            addCriterion(new StringBuilder("signtime > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andSigntimeGreaterThanOrEqualTo(LocalDateTime value) {
            addCriterion("signtime >=", value, "signtime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table usersign
         *
         * @mbg.generated
         */
        public Criteria andSigntimeGreaterThanOrEqualToColumn(Usersign.Column column) {
            addCriterion(new StringBuilder("signtime >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andSigntimeLessThan(LocalDateTime value) {
            addCriterion("signtime <", value, "signtime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table usersign
         *
         * @mbg.generated
         */
        public Criteria andSigntimeLessThanColumn(Usersign.Column column) {
            addCriterion(new StringBuilder("signtime < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andSigntimeLessThanOrEqualTo(LocalDateTime value) {
            addCriterion("signtime <=", value, "signtime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table usersign
         *
         * @mbg.generated
         */
        public Criteria andSigntimeLessThanOrEqualToColumn(Usersign.Column column) {
            addCriterion(new StringBuilder("signtime <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andSigntimeIn(List<LocalDateTime> values) {
            addCriterion("signtime in", values, "signtime");
            return (Criteria) this;
        }

        public Criteria andSigntimeNotIn(List<LocalDateTime> values) {
            addCriterion("signtime not in", values, "signtime");
            return (Criteria) this;
        }

        public Criteria andSigntimeBetween(LocalDateTime value1, LocalDateTime value2) {
            addCriterion("signtime between", value1, value2, "signtime");
            return (Criteria) this;
        }

        public Criteria andSigntimeNotBetween(LocalDateTime value1, LocalDateTime value2) {
            addCriterion("signtime not between", value1, value2, "signtime");
            return (Criteria) this;
        }

        public Criteria andOtherinfoIsNull() {
            addCriterion("otherinfo is null");
            return (Criteria) this;
        }

        public Criteria andOtherinfoIsNotNull() {
            addCriterion("otherinfo is not null");
            return (Criteria) this;
        }

        public Criteria andOtherinfoEqualTo(String value) {
            addCriterion("otherinfo =", value, "otherinfo");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table usersign
         *
         * @mbg.generated
         */
        public Criteria andOtherinfoEqualToColumn(Usersign.Column column) {
            addCriterion(new StringBuilder("otherinfo = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andOtherinfoNotEqualTo(String value) {
            addCriterion("otherinfo <>", value, "otherinfo");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table usersign
         *
         * @mbg.generated
         */
        public Criteria andOtherinfoNotEqualToColumn(Usersign.Column column) {
            addCriterion(new StringBuilder("otherinfo <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andOtherinfoGreaterThan(String value) {
            addCriterion("otherinfo >", value, "otherinfo");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table usersign
         *
         * @mbg.generated
         */
        public Criteria andOtherinfoGreaterThanColumn(Usersign.Column column) {
            addCriterion(new StringBuilder("otherinfo > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andOtherinfoGreaterThanOrEqualTo(String value) {
            addCriterion("otherinfo >=", value, "otherinfo");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table usersign
         *
         * @mbg.generated
         */
        public Criteria andOtherinfoGreaterThanOrEqualToColumn(Usersign.Column column) {
            addCriterion(new StringBuilder("otherinfo >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andOtherinfoLessThan(String value) {
            addCriterion("otherinfo <", value, "otherinfo");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table usersign
         *
         * @mbg.generated
         */
        public Criteria andOtherinfoLessThanColumn(Usersign.Column column) {
            addCriterion(new StringBuilder("otherinfo < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andOtherinfoLessThanOrEqualTo(String value) {
            addCriterion("otherinfo <=", value, "otherinfo");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table usersign
         *
         * @mbg.generated
         */
        public Criteria andOtherinfoLessThanOrEqualToColumn(Usersign.Column column) {
            addCriterion(new StringBuilder("otherinfo <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andOtherinfoLike(String value) {
            addCriterion("otherinfo like", value, "otherinfo");
            return (Criteria) this;
        }

        public Criteria andOtherinfoNotLike(String value) {
            addCriterion("otherinfo not like", value, "otherinfo");
            return (Criteria) this;
        }

        public Criteria andOtherinfoIn(List<String> values) {
            addCriterion("otherinfo in", values, "otherinfo");
            return (Criteria) this;
        }

        public Criteria andOtherinfoNotIn(List<String> values) {
            addCriterion("otherinfo not in", values, "otherinfo");
            return (Criteria) this;
        }

        public Criteria andOtherinfoBetween(String value1, String value2) {
            addCriterion("otherinfo between", value1, value2, "otherinfo");
            return (Criteria) this;
        }

        public Criteria andOtherinfoNotBetween(String value1, String value2) {
            addCriterion("otherinfo not between", value1, value2, "otherinfo");
            return (Criteria) this;
        }

        public Criteria andIfstayIsNull() {
            addCriterion("ifstay is null");
            return (Criteria) this;
        }

        public Criteria andIfstayIsNotNull() {
            addCriterion("ifstay is not null");
            return (Criteria) this;
        }

        public Criteria andIfstayEqualTo(String value) {
            addCriterion("ifstay =", value, "ifstay");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table usersign
         *
         * @mbg.generated
         */
        public Criteria andIfstayEqualToColumn(Usersign.Column column) {
            addCriterion(new StringBuilder("ifstay = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIfstayNotEqualTo(String value) {
            addCriterion("ifstay <>", value, "ifstay");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table usersign
         *
         * @mbg.generated
         */
        public Criteria andIfstayNotEqualToColumn(Usersign.Column column) {
            addCriterion(new StringBuilder("ifstay <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIfstayGreaterThan(String value) {
            addCriterion("ifstay >", value, "ifstay");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table usersign
         *
         * @mbg.generated
         */
        public Criteria andIfstayGreaterThanColumn(Usersign.Column column) {
            addCriterion(new StringBuilder("ifstay > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIfstayGreaterThanOrEqualTo(String value) {
            addCriterion("ifstay >=", value, "ifstay");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table usersign
         *
         * @mbg.generated
         */
        public Criteria andIfstayGreaterThanOrEqualToColumn(Usersign.Column column) {
            addCriterion(new StringBuilder("ifstay >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIfstayLessThan(String value) {
            addCriterion("ifstay <", value, "ifstay");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table usersign
         *
         * @mbg.generated
         */
        public Criteria andIfstayLessThanColumn(Usersign.Column column) {
            addCriterion(new StringBuilder("ifstay < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIfstayLessThanOrEqualTo(String value) {
            addCriterion("ifstay <=", value, "ifstay");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table usersign
         *
         * @mbg.generated
         */
        public Criteria andIfstayLessThanOrEqualToColumn(Usersign.Column column) {
            addCriterion(new StringBuilder("ifstay <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIfstayLike(String value) {
            addCriterion("ifstay like", value, "ifstay");
            return (Criteria) this;
        }

        public Criteria andIfstayNotLike(String value) {
            addCriterion("ifstay not like", value, "ifstay");
            return (Criteria) this;
        }

        public Criteria andIfstayIn(List<String> values) {
            addCriterion("ifstay in", values, "ifstay");
            return (Criteria) this;
        }

        public Criteria andIfstayNotIn(List<String> values) {
            addCriterion("ifstay not in", values, "ifstay");
            return (Criteria) this;
        }

        public Criteria andIfstayBetween(String value1, String value2) {
            addCriterion("ifstay between", value1, value2, "ifstay");
            return (Criteria) this;
        }

        public Criteria andIfstayNotBetween(String value1, String value2) {
            addCriterion("ifstay not between", value1, value2, "ifstay");
            return (Criteria) this;
        }

        public Criteria andIfleavenjIsNull() {
            addCriterion("ifleavenj is null");
            return (Criteria) this;
        }

        public Criteria andIfleavenjIsNotNull() {
            addCriterion("ifleavenj is not null");
            return (Criteria) this;
        }

        public Criteria andIfleavenjEqualTo(String value) {
            addCriterion("ifleavenj =", value, "ifleavenj");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table usersign
         *
         * @mbg.generated
         */
        public Criteria andIfleavenjEqualToColumn(Usersign.Column column) {
            addCriterion(new StringBuilder("ifleavenj = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIfleavenjNotEqualTo(String value) {
            addCriterion("ifleavenj <>", value, "ifleavenj");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table usersign
         *
         * @mbg.generated
         */
        public Criteria andIfleavenjNotEqualToColumn(Usersign.Column column) {
            addCriterion(new StringBuilder("ifleavenj <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIfleavenjGreaterThan(String value) {
            addCriterion("ifleavenj >", value, "ifleavenj");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table usersign
         *
         * @mbg.generated
         */
        public Criteria andIfleavenjGreaterThanColumn(Usersign.Column column) {
            addCriterion(new StringBuilder("ifleavenj > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIfleavenjGreaterThanOrEqualTo(String value) {
            addCriterion("ifleavenj >=", value, "ifleavenj");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table usersign
         *
         * @mbg.generated
         */
        public Criteria andIfleavenjGreaterThanOrEqualToColumn(Usersign.Column column) {
            addCriterion(new StringBuilder("ifleavenj >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIfleavenjLessThan(String value) {
            addCriterion("ifleavenj <", value, "ifleavenj");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table usersign
         *
         * @mbg.generated
         */
        public Criteria andIfleavenjLessThanColumn(Usersign.Column column) {
            addCriterion(new StringBuilder("ifleavenj < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIfleavenjLessThanOrEqualTo(String value) {
            addCriterion("ifleavenj <=", value, "ifleavenj");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table usersign
         *
         * @mbg.generated
         */
        public Criteria andIfleavenjLessThanOrEqualToColumn(Usersign.Column column) {
            addCriterion(new StringBuilder("ifleavenj <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIfleavenjLike(String value) {
            addCriterion("ifleavenj like", value, "ifleavenj");
            return (Criteria) this;
        }

        public Criteria andIfleavenjNotLike(String value) {
            addCriterion("ifleavenj not like", value, "ifleavenj");
            return (Criteria) this;
        }

        public Criteria andIfleavenjIn(List<String> values) {
            addCriterion("ifleavenj in", values, "ifleavenj");
            return (Criteria) this;
        }

        public Criteria andIfleavenjNotIn(List<String> values) {
            addCriterion("ifleavenj not in", values, "ifleavenj");
            return (Criteria) this;
        }

        public Criteria andIfleavenjBetween(String value1, String value2) {
            addCriterion("ifleavenj between", value1, value2, "ifleavenj");
            return (Criteria) this;
        }

        public Criteria andIfleavenjNotBetween(String value1, String value2) {
            addCriterion("ifleavenj not between", value1, value2, "ifleavenj");
            return (Criteria) this;
        }

        public Criteria andIfloseIsNull() {
            addCriterion("iflose is null");
            return (Criteria) this;
        }

        public Criteria andIfloseIsNotNull() {
            addCriterion("iflose is not null");
            return (Criteria) this;
        }

        public Criteria andIfloseEqualTo(String value) {
            addCriterion("iflose =", value, "iflose");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table usersign
         *
         * @mbg.generated
         */
        public Criteria andIfloseEqualToColumn(Usersign.Column column) {
            addCriterion(new StringBuilder("iflose = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIfloseNotEqualTo(String value) {
            addCriterion("iflose <>", value, "iflose");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table usersign
         *
         * @mbg.generated
         */
        public Criteria andIfloseNotEqualToColumn(Usersign.Column column) {
            addCriterion(new StringBuilder("iflose <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIfloseGreaterThan(String value) {
            addCriterion("iflose >", value, "iflose");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table usersign
         *
         * @mbg.generated
         */
        public Criteria andIfloseGreaterThanColumn(Usersign.Column column) {
            addCriterion(new StringBuilder("iflose > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIfloseGreaterThanOrEqualTo(String value) {
            addCriterion("iflose >=", value, "iflose");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table usersign
         *
         * @mbg.generated
         */
        public Criteria andIfloseGreaterThanOrEqualToColumn(Usersign.Column column) {
            addCriterion(new StringBuilder("iflose >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIfloseLessThan(String value) {
            addCriterion("iflose <", value, "iflose");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table usersign
         *
         * @mbg.generated
         */
        public Criteria andIfloseLessThanColumn(Usersign.Column column) {
            addCriterion(new StringBuilder("iflose < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIfloseLessThanOrEqualTo(String value) {
            addCriterion("iflose <=", value, "iflose");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table usersign
         *
         * @mbg.generated
         */
        public Criteria andIfloseLessThanOrEqualToColumn(Usersign.Column column) {
            addCriterion(new StringBuilder("iflose <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIfloseLike(String value) {
            addCriterion("iflose like", value, "iflose");
            return (Criteria) this;
        }

        public Criteria andIfloseNotLike(String value) {
            addCriterion("iflose not like", value, "iflose");
            return (Criteria) this;
        }

        public Criteria andIfloseIn(List<String> values) {
            addCriterion("iflose in", values, "iflose");
            return (Criteria) this;
        }

        public Criteria andIfloseNotIn(List<String> values) {
            addCriterion("iflose not in", values, "iflose");
            return (Criteria) this;
        }

        public Criteria andIfloseBetween(String value1, String value2) {
            addCriterion("iflose between", value1, value2, "iflose");
            return (Criteria) this;
        }

        public Criteria andIfloseNotBetween(String value1, String value2) {
            addCriterion("iflose not between", value1, value2, "iflose");
            return (Criteria) this;
        }

        public Criteria andLoseinfoIsNull() {
            addCriterion("loseinfo is null");
            return (Criteria) this;
        }

        public Criteria andLoseinfoIsNotNull() {
            addCriterion("loseinfo is not null");
            return (Criteria) this;
        }

        public Criteria andLoseinfoEqualTo(String value) {
            addCriterion("loseinfo =", value, "loseinfo");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table usersign
         *
         * @mbg.generated
         */
        public Criteria andLoseinfoEqualToColumn(Usersign.Column column) {
            addCriterion(new StringBuilder("loseinfo = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andLoseinfoNotEqualTo(String value) {
            addCriterion("loseinfo <>", value, "loseinfo");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table usersign
         *
         * @mbg.generated
         */
        public Criteria andLoseinfoNotEqualToColumn(Usersign.Column column) {
            addCriterion(new StringBuilder("loseinfo <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andLoseinfoGreaterThan(String value) {
            addCriterion("loseinfo >", value, "loseinfo");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table usersign
         *
         * @mbg.generated
         */
        public Criteria andLoseinfoGreaterThanColumn(Usersign.Column column) {
            addCriterion(new StringBuilder("loseinfo > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andLoseinfoGreaterThanOrEqualTo(String value) {
            addCriterion("loseinfo >=", value, "loseinfo");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table usersign
         *
         * @mbg.generated
         */
        public Criteria andLoseinfoGreaterThanOrEqualToColumn(Usersign.Column column) {
            addCriterion(new StringBuilder("loseinfo >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andLoseinfoLessThan(String value) {
            addCriterion("loseinfo <", value, "loseinfo");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table usersign
         *
         * @mbg.generated
         */
        public Criteria andLoseinfoLessThanColumn(Usersign.Column column) {
            addCriterion(new StringBuilder("loseinfo < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andLoseinfoLessThanOrEqualTo(String value) {
            addCriterion("loseinfo <=", value, "loseinfo");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table usersign
         *
         * @mbg.generated
         */
        public Criteria andLoseinfoLessThanOrEqualToColumn(Usersign.Column column) {
            addCriterion(new StringBuilder("loseinfo <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andLoseinfoLike(String value) {
            addCriterion("loseinfo like", value, "loseinfo");
            return (Criteria) this;
        }

        public Criteria andLoseinfoNotLike(String value) {
            addCriterion("loseinfo not like", value, "loseinfo");
            return (Criteria) this;
        }

        public Criteria andLoseinfoIn(List<String> values) {
            addCriterion("loseinfo in", values, "loseinfo");
            return (Criteria) this;
        }

        public Criteria andLoseinfoNotIn(List<String> values) {
            addCriterion("loseinfo not in", values, "loseinfo");
            return (Criteria) this;
        }

        public Criteria andLoseinfoBetween(String value1, String value2) {
            addCriterion("loseinfo between", value1, value2, "loseinfo");
            return (Criteria) this;
        }

        public Criteria andLoseinfoNotBetween(String value1, String value2) {
            addCriterion("loseinfo not between", value1, value2, "loseinfo");
            return (Criteria) this;
        }

        public Criteria andDocinfoIsNull() {
            addCriterion("docinfo is null");
            return (Criteria) this;
        }

        public Criteria andDocinfoIsNotNull() {
            addCriterion("docinfo is not null");
            return (Criteria) this;
        }

        public Criteria andDocinfoEqualTo(String value) {
            addCriterion("docinfo =", value, "docinfo");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table usersign
         *
         * @mbg.generated
         */
        public Criteria andDocinfoEqualToColumn(Usersign.Column column) {
            addCriterion(new StringBuilder("docinfo = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDocinfoNotEqualTo(String value) {
            addCriterion("docinfo <>", value, "docinfo");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table usersign
         *
         * @mbg.generated
         */
        public Criteria andDocinfoNotEqualToColumn(Usersign.Column column) {
            addCriterion(new StringBuilder("docinfo <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDocinfoGreaterThan(String value) {
            addCriterion("docinfo >", value, "docinfo");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table usersign
         *
         * @mbg.generated
         */
        public Criteria andDocinfoGreaterThanColumn(Usersign.Column column) {
            addCriterion(new StringBuilder("docinfo > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDocinfoGreaterThanOrEqualTo(String value) {
            addCriterion("docinfo >=", value, "docinfo");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table usersign
         *
         * @mbg.generated
         */
        public Criteria andDocinfoGreaterThanOrEqualToColumn(Usersign.Column column) {
            addCriterion(new StringBuilder("docinfo >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDocinfoLessThan(String value) {
            addCriterion("docinfo <", value, "docinfo");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table usersign
         *
         * @mbg.generated
         */
        public Criteria andDocinfoLessThanColumn(Usersign.Column column) {
            addCriterion(new StringBuilder("docinfo < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDocinfoLessThanOrEqualTo(String value) {
            addCriterion("docinfo <=", value, "docinfo");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table usersign
         *
         * @mbg.generated
         */
        public Criteria andDocinfoLessThanOrEqualToColumn(Usersign.Column column) {
            addCriterion(new StringBuilder("docinfo <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDocinfoLike(String value) {
            addCriterion("docinfo like", value, "docinfo");
            return (Criteria) this;
        }

        public Criteria andDocinfoNotLike(String value) {
            addCriterion("docinfo not like", value, "docinfo");
            return (Criteria) this;
        }

        public Criteria andDocinfoIn(List<String> values) {
            addCriterion("docinfo in", values, "docinfo");
            return (Criteria) this;
        }

        public Criteria andDocinfoNotIn(List<String> values) {
            addCriterion("docinfo not in", values, "docinfo");
            return (Criteria) this;
        }

        public Criteria andDocinfoBetween(String value1, String value2) {
            addCriterion("docinfo between", value1, value2, "docinfo");
            return (Criteria) this;
        }

        public Criteria andDocinfoNotBetween(String value1, String value2) {
            addCriterion("docinfo not between", value1, value2, "docinfo");
            return (Criteria) this;
        }

        public Criteria andIfsafeIsNull() {
            addCriterion("ifsafe is null");
            return (Criteria) this;
        }

        public Criteria andIfsafeIsNotNull() {
            addCriterion("ifsafe is not null");
            return (Criteria) this;
        }

        public Criteria andIfsafeEqualTo(String value) {
            addCriterion("ifsafe =", value, "ifsafe");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table usersign
         *
         * @mbg.generated
         */
        public Criteria andIfsafeEqualToColumn(Usersign.Column column) {
            addCriterion(new StringBuilder("ifsafe = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIfsafeNotEqualTo(String value) {
            addCriterion("ifsafe <>", value, "ifsafe");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table usersign
         *
         * @mbg.generated
         */
        public Criteria andIfsafeNotEqualToColumn(Usersign.Column column) {
            addCriterion(new StringBuilder("ifsafe <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIfsafeGreaterThan(String value) {
            addCriterion("ifsafe >", value, "ifsafe");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table usersign
         *
         * @mbg.generated
         */
        public Criteria andIfsafeGreaterThanColumn(Usersign.Column column) {
            addCriterion(new StringBuilder("ifsafe > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIfsafeGreaterThanOrEqualTo(String value) {
            addCriterion("ifsafe >=", value, "ifsafe");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table usersign
         *
         * @mbg.generated
         */
        public Criteria andIfsafeGreaterThanOrEqualToColumn(Usersign.Column column) {
            addCriterion(new StringBuilder("ifsafe >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIfsafeLessThan(String value) {
            addCriterion("ifsafe <", value, "ifsafe");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table usersign
         *
         * @mbg.generated
         */
        public Criteria andIfsafeLessThanColumn(Usersign.Column column) {
            addCriterion(new StringBuilder("ifsafe < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIfsafeLessThanOrEqualTo(String value) {
            addCriterion("ifsafe <=", value, "ifsafe");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table usersign
         *
         * @mbg.generated
         */
        public Criteria andIfsafeLessThanOrEqualToColumn(Usersign.Column column) {
            addCriterion(new StringBuilder("ifsafe <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIfsafeLike(String value) {
            addCriterion("ifsafe like", value, "ifsafe");
            return (Criteria) this;
        }

        public Criteria andIfsafeNotLike(String value) {
            addCriterion("ifsafe not like", value, "ifsafe");
            return (Criteria) this;
        }

        public Criteria andIfsafeIn(List<String> values) {
            addCriterion("ifsafe in", values, "ifsafe");
            return (Criteria) this;
        }

        public Criteria andIfsafeNotIn(List<String> values) {
            addCriterion("ifsafe not in", values, "ifsafe");
            return (Criteria) this;
        }

        public Criteria andIfsafeBetween(String value1, String value2) {
            addCriterion("ifsafe between", value1, value2, "ifsafe");
            return (Criteria) this;
        }

        public Criteria andIfsafeNotBetween(String value1, String value2) {
            addCriterion("ifsafe not between", value1, value2, "ifsafe");
            return (Criteria) this;
        }

        public Criteria andReportnameIsNull() {
            addCriterion("reportname is null");
            return (Criteria) this;
        }

        public Criteria andReportnameIsNotNull() {
            addCriterion("reportname is not null");
            return (Criteria) this;
        }

        public Criteria andReportnameEqualTo(String value) {
            addCriterion("reportname =", value, "reportname");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table usersign
         *
         * @mbg.generated
         */
        public Criteria andReportnameEqualToColumn(Usersign.Column column) {
            addCriterion(new StringBuilder("reportname = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andReportnameNotEqualTo(String value) {
            addCriterion("reportname <>", value, "reportname");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table usersign
         *
         * @mbg.generated
         */
        public Criteria andReportnameNotEqualToColumn(Usersign.Column column) {
            addCriterion(new StringBuilder("reportname <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andReportnameGreaterThan(String value) {
            addCriterion("reportname >", value, "reportname");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table usersign
         *
         * @mbg.generated
         */
        public Criteria andReportnameGreaterThanColumn(Usersign.Column column) {
            addCriterion(new StringBuilder("reportname > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andReportnameGreaterThanOrEqualTo(String value) {
            addCriterion("reportname >=", value, "reportname");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table usersign
         *
         * @mbg.generated
         */
        public Criteria andReportnameGreaterThanOrEqualToColumn(Usersign.Column column) {
            addCriterion(new StringBuilder("reportname >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andReportnameLessThan(String value) {
            addCriterion("reportname <", value, "reportname");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table usersign
         *
         * @mbg.generated
         */
        public Criteria andReportnameLessThanColumn(Usersign.Column column) {
            addCriterion(new StringBuilder("reportname < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andReportnameLessThanOrEqualTo(String value) {
            addCriterion("reportname <=", value, "reportname");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table usersign
         *
         * @mbg.generated
         */
        public Criteria andReportnameLessThanOrEqualToColumn(Usersign.Column column) {
            addCriterion(new StringBuilder("reportname <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andReportnameLike(String value) {
            addCriterion("reportname like", value, "reportname");
            return (Criteria) this;
        }

        public Criteria andReportnameNotLike(String value) {
            addCriterion("reportname not like", value, "reportname");
            return (Criteria) this;
        }

        public Criteria andReportnameIn(List<String> values) {
            addCriterion("reportname in", values, "reportname");
            return (Criteria) this;
        }

        public Criteria andReportnameNotIn(List<String> values) {
            addCriterion("reportname not in", values, "reportname");
            return (Criteria) this;
        }

        public Criteria andReportnameBetween(String value1, String value2) {
            addCriterion("reportname between", value1, value2, "reportname");
            return (Criteria) this;
        }

        public Criteria andReportnameNotBetween(String value1, String value2) {
            addCriterion("reportname not between", value1, value2, "reportname");
            return (Criteria) this;
        }

        public Criteria andReportphoneIsNull() {
            addCriterion("reportphone is null");
            return (Criteria) this;
        }

        public Criteria andReportphoneIsNotNull() {
            addCriterion("reportphone is not null");
            return (Criteria) this;
        }

        public Criteria andReportphoneEqualTo(String value) {
            addCriterion("reportphone =", value, "reportphone");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table usersign
         *
         * @mbg.generated
         */
        public Criteria andReportphoneEqualToColumn(Usersign.Column column) {
            addCriterion(new StringBuilder("reportphone = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andReportphoneNotEqualTo(String value) {
            addCriterion("reportphone <>", value, "reportphone");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table usersign
         *
         * @mbg.generated
         */
        public Criteria andReportphoneNotEqualToColumn(Usersign.Column column) {
            addCriterion(new StringBuilder("reportphone <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andReportphoneGreaterThan(String value) {
            addCriterion("reportphone >", value, "reportphone");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table usersign
         *
         * @mbg.generated
         */
        public Criteria andReportphoneGreaterThanColumn(Usersign.Column column) {
            addCriterion(new StringBuilder("reportphone > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andReportphoneGreaterThanOrEqualTo(String value) {
            addCriterion("reportphone >=", value, "reportphone");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table usersign
         *
         * @mbg.generated
         */
        public Criteria andReportphoneGreaterThanOrEqualToColumn(Usersign.Column column) {
            addCriterion(new StringBuilder("reportphone >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andReportphoneLessThan(String value) {
            addCriterion("reportphone <", value, "reportphone");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table usersign
         *
         * @mbg.generated
         */
        public Criteria andReportphoneLessThanColumn(Usersign.Column column) {
            addCriterion(new StringBuilder("reportphone < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andReportphoneLessThanOrEqualTo(String value) {
            addCriterion("reportphone <=", value, "reportphone");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table usersign
         *
         * @mbg.generated
         */
        public Criteria andReportphoneLessThanOrEqualToColumn(Usersign.Column column) {
            addCriterion(new StringBuilder("reportphone <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andReportphoneLike(String value) {
            addCriterion("reportphone like", value, "reportphone");
            return (Criteria) this;
        }

        public Criteria andReportphoneNotLike(String value) {
            addCriterion("reportphone not like", value, "reportphone");
            return (Criteria) this;
        }

        public Criteria andReportphoneIn(List<String> values) {
            addCriterion("reportphone in", values, "reportphone");
            return (Criteria) this;
        }

        public Criteria andReportphoneNotIn(List<String> values) {
            addCriterion("reportphone not in", values, "reportphone");
            return (Criteria) this;
        }

        public Criteria andReportphoneBetween(String value1, String value2) {
            addCriterion("reportphone between", value1, value2, "reportphone");
            return (Criteria) this;
        }

        public Criteria andReportphoneNotBetween(String value1, String value2) {
            addCriterion("reportphone not between", value1, value2, "reportphone");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table usersign
     *
     * @mbg.generated do_not_delete_during_merge
     */
    public static class Criteria extends GeneratedCriteria {
        /**
         * This field was generated by MyBatis Generator.
         * This field corresponds to the database table usersign
         *
         * @mbg.generated
         */
        private UsersignExample example;

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table usersign
         *
         * @mbg.generated
         */
        protected Criteria(UsersignExample example) {
            super();
            this.example = example;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table usersign
         *
         * @mbg.generated
         */
        public UsersignExample example() {
            return this.example;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table usersign
         *
         * @mbg.generated
         */
        @Deprecated
        public Criteria andIf(boolean ifAdd, ICriteriaAdd add) {
            if (ifAdd) {
                add.add(this);
            }
            return this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table usersign
         *
         * @mbg.generated
         */
        public Criteria when(boolean condition, ICriteriaWhen then) {
            if (condition) {
                then.criteria(this);
            }
            return this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table usersign
         *
         * @mbg.generated
         */
        public Criteria when(boolean condition, ICriteriaWhen then, ICriteriaWhen otherwise) {
            if (condition) {
                then.criteria(this);
            } else {
                otherwise.criteria(this);
            }
            return this;
        }

        @Deprecated
        public interface ICriteriaAdd {
            /**
             * This method was generated by MyBatis Generator.
             * This method corresponds to the database table usersign
             *
             * @mbg.generated
             */
            Criteria add(Criteria add);
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table usersign
     *
     * @mbg.generated
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }

    public interface ICriteriaWhen {
        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table usersign
         *
         * @mbg.generated
         */
        void criteria(Criteria criteria);
    }

    public interface IExampleWhen {
        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table usersign
         *
         * @mbg.generated
         */
        void example(org.linlinjava.litemall.db.domain.UsersignExample example);
    }
}