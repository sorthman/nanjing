package org.linlinjava.litemall.db.domain;

import java.time.LocalDateTime;
import java.util.ArrayList;
import java.util.List;

public class UsertransterExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table usertranster
     *
     * @mbg.generated
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table usertranster
     *
     * @mbg.generated
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table usertranster
     *
     * @mbg.generated
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table usertranster
     *
     * @mbg.generated
     */
    public UsertransterExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table usertranster
     *
     * @mbg.generated
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table usertranster
     *
     * @mbg.generated
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table usertranster
     *
     * @mbg.generated
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table usertranster
     *
     * @mbg.generated
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table usertranster
     *
     * @mbg.generated
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table usertranster
     *
     * @mbg.generated
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table usertranster
     *
     * @mbg.generated
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table usertranster
     *
     * @mbg.generated
     */
    public UsertransterExample orderBy(String orderByClause) {
        this.setOrderByClause(orderByClause);
        return this;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table usertranster
     *
     * @mbg.generated
     */
    public UsertransterExample orderBy(String ... orderByClauses) {
        StringBuffer sb = new StringBuffer();
        for (int i = 0; i < orderByClauses.length; i++) {
            sb.append(orderByClauses[i]);
            if (i < orderByClauses.length - 1) {
                sb.append(" , ");
            }
        }
        this.setOrderByClause(sb.toString());
        return this;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table usertranster
     *
     * @mbg.generated
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table usertranster
     *
     * @mbg.generated
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria(this);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table usertranster
     *
     * @mbg.generated
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table usertranster
     *
     * @mbg.generated
     */
    public static Criteria newAndCreateCriteria() {
        UsertransterExample example = new UsertransterExample();
        return example.createCriteria();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table usertranster
     *
     * @mbg.generated
     */
    public UsertransterExample when(boolean condition, IExampleWhen then) {
        if (condition) {
            then.example(this);
        }
        return this;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table usertranster
     *
     * @mbg.generated
     */
    public UsertransterExample when(boolean condition, IExampleWhen then, IExampleWhen otherwise) {
        if (condition) {
            then.example(this);
        } else {
            otherwise.example(this);
        }
        return this;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table usertranster
     *
     * @mbg.generated
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andIdIsNull() {
            addCriterion("id is null");
            return (Criteria) this;
        }

        public Criteria andIdIsNotNull() {
            addCriterion("id is not null");
            return (Criteria) this;
        }

        public Criteria andIdEqualTo(Integer value) {
            addCriterion("id =", value, "id");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table usertranster
         *
         * @mbg.generated
         */
        public Criteria andIdEqualToColumn(Usertranster.Column column) {
            addCriterion(new StringBuilder("id = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIdNotEqualTo(Integer value) {
            addCriterion("id <>", value, "id");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table usertranster
         *
         * @mbg.generated
         */
        public Criteria andIdNotEqualToColumn(Usertranster.Column column) {
            addCriterion(new StringBuilder("id <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIdGreaterThan(Integer value) {
            addCriterion("id >", value, "id");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table usertranster
         *
         * @mbg.generated
         */
        public Criteria andIdGreaterThanColumn(Usertranster.Column column) {
            addCriterion(new StringBuilder("id > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("id >=", value, "id");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table usertranster
         *
         * @mbg.generated
         */
        public Criteria andIdGreaterThanOrEqualToColumn(Usertranster.Column column) {
            addCriterion(new StringBuilder("id >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIdLessThan(Integer value) {
            addCriterion("id <", value, "id");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table usertranster
         *
         * @mbg.generated
         */
        public Criteria andIdLessThanColumn(Usertranster.Column column) {
            addCriterion(new StringBuilder("id < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIdLessThanOrEqualTo(Integer value) {
            addCriterion("id <=", value, "id");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table usertranster
         *
         * @mbg.generated
         */
        public Criteria andIdLessThanOrEqualToColumn(Usertranster.Column column) {
            addCriterion(new StringBuilder("id <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIdIn(List<Integer> values) {
            addCriterion("id in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotIn(List<Integer> values) {
            addCriterion("id not in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdBetween(Integer value1, Integer value2) {
            addCriterion("id between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotBetween(Integer value1, Integer value2) {
            addCriterion("id not between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andUidIsNull() {
            addCriterion("`uid` is null");
            return (Criteria) this;
        }

        public Criteria andUidIsNotNull() {
            addCriterion("`uid` is not null");
            return (Criteria) this;
        }

        public Criteria andUidEqualTo(Integer value) {
            addCriterion("`uid` =", value, "uid");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table usertranster
         *
         * @mbg.generated
         */
        public Criteria andUidEqualToColumn(Usertranster.Column column) {
            addCriterion(new StringBuilder("`uid` = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andUidNotEqualTo(Integer value) {
            addCriterion("`uid` <>", value, "uid");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table usertranster
         *
         * @mbg.generated
         */
        public Criteria andUidNotEqualToColumn(Usertranster.Column column) {
            addCriterion(new StringBuilder("`uid` <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andUidGreaterThan(Integer value) {
            addCriterion("`uid` >", value, "uid");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table usertranster
         *
         * @mbg.generated
         */
        public Criteria andUidGreaterThanColumn(Usertranster.Column column) {
            addCriterion(new StringBuilder("`uid` > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andUidGreaterThanOrEqualTo(Integer value) {
            addCriterion("`uid` >=", value, "uid");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table usertranster
         *
         * @mbg.generated
         */
        public Criteria andUidGreaterThanOrEqualToColumn(Usertranster.Column column) {
            addCriterion(new StringBuilder("`uid` >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andUidLessThan(Integer value) {
            addCriterion("`uid` <", value, "uid");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table usertranster
         *
         * @mbg.generated
         */
        public Criteria andUidLessThanColumn(Usertranster.Column column) {
            addCriterion(new StringBuilder("`uid` < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andUidLessThanOrEqualTo(Integer value) {
            addCriterion("`uid` <=", value, "uid");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table usertranster
         *
         * @mbg.generated
         */
        public Criteria andUidLessThanOrEqualToColumn(Usertranster.Column column) {
            addCriterion(new StringBuilder("`uid` <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andUidIn(List<Integer> values) {
            addCriterion("`uid` in", values, "uid");
            return (Criteria) this;
        }

        public Criteria andUidNotIn(List<Integer> values) {
            addCriterion("`uid` not in", values, "uid");
            return (Criteria) this;
        }

        public Criteria andUidBetween(Integer value1, Integer value2) {
            addCriterion("`uid` between", value1, value2, "uid");
            return (Criteria) this;
        }

        public Criteria andUidNotBetween(Integer value1, Integer value2) {
            addCriterion("`uid` not between", value1, value2, "uid");
            return (Criteria) this;
        }

        public Criteria andNameIsNull() {
            addCriterion("`name` is null");
            return (Criteria) this;
        }

        public Criteria andNameIsNotNull() {
            addCriterion("`name` is not null");
            return (Criteria) this;
        }

        public Criteria andNameEqualTo(String value) {
            addCriterion("`name` =", value, "name");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table usertranster
         *
         * @mbg.generated
         */
        public Criteria andNameEqualToColumn(Usertranster.Column column) {
            addCriterion(new StringBuilder("`name` = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andNameNotEqualTo(String value) {
            addCriterion("`name` <>", value, "name");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table usertranster
         *
         * @mbg.generated
         */
        public Criteria andNameNotEqualToColumn(Usertranster.Column column) {
            addCriterion(new StringBuilder("`name` <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andNameGreaterThan(String value) {
            addCriterion("`name` >", value, "name");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table usertranster
         *
         * @mbg.generated
         */
        public Criteria andNameGreaterThanColumn(Usertranster.Column column) {
            addCriterion(new StringBuilder("`name` > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andNameGreaterThanOrEqualTo(String value) {
            addCriterion("`name` >=", value, "name");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table usertranster
         *
         * @mbg.generated
         */
        public Criteria andNameGreaterThanOrEqualToColumn(Usertranster.Column column) {
            addCriterion(new StringBuilder("`name` >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andNameLessThan(String value) {
            addCriterion("`name` <", value, "name");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table usertranster
         *
         * @mbg.generated
         */
        public Criteria andNameLessThanColumn(Usertranster.Column column) {
            addCriterion(new StringBuilder("`name` < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andNameLessThanOrEqualTo(String value) {
            addCriterion("`name` <=", value, "name");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table usertranster
         *
         * @mbg.generated
         */
        public Criteria andNameLessThanOrEqualToColumn(Usertranster.Column column) {
            addCriterion(new StringBuilder("`name` <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andNameLike(String value) {
            addCriterion("`name` like", value, "name");
            return (Criteria) this;
        }

        public Criteria andNameNotLike(String value) {
            addCriterion("`name` not like", value, "name");
            return (Criteria) this;
        }

        public Criteria andNameIn(List<String> values) {
            addCriterion("`name` in", values, "name");
            return (Criteria) this;
        }

        public Criteria andNameNotIn(List<String> values) {
            addCriterion("`name` not in", values, "name");
            return (Criteria) this;
        }

        public Criteria andNameBetween(String value1, String value2) {
            addCriterion("`name` between", value1, value2, "name");
            return (Criteria) this;
        }

        public Criteria andNameNotBetween(String value1, String value2) {
            addCriterion("`name` not between", value1, value2, "name");
            return (Criteria) this;
        }

        public Criteria andSexIsNull() {
            addCriterion("sex is null");
            return (Criteria) this;
        }

        public Criteria andSexIsNotNull() {
            addCriterion("sex is not null");
            return (Criteria) this;
        }

        public Criteria andSexEqualTo(String value) {
            addCriterion("sex =", value, "sex");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table usertranster
         *
         * @mbg.generated
         */
        public Criteria andSexEqualToColumn(Usertranster.Column column) {
            addCriterion(new StringBuilder("sex = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andSexNotEqualTo(String value) {
            addCriterion("sex <>", value, "sex");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table usertranster
         *
         * @mbg.generated
         */
        public Criteria andSexNotEqualToColumn(Usertranster.Column column) {
            addCriterion(new StringBuilder("sex <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andSexGreaterThan(String value) {
            addCriterion("sex >", value, "sex");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table usertranster
         *
         * @mbg.generated
         */
        public Criteria andSexGreaterThanColumn(Usertranster.Column column) {
            addCriterion(new StringBuilder("sex > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andSexGreaterThanOrEqualTo(String value) {
            addCriterion("sex >=", value, "sex");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table usertranster
         *
         * @mbg.generated
         */
        public Criteria andSexGreaterThanOrEqualToColumn(Usertranster.Column column) {
            addCriterion(new StringBuilder("sex >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andSexLessThan(String value) {
            addCriterion("sex <", value, "sex");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table usertranster
         *
         * @mbg.generated
         */
        public Criteria andSexLessThanColumn(Usertranster.Column column) {
            addCriterion(new StringBuilder("sex < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andSexLessThanOrEqualTo(String value) {
            addCriterion("sex <=", value, "sex");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table usertranster
         *
         * @mbg.generated
         */
        public Criteria andSexLessThanOrEqualToColumn(Usertranster.Column column) {
            addCriterion(new StringBuilder("sex <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andSexLike(String value) {
            addCriterion("sex like", value, "sex");
            return (Criteria) this;
        }

        public Criteria andSexNotLike(String value) {
            addCriterion("sex not like", value, "sex");
            return (Criteria) this;
        }

        public Criteria andSexIn(List<String> values) {
            addCriterion("sex in", values, "sex");
            return (Criteria) this;
        }

        public Criteria andSexNotIn(List<String> values) {
            addCriterion("sex not in", values, "sex");
            return (Criteria) this;
        }

        public Criteria andSexBetween(String value1, String value2) {
            addCriterion("sex between", value1, value2, "sex");
            return (Criteria) this;
        }

        public Criteria andSexNotBetween(String value1, String value2) {
            addCriterion("sex not between", value1, value2, "sex");
            return (Criteria) this;
        }

        public Criteria andAgeIsNull() {
            addCriterion("age is null");
            return (Criteria) this;
        }

        public Criteria andAgeIsNotNull() {
            addCriterion("age is not null");
            return (Criteria) this;
        }

        public Criteria andAgeEqualTo(String value) {
            addCriterion("age =", value, "age");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table usertranster
         *
         * @mbg.generated
         */
        public Criteria andAgeEqualToColumn(Usertranster.Column column) {
            addCriterion(new StringBuilder("age = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andAgeNotEqualTo(String value) {
            addCriterion("age <>", value, "age");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table usertranster
         *
         * @mbg.generated
         */
        public Criteria andAgeNotEqualToColumn(Usertranster.Column column) {
            addCriterion(new StringBuilder("age <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andAgeGreaterThan(String value) {
            addCriterion("age >", value, "age");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table usertranster
         *
         * @mbg.generated
         */
        public Criteria andAgeGreaterThanColumn(Usertranster.Column column) {
            addCriterion(new StringBuilder("age > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andAgeGreaterThanOrEqualTo(String value) {
            addCriterion("age >=", value, "age");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table usertranster
         *
         * @mbg.generated
         */
        public Criteria andAgeGreaterThanOrEqualToColumn(Usertranster.Column column) {
            addCriterion(new StringBuilder("age >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andAgeLessThan(String value) {
            addCriterion("age <", value, "age");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table usertranster
         *
         * @mbg.generated
         */
        public Criteria andAgeLessThanColumn(Usertranster.Column column) {
            addCriterion(new StringBuilder("age < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andAgeLessThanOrEqualTo(String value) {
            addCriterion("age <=", value, "age");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table usertranster
         *
         * @mbg.generated
         */
        public Criteria andAgeLessThanOrEqualToColumn(Usertranster.Column column) {
            addCriterion(new StringBuilder("age <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andAgeLike(String value) {
            addCriterion("age like", value, "age");
            return (Criteria) this;
        }

        public Criteria andAgeNotLike(String value) {
            addCriterion("age not like", value, "age");
            return (Criteria) this;
        }

        public Criteria andAgeIn(List<String> values) {
            addCriterion("age in", values, "age");
            return (Criteria) this;
        }

        public Criteria andAgeNotIn(List<String> values) {
            addCriterion("age not in", values, "age");
            return (Criteria) this;
        }

        public Criteria andAgeBetween(String value1, String value2) {
            addCriterion("age between", value1, value2, "age");
            return (Criteria) this;
        }

        public Criteria andAgeNotBetween(String value1, String value2) {
            addCriterion("age not between", value1, value2, "age");
            return (Criteria) this;
        }

        public Criteria andIdcardIsNull() {
            addCriterion("idcard is null");
            return (Criteria) this;
        }

        public Criteria andIdcardIsNotNull() {
            addCriterion("idcard is not null");
            return (Criteria) this;
        }

        public Criteria andIdcardEqualTo(String value) {
            addCriterion("idcard =", value, "idcard");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table usertranster
         *
         * @mbg.generated
         */
        public Criteria andIdcardEqualToColumn(Usertranster.Column column) {
            addCriterion(new StringBuilder("idcard = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIdcardNotEqualTo(String value) {
            addCriterion("idcard <>", value, "idcard");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table usertranster
         *
         * @mbg.generated
         */
        public Criteria andIdcardNotEqualToColumn(Usertranster.Column column) {
            addCriterion(new StringBuilder("idcard <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIdcardGreaterThan(String value) {
            addCriterion("idcard >", value, "idcard");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table usertranster
         *
         * @mbg.generated
         */
        public Criteria andIdcardGreaterThanColumn(Usertranster.Column column) {
            addCriterion(new StringBuilder("idcard > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIdcardGreaterThanOrEqualTo(String value) {
            addCriterion("idcard >=", value, "idcard");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table usertranster
         *
         * @mbg.generated
         */
        public Criteria andIdcardGreaterThanOrEqualToColumn(Usertranster.Column column) {
            addCriterion(new StringBuilder("idcard >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIdcardLessThan(String value) {
            addCriterion("idcard <", value, "idcard");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table usertranster
         *
         * @mbg.generated
         */
        public Criteria andIdcardLessThanColumn(Usertranster.Column column) {
            addCriterion(new StringBuilder("idcard < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIdcardLessThanOrEqualTo(String value) {
            addCriterion("idcard <=", value, "idcard");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table usertranster
         *
         * @mbg.generated
         */
        public Criteria andIdcardLessThanOrEqualToColumn(Usertranster.Column column) {
            addCriterion(new StringBuilder("idcard <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIdcardLike(String value) {
            addCriterion("idcard like", value, "idcard");
            return (Criteria) this;
        }

        public Criteria andIdcardNotLike(String value) {
            addCriterion("idcard not like", value, "idcard");
            return (Criteria) this;
        }

        public Criteria andIdcardIn(List<String> values) {
            addCriterion("idcard in", values, "idcard");
            return (Criteria) this;
        }

        public Criteria andIdcardNotIn(List<String> values) {
            addCriterion("idcard not in", values, "idcard");
            return (Criteria) this;
        }

        public Criteria andIdcardBetween(String value1, String value2) {
            addCriterion("idcard between", value1, value2, "idcard");
            return (Criteria) this;
        }

        public Criteria andIdcardNotBetween(String value1, String value2) {
            addCriterion("idcard not between", value1, value2, "idcard");
            return (Criteria) this;
        }

        public Criteria andOareaIsNull() {
            addCriterion("oarea is null");
            return (Criteria) this;
        }

        public Criteria andOareaIsNotNull() {
            addCriterion("oarea is not null");
            return (Criteria) this;
        }

        public Criteria andOareaEqualTo(String value) {
            addCriterion("oarea =", value, "oarea");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table usertranster
         *
         * @mbg.generated
         */
        public Criteria andOareaEqualToColumn(Usertranster.Column column) {
            addCriterion(new StringBuilder("oarea = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andOareaNotEqualTo(String value) {
            addCriterion("oarea <>", value, "oarea");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table usertranster
         *
         * @mbg.generated
         */
        public Criteria andOareaNotEqualToColumn(Usertranster.Column column) {
            addCriterion(new StringBuilder("oarea <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andOareaGreaterThan(String value) {
            addCriterion("oarea >", value, "oarea");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table usertranster
         *
         * @mbg.generated
         */
        public Criteria andOareaGreaterThanColumn(Usertranster.Column column) {
            addCriterion(new StringBuilder("oarea > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andOareaGreaterThanOrEqualTo(String value) {
            addCriterion("oarea >=", value, "oarea");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table usertranster
         *
         * @mbg.generated
         */
        public Criteria andOareaGreaterThanOrEqualToColumn(Usertranster.Column column) {
            addCriterion(new StringBuilder("oarea >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andOareaLessThan(String value) {
            addCriterion("oarea <", value, "oarea");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table usertranster
         *
         * @mbg.generated
         */
        public Criteria andOareaLessThanColumn(Usertranster.Column column) {
            addCriterion(new StringBuilder("oarea < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andOareaLessThanOrEqualTo(String value) {
            addCriterion("oarea <=", value, "oarea");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table usertranster
         *
         * @mbg.generated
         */
        public Criteria andOareaLessThanOrEqualToColumn(Usertranster.Column column) {
            addCriterion(new StringBuilder("oarea <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andOareaLike(String value) {
            addCriterion("oarea like", value, "oarea");
            return (Criteria) this;
        }

        public Criteria andOareaNotLike(String value) {
            addCriterion("oarea not like", value, "oarea");
            return (Criteria) this;
        }

        public Criteria andOareaIn(List<String> values) {
            addCriterion("oarea in", values, "oarea");
            return (Criteria) this;
        }

        public Criteria andOareaNotIn(List<String> values) {
            addCriterion("oarea not in", values, "oarea");
            return (Criteria) this;
        }

        public Criteria andOareaBetween(String value1, String value2) {
            addCriterion("oarea between", value1, value2, "oarea");
            return (Criteria) this;
        }

        public Criteria andOareaNotBetween(String value1, String value2) {
            addCriterion("oarea not between", value1, value2, "oarea");
            return (Criteria) this;
        }

        public Criteria andOstreetIsNull() {
            addCriterion("ostreet is null");
            return (Criteria) this;
        }

        public Criteria andOstreetIsNotNull() {
            addCriterion("ostreet is not null");
            return (Criteria) this;
        }

        public Criteria andOstreetEqualTo(String value) {
            addCriterion("ostreet =", value, "ostreet");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table usertranster
         *
         * @mbg.generated
         */
        public Criteria andOstreetEqualToColumn(Usertranster.Column column) {
            addCriterion(new StringBuilder("ostreet = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andOstreetNotEqualTo(String value) {
            addCriterion("ostreet <>", value, "ostreet");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table usertranster
         *
         * @mbg.generated
         */
        public Criteria andOstreetNotEqualToColumn(Usertranster.Column column) {
            addCriterion(new StringBuilder("ostreet <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andOstreetGreaterThan(String value) {
            addCriterion("ostreet >", value, "ostreet");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table usertranster
         *
         * @mbg.generated
         */
        public Criteria andOstreetGreaterThanColumn(Usertranster.Column column) {
            addCriterion(new StringBuilder("ostreet > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andOstreetGreaterThanOrEqualTo(String value) {
            addCriterion("ostreet >=", value, "ostreet");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table usertranster
         *
         * @mbg.generated
         */
        public Criteria andOstreetGreaterThanOrEqualToColumn(Usertranster.Column column) {
            addCriterion(new StringBuilder("ostreet >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andOstreetLessThan(String value) {
            addCriterion("ostreet <", value, "ostreet");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table usertranster
         *
         * @mbg.generated
         */
        public Criteria andOstreetLessThanColumn(Usertranster.Column column) {
            addCriterion(new StringBuilder("ostreet < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andOstreetLessThanOrEqualTo(String value) {
            addCriterion("ostreet <=", value, "ostreet");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table usertranster
         *
         * @mbg.generated
         */
        public Criteria andOstreetLessThanOrEqualToColumn(Usertranster.Column column) {
            addCriterion(new StringBuilder("ostreet <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andOstreetLike(String value) {
            addCriterion("ostreet like", value, "ostreet");
            return (Criteria) this;
        }

        public Criteria andOstreetNotLike(String value) {
            addCriterion("ostreet not like", value, "ostreet");
            return (Criteria) this;
        }

        public Criteria andOstreetIn(List<String> values) {
            addCriterion("ostreet in", values, "ostreet");
            return (Criteria) this;
        }

        public Criteria andOstreetNotIn(List<String> values) {
            addCriterion("ostreet not in", values, "ostreet");
            return (Criteria) this;
        }

        public Criteria andOstreetBetween(String value1, String value2) {
            addCriterion("ostreet between", value1, value2, "ostreet");
            return (Criteria) this;
        }

        public Criteria andOstreetNotBetween(String value1, String value2) {
            addCriterion("ostreet not between", value1, value2, "ostreet");
            return (Criteria) this;
        }

        public Criteria andOcommunityIsNull() {
            addCriterion("ocommunity is null");
            return (Criteria) this;
        }

        public Criteria andOcommunityIsNotNull() {
            addCriterion("ocommunity is not null");
            return (Criteria) this;
        }

        public Criteria andOcommunityEqualTo(String value) {
            addCriterion("ocommunity =", value, "ocommunity");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table usertranster
         *
         * @mbg.generated
         */
        public Criteria andOcommunityEqualToColumn(Usertranster.Column column) {
            addCriterion(new StringBuilder("ocommunity = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andOcommunityNotEqualTo(String value) {
            addCriterion("ocommunity <>", value, "ocommunity");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table usertranster
         *
         * @mbg.generated
         */
        public Criteria andOcommunityNotEqualToColumn(Usertranster.Column column) {
            addCriterion(new StringBuilder("ocommunity <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andOcommunityGreaterThan(String value) {
            addCriterion("ocommunity >", value, "ocommunity");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table usertranster
         *
         * @mbg.generated
         */
        public Criteria andOcommunityGreaterThanColumn(Usertranster.Column column) {
            addCriterion(new StringBuilder("ocommunity > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andOcommunityGreaterThanOrEqualTo(String value) {
            addCriterion("ocommunity >=", value, "ocommunity");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table usertranster
         *
         * @mbg.generated
         */
        public Criteria andOcommunityGreaterThanOrEqualToColumn(Usertranster.Column column) {
            addCriterion(new StringBuilder("ocommunity >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andOcommunityLessThan(String value) {
            addCriterion("ocommunity <", value, "ocommunity");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table usertranster
         *
         * @mbg.generated
         */
        public Criteria andOcommunityLessThanColumn(Usertranster.Column column) {
            addCriterion(new StringBuilder("ocommunity < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andOcommunityLessThanOrEqualTo(String value) {
            addCriterion("ocommunity <=", value, "ocommunity");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table usertranster
         *
         * @mbg.generated
         */
        public Criteria andOcommunityLessThanOrEqualToColumn(Usertranster.Column column) {
            addCriterion(new StringBuilder("ocommunity <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andOcommunityLike(String value) {
            addCriterion("ocommunity like", value, "ocommunity");
            return (Criteria) this;
        }

        public Criteria andOcommunityNotLike(String value) {
            addCriterion("ocommunity not like", value, "ocommunity");
            return (Criteria) this;
        }

        public Criteria andOcommunityIn(List<String> values) {
            addCriterion("ocommunity in", values, "ocommunity");
            return (Criteria) this;
        }

        public Criteria andOcommunityNotIn(List<String> values) {
            addCriterion("ocommunity not in", values, "ocommunity");
            return (Criteria) this;
        }

        public Criteria andOcommunityBetween(String value1, String value2) {
            addCriterion("ocommunity between", value1, value2, "ocommunity");
            return (Criteria) this;
        }

        public Criteria andOcommunityNotBetween(String value1, String value2) {
            addCriterion("ocommunity not between", value1, value2, "ocommunity");
            return (Criteria) this;
        }

        public Criteria andNareaIsNull() {
            addCriterion("narea is null");
            return (Criteria) this;
        }

        public Criteria andNareaIsNotNull() {
            addCriterion("narea is not null");
            return (Criteria) this;
        }

        public Criteria andNareaEqualTo(String value) {
            addCriterion("narea =", value, "narea");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table usertranster
         *
         * @mbg.generated
         */
        public Criteria andNareaEqualToColumn(Usertranster.Column column) {
            addCriterion(new StringBuilder("narea = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andNareaNotEqualTo(String value) {
            addCriterion("narea <>", value, "narea");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table usertranster
         *
         * @mbg.generated
         */
        public Criteria andNareaNotEqualToColumn(Usertranster.Column column) {
            addCriterion(new StringBuilder("narea <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andNareaGreaterThan(String value) {
            addCriterion("narea >", value, "narea");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table usertranster
         *
         * @mbg.generated
         */
        public Criteria andNareaGreaterThanColumn(Usertranster.Column column) {
            addCriterion(new StringBuilder("narea > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andNareaGreaterThanOrEqualTo(String value) {
            addCriterion("narea >=", value, "narea");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table usertranster
         *
         * @mbg.generated
         */
        public Criteria andNareaGreaterThanOrEqualToColumn(Usertranster.Column column) {
            addCriterion(new StringBuilder("narea >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andNareaLessThan(String value) {
            addCriterion("narea <", value, "narea");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table usertranster
         *
         * @mbg.generated
         */
        public Criteria andNareaLessThanColumn(Usertranster.Column column) {
            addCriterion(new StringBuilder("narea < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andNareaLessThanOrEqualTo(String value) {
            addCriterion("narea <=", value, "narea");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table usertranster
         *
         * @mbg.generated
         */
        public Criteria andNareaLessThanOrEqualToColumn(Usertranster.Column column) {
            addCriterion(new StringBuilder("narea <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andNareaLike(String value) {
            addCriterion("narea like", value, "narea");
            return (Criteria) this;
        }

        public Criteria andNareaNotLike(String value) {
            addCriterion("narea not like", value, "narea");
            return (Criteria) this;
        }

        public Criteria andNareaIn(List<String> values) {
            addCriterion("narea in", values, "narea");
            return (Criteria) this;
        }

        public Criteria andNareaNotIn(List<String> values) {
            addCriterion("narea not in", values, "narea");
            return (Criteria) this;
        }

        public Criteria andNareaBetween(String value1, String value2) {
            addCriterion("narea between", value1, value2, "narea");
            return (Criteria) this;
        }

        public Criteria andNareaNotBetween(String value1, String value2) {
            addCriterion("narea not between", value1, value2, "narea");
            return (Criteria) this;
        }

        public Criteria andNstreetIsNull() {
            addCriterion("nstreet is null");
            return (Criteria) this;
        }

        public Criteria andNstreetIsNotNull() {
            addCriterion("nstreet is not null");
            return (Criteria) this;
        }

        public Criteria andNstreetEqualTo(String value) {
            addCriterion("nstreet =", value, "nstreet");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table usertranster
         *
         * @mbg.generated
         */
        public Criteria andNstreetEqualToColumn(Usertranster.Column column) {
            addCriterion(new StringBuilder("nstreet = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andNstreetNotEqualTo(String value) {
            addCriterion("nstreet <>", value, "nstreet");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table usertranster
         *
         * @mbg.generated
         */
        public Criteria andNstreetNotEqualToColumn(Usertranster.Column column) {
            addCriterion(new StringBuilder("nstreet <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andNstreetGreaterThan(String value) {
            addCriterion("nstreet >", value, "nstreet");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table usertranster
         *
         * @mbg.generated
         */
        public Criteria andNstreetGreaterThanColumn(Usertranster.Column column) {
            addCriterion(new StringBuilder("nstreet > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andNstreetGreaterThanOrEqualTo(String value) {
            addCriterion("nstreet >=", value, "nstreet");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table usertranster
         *
         * @mbg.generated
         */
        public Criteria andNstreetGreaterThanOrEqualToColumn(Usertranster.Column column) {
            addCriterion(new StringBuilder("nstreet >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andNstreetLessThan(String value) {
            addCriterion("nstreet <", value, "nstreet");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table usertranster
         *
         * @mbg.generated
         */
        public Criteria andNstreetLessThanColumn(Usertranster.Column column) {
            addCriterion(new StringBuilder("nstreet < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andNstreetLessThanOrEqualTo(String value) {
            addCriterion("nstreet <=", value, "nstreet");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table usertranster
         *
         * @mbg.generated
         */
        public Criteria andNstreetLessThanOrEqualToColumn(Usertranster.Column column) {
            addCriterion(new StringBuilder("nstreet <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andNstreetLike(String value) {
            addCriterion("nstreet like", value, "nstreet");
            return (Criteria) this;
        }

        public Criteria andNstreetNotLike(String value) {
            addCriterion("nstreet not like", value, "nstreet");
            return (Criteria) this;
        }

        public Criteria andNstreetIn(List<String> values) {
            addCriterion("nstreet in", values, "nstreet");
            return (Criteria) this;
        }

        public Criteria andNstreetNotIn(List<String> values) {
            addCriterion("nstreet not in", values, "nstreet");
            return (Criteria) this;
        }

        public Criteria andNstreetBetween(String value1, String value2) {
            addCriterion("nstreet between", value1, value2, "nstreet");
            return (Criteria) this;
        }

        public Criteria andNstreetNotBetween(String value1, String value2) {
            addCriterion("nstreet not between", value1, value2, "nstreet");
            return (Criteria) this;
        }

        public Criteria andNcommunityIsNull() {
            addCriterion("ncommunity is null");
            return (Criteria) this;
        }

        public Criteria andNcommunityIsNotNull() {
            addCriterion("ncommunity is not null");
            return (Criteria) this;
        }

        public Criteria andNcommunityEqualTo(String value) {
            addCriterion("ncommunity =", value, "ncommunity");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table usertranster
         *
         * @mbg.generated
         */
        public Criteria andNcommunityEqualToColumn(Usertranster.Column column) {
            addCriterion(new StringBuilder("ncommunity = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andNcommunityNotEqualTo(String value) {
            addCriterion("ncommunity <>", value, "ncommunity");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table usertranster
         *
         * @mbg.generated
         */
        public Criteria andNcommunityNotEqualToColumn(Usertranster.Column column) {
            addCriterion(new StringBuilder("ncommunity <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andNcommunityGreaterThan(String value) {
            addCriterion("ncommunity >", value, "ncommunity");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table usertranster
         *
         * @mbg.generated
         */
        public Criteria andNcommunityGreaterThanColumn(Usertranster.Column column) {
            addCriterion(new StringBuilder("ncommunity > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andNcommunityGreaterThanOrEqualTo(String value) {
            addCriterion("ncommunity >=", value, "ncommunity");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table usertranster
         *
         * @mbg.generated
         */
        public Criteria andNcommunityGreaterThanOrEqualToColumn(Usertranster.Column column) {
            addCriterion(new StringBuilder("ncommunity >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andNcommunityLessThan(String value) {
            addCriterion("ncommunity <", value, "ncommunity");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table usertranster
         *
         * @mbg.generated
         */
        public Criteria andNcommunityLessThanColumn(Usertranster.Column column) {
            addCriterion(new StringBuilder("ncommunity < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andNcommunityLessThanOrEqualTo(String value) {
            addCriterion("ncommunity <=", value, "ncommunity");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table usertranster
         *
         * @mbg.generated
         */
        public Criteria andNcommunityLessThanOrEqualToColumn(Usertranster.Column column) {
            addCriterion(new StringBuilder("ncommunity <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andNcommunityLike(String value) {
            addCriterion("ncommunity like", value, "ncommunity");
            return (Criteria) this;
        }

        public Criteria andNcommunityNotLike(String value) {
            addCriterion("ncommunity not like", value, "ncommunity");
            return (Criteria) this;
        }

        public Criteria andNcommunityIn(List<String> values) {
            addCriterion("ncommunity in", values, "ncommunity");
            return (Criteria) this;
        }

        public Criteria andNcommunityNotIn(List<String> values) {
            addCriterion("ncommunity not in", values, "ncommunity");
            return (Criteria) this;
        }

        public Criteria andNcommunityBetween(String value1, String value2) {
            addCriterion("ncommunity between", value1, value2, "ncommunity");
            return (Criteria) this;
        }

        public Criteria andNcommunityNotBetween(String value1, String value2) {
            addCriterion("ncommunity not between", value1, value2, "ncommunity");
            return (Criteria) this;
        }

        public Criteria andStatusIsNull() {
            addCriterion("`status` is null");
            return (Criteria) this;
        }

        public Criteria andStatusIsNotNull() {
            addCriterion("`status` is not null");
            return (Criteria) this;
        }

        public Criteria andStatusEqualTo(Integer value) {
            addCriterion("`status` =", value, "status");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table usertranster
         *
         * @mbg.generated
         */
        public Criteria andStatusEqualToColumn(Usertranster.Column column) {
            addCriterion(new StringBuilder("`status` = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andStatusNotEqualTo(Integer value) {
            addCriterion("`status` <>", value, "status");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table usertranster
         *
         * @mbg.generated
         */
        public Criteria andStatusNotEqualToColumn(Usertranster.Column column) {
            addCriterion(new StringBuilder("`status` <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andStatusGreaterThan(Integer value) {
            addCriterion("`status` >", value, "status");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table usertranster
         *
         * @mbg.generated
         */
        public Criteria andStatusGreaterThanColumn(Usertranster.Column column) {
            addCriterion(new StringBuilder("`status` > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andStatusGreaterThanOrEqualTo(Integer value) {
            addCriterion("`status` >=", value, "status");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table usertranster
         *
         * @mbg.generated
         */
        public Criteria andStatusGreaterThanOrEqualToColumn(Usertranster.Column column) {
            addCriterion(new StringBuilder("`status` >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andStatusLessThan(Integer value) {
            addCriterion("`status` <", value, "status");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table usertranster
         *
         * @mbg.generated
         */
        public Criteria andStatusLessThanColumn(Usertranster.Column column) {
            addCriterion(new StringBuilder("`status` < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andStatusLessThanOrEqualTo(Integer value) {
            addCriterion("`status` <=", value, "status");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table usertranster
         *
         * @mbg.generated
         */
        public Criteria andStatusLessThanOrEqualToColumn(Usertranster.Column column) {
            addCriterion(new StringBuilder("`status` <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andStatusIn(List<Integer> values) {
            addCriterion("`status` in", values, "status");
            return (Criteria) this;
        }

        public Criteria andStatusNotIn(List<Integer> values) {
            addCriterion("`status` not in", values, "status");
            return (Criteria) this;
        }

        public Criteria andStatusBetween(Integer value1, Integer value2) {
            addCriterion("`status` between", value1, value2, "status");
            return (Criteria) this;
        }

        public Criteria andStatusNotBetween(Integer value1, Integer value2) {
            addCriterion("`status` not between", value1, value2, "status");
            return (Criteria) this;
        }

        public Criteria andAddtimeIsNull() {
            addCriterion("addtime is null");
            return (Criteria) this;
        }

        public Criteria andAddtimeIsNotNull() {
            addCriterion("addtime is not null");
            return (Criteria) this;
        }

        public Criteria andAddtimeEqualTo(LocalDateTime value) {
            addCriterion("addtime =", value, "addtime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table usertranster
         *
         * @mbg.generated
         */
        public Criteria andAddtimeEqualToColumn(Usertranster.Column column) {
            addCriterion(new StringBuilder("addtime = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andAddtimeNotEqualTo(LocalDateTime value) {
            addCriterion("addtime <>", value, "addtime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table usertranster
         *
         * @mbg.generated
         */
        public Criteria andAddtimeNotEqualToColumn(Usertranster.Column column) {
            addCriterion(new StringBuilder("addtime <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andAddtimeGreaterThan(LocalDateTime value) {
            addCriterion("addtime >", value, "addtime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table usertranster
         *
         * @mbg.generated
         */
        public Criteria andAddtimeGreaterThanColumn(Usertranster.Column column) {
            addCriterion(new StringBuilder("addtime > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andAddtimeGreaterThanOrEqualTo(LocalDateTime value) {
            addCriterion("addtime >=", value, "addtime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table usertranster
         *
         * @mbg.generated
         */
        public Criteria andAddtimeGreaterThanOrEqualToColumn(Usertranster.Column column) {
            addCriterion(new StringBuilder("addtime >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andAddtimeLessThan(LocalDateTime value) {
            addCriterion("addtime <", value, "addtime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table usertranster
         *
         * @mbg.generated
         */
        public Criteria andAddtimeLessThanColumn(Usertranster.Column column) {
            addCriterion(new StringBuilder("addtime < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andAddtimeLessThanOrEqualTo(LocalDateTime value) {
            addCriterion("addtime <=", value, "addtime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table usertranster
         *
         * @mbg.generated
         */
        public Criteria andAddtimeLessThanOrEqualToColumn(Usertranster.Column column) {
            addCriterion(new StringBuilder("addtime <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andAddtimeIn(List<LocalDateTime> values) {
            addCriterion("addtime in", values, "addtime");
            return (Criteria) this;
        }

        public Criteria andAddtimeNotIn(List<LocalDateTime> values) {
            addCriterion("addtime not in", values, "addtime");
            return (Criteria) this;
        }

        public Criteria andAddtimeBetween(LocalDateTime value1, LocalDateTime value2) {
            addCriterion("addtime between", value1, value2, "addtime");
            return (Criteria) this;
        }

        public Criteria andAddtimeNotBetween(LocalDateTime value1, LocalDateTime value2) {
            addCriterion("addtime not between", value1, value2, "addtime");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table usertranster
     *
     * @mbg.generated do_not_delete_during_merge
     */
    public static class Criteria extends GeneratedCriteria {
        /**
         * This field was generated by MyBatis Generator.
         * This field corresponds to the database table usertranster
         *
         * @mbg.generated
         */
        private UsertransterExample example;

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table usertranster
         *
         * @mbg.generated
         */
        protected Criteria(UsertransterExample example) {
            super();
            this.example = example;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table usertranster
         *
         * @mbg.generated
         */
        public UsertransterExample example() {
            return this.example;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table usertranster
         *
         * @mbg.generated
         */
        @Deprecated
        public Criteria andIf(boolean ifAdd, ICriteriaAdd add) {
            if (ifAdd) {
                add.add(this);
            }
            return this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table usertranster
         *
         * @mbg.generated
         */
        public Criteria when(boolean condition, ICriteriaWhen then) {
            if (condition) {
                then.criteria(this);
            }
            return this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table usertranster
         *
         * @mbg.generated
         */
        public Criteria when(boolean condition, ICriteriaWhen then, ICriteriaWhen otherwise) {
            if (condition) {
                then.criteria(this);
            } else {
                otherwise.criteria(this);
            }
            return this;
        }

        @Deprecated
        public interface ICriteriaAdd {
            /**
             * This method was generated by MyBatis Generator.
             * This method corresponds to the database table usertranster
             *
             * @mbg.generated
             */
            Criteria add(Criteria add);
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table usertranster
     *
     * @mbg.generated
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }

    public interface ICriteriaWhen {
        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table usertranster
         *
         * @mbg.generated
         */
        void criteria(Criteria criteria);
    }

    public interface IExampleWhen {
        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table usertranster
         *
         * @mbg.generated
         */
        void example(org.linlinjava.litemall.db.domain.UsertransterExample example);
    }
}