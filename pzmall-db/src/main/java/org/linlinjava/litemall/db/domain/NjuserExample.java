package org.linlinjava.litemall.db.domain;

import java.time.LocalDateTime;
import java.util.ArrayList;
import java.util.List;

public class NjuserExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table njuser
     *
     * @mbg.generated
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table njuser
     *
     * @mbg.generated
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table njuser
     *
     * @mbg.generated
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table njuser
     *
     * @mbg.generated
     */
    public NjuserExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table njuser
     *
     * @mbg.generated
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table njuser
     *
     * @mbg.generated
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table njuser
     *
     * @mbg.generated
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table njuser
     *
     * @mbg.generated
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table njuser
     *
     * @mbg.generated
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table njuser
     *
     * @mbg.generated
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table njuser
     *
     * @mbg.generated
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table njuser
     *
     * @mbg.generated
     */
    public NjuserExample orderBy(String orderByClause) {
        this.setOrderByClause(orderByClause);
        return this;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table njuser
     *
     * @mbg.generated
     */
    public NjuserExample orderBy(String ... orderByClauses) {
        StringBuffer sb = new StringBuffer();
        for (int i = 0; i < orderByClauses.length; i++) {
            sb.append(orderByClauses[i]);
            if (i < orderByClauses.length - 1) {
                sb.append(" , ");
            }
        }
        this.setOrderByClause(sb.toString());
        return this;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table njuser
     *
     * @mbg.generated
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table njuser
     *
     * @mbg.generated
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria(this);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table njuser
     *
     * @mbg.generated
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table njuser
     *
     * @mbg.generated
     */
    public static Criteria newAndCreateCriteria() {
        NjuserExample example = new NjuserExample();
        return example.createCriteria();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table njuser
     *
     * @mbg.generated
     */
    public NjuserExample when(boolean condition, IExampleWhen then) {
        if (condition) {
            then.example(this);
        }
        return this;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table njuser
     *
     * @mbg.generated
     */
    public NjuserExample when(boolean condition, IExampleWhen then, IExampleWhen otherwise) {
        if (condition) {
            then.example(this);
        } else {
            otherwise.example(this);
        }
        return this;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table njuser
     *
     * @mbg.generated
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andIdIsNull() {
            addCriterion("id is null");
            return (Criteria) this;
        }

        public Criteria andIdIsNotNull() {
            addCriterion("id is not null");
            return (Criteria) this;
        }

        public Criteria andIdEqualTo(Integer value) {
            addCriterion("id =", value, "id");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table njuser
         *
         * @mbg.generated
         */
        public Criteria andIdEqualToColumn(Njuser.Column column) {
            addCriterion(new StringBuilder("id = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIdNotEqualTo(Integer value) {
            addCriterion("id <>", value, "id");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table njuser
         *
         * @mbg.generated
         */
        public Criteria andIdNotEqualToColumn(Njuser.Column column) {
            addCriterion(new StringBuilder("id <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIdGreaterThan(Integer value) {
            addCriterion("id >", value, "id");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table njuser
         *
         * @mbg.generated
         */
        public Criteria andIdGreaterThanColumn(Njuser.Column column) {
            addCriterion(new StringBuilder("id > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("id >=", value, "id");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table njuser
         *
         * @mbg.generated
         */
        public Criteria andIdGreaterThanOrEqualToColumn(Njuser.Column column) {
            addCriterion(new StringBuilder("id >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIdLessThan(Integer value) {
            addCriterion("id <", value, "id");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table njuser
         *
         * @mbg.generated
         */
        public Criteria andIdLessThanColumn(Njuser.Column column) {
            addCriterion(new StringBuilder("id < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIdLessThanOrEqualTo(Integer value) {
            addCriterion("id <=", value, "id");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table njuser
         *
         * @mbg.generated
         */
        public Criteria andIdLessThanOrEqualToColumn(Njuser.Column column) {
            addCriterion(new StringBuilder("id <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIdIn(List<Integer> values) {
            addCriterion("id in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotIn(List<Integer> values) {
            addCriterion("id not in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdBetween(Integer value1, Integer value2) {
            addCriterion("id between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotBetween(Integer value1, Integer value2) {
            addCriterion("id not between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andNameIsNull() {
            addCriterion("`name` is null");
            return (Criteria) this;
        }

        public Criteria andNameIsNotNull() {
            addCriterion("`name` is not null");
            return (Criteria) this;
        }

        public Criteria andNameEqualTo(String value) {
            addCriterion("`name` =", value, "name");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table njuser
         *
         * @mbg.generated
         */
        public Criteria andNameEqualToColumn(Njuser.Column column) {
            addCriterion(new StringBuilder("`name` = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andNameNotEqualTo(String value) {
            addCriterion("`name` <>", value, "name");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table njuser
         *
         * @mbg.generated
         */
        public Criteria andNameNotEqualToColumn(Njuser.Column column) {
            addCriterion(new StringBuilder("`name` <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andNameGreaterThan(String value) {
            addCriterion("`name` >", value, "name");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table njuser
         *
         * @mbg.generated
         */
        public Criteria andNameGreaterThanColumn(Njuser.Column column) {
            addCriterion(new StringBuilder("`name` > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andNameGreaterThanOrEqualTo(String value) {
            addCriterion("`name` >=", value, "name");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table njuser
         *
         * @mbg.generated
         */
        public Criteria andNameGreaterThanOrEqualToColumn(Njuser.Column column) {
            addCriterion(new StringBuilder("`name` >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andNameLessThan(String value) {
            addCriterion("`name` <", value, "name");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table njuser
         *
         * @mbg.generated
         */
        public Criteria andNameLessThanColumn(Njuser.Column column) {
            addCriterion(new StringBuilder("`name` < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andNameLessThanOrEqualTo(String value) {
            addCriterion("`name` <=", value, "name");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table njuser
         *
         * @mbg.generated
         */
        public Criteria andNameLessThanOrEqualToColumn(Njuser.Column column) {
            addCriterion(new StringBuilder("`name` <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andNameLike(String value) {
            addCriterion("`name` like", value, "name");
            return (Criteria) this;
        }

        public Criteria andNameNotLike(String value) {
            addCriterion("`name` not like", value, "name");
            return (Criteria) this;
        }

        public Criteria andNameIn(List<String> values) {
            addCriterion("`name` in", values, "name");
            return (Criteria) this;
        }

        public Criteria andNameNotIn(List<String> values) {
            addCriterion("`name` not in", values, "name");
            return (Criteria) this;
        }

        public Criteria andNameBetween(String value1, String value2) {
            addCriterion("`name` between", value1, value2, "name");
            return (Criteria) this;
        }

        public Criteria andNameNotBetween(String value1, String value2) {
            addCriterion("`name` not between", value1, value2, "name");
            return (Criteria) this;
        }

        public Criteria andSexIsNull() {
            addCriterion("sex is null");
            return (Criteria) this;
        }

        public Criteria andSexIsNotNull() {
            addCriterion("sex is not null");
            return (Criteria) this;
        }

        public Criteria andSexEqualTo(String value) {
            addCriterion("sex =", value, "sex");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table njuser
         *
         * @mbg.generated
         */
        public Criteria andSexEqualToColumn(Njuser.Column column) {
            addCriterion(new StringBuilder("sex = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andSexNotEqualTo(String value) {
            addCriterion("sex <>", value, "sex");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table njuser
         *
         * @mbg.generated
         */
        public Criteria andSexNotEqualToColumn(Njuser.Column column) {
            addCriterion(new StringBuilder("sex <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andSexGreaterThan(String value) {
            addCriterion("sex >", value, "sex");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table njuser
         *
         * @mbg.generated
         */
        public Criteria andSexGreaterThanColumn(Njuser.Column column) {
            addCriterion(new StringBuilder("sex > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andSexGreaterThanOrEqualTo(String value) {
            addCriterion("sex >=", value, "sex");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table njuser
         *
         * @mbg.generated
         */
        public Criteria andSexGreaterThanOrEqualToColumn(Njuser.Column column) {
            addCriterion(new StringBuilder("sex >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andSexLessThan(String value) {
            addCriterion("sex <", value, "sex");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table njuser
         *
         * @mbg.generated
         */
        public Criteria andSexLessThanColumn(Njuser.Column column) {
            addCriterion(new StringBuilder("sex < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andSexLessThanOrEqualTo(String value) {
            addCriterion("sex <=", value, "sex");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table njuser
         *
         * @mbg.generated
         */
        public Criteria andSexLessThanOrEqualToColumn(Njuser.Column column) {
            addCriterion(new StringBuilder("sex <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andSexLike(String value) {
            addCriterion("sex like", value, "sex");
            return (Criteria) this;
        }

        public Criteria andSexNotLike(String value) {
            addCriterion("sex not like", value, "sex");
            return (Criteria) this;
        }

        public Criteria andSexIn(List<String> values) {
            addCriterion("sex in", values, "sex");
            return (Criteria) this;
        }

        public Criteria andSexNotIn(List<String> values) {
            addCriterion("sex not in", values, "sex");
            return (Criteria) this;
        }

        public Criteria andSexBetween(String value1, String value2) {
            addCriterion("sex between", value1, value2, "sex");
            return (Criteria) this;
        }

        public Criteria andSexNotBetween(String value1, String value2) {
            addCriterion("sex not between", value1, value2, "sex");
            return (Criteria) this;
        }

        public Criteria andAgeIsNull() {
            addCriterion("age is null");
            return (Criteria) this;
        }

        public Criteria andAgeIsNotNull() {
            addCriterion("age is not null");
            return (Criteria) this;
        }

        public Criteria andAgeEqualTo(Integer value) {
            addCriterion("age =", value, "age");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table njuser
         *
         * @mbg.generated
         */
        public Criteria andAgeEqualToColumn(Njuser.Column column) {
            addCriterion(new StringBuilder("age = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andAgeNotEqualTo(Integer value) {
            addCriterion("age <>", value, "age");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table njuser
         *
         * @mbg.generated
         */
        public Criteria andAgeNotEqualToColumn(Njuser.Column column) {
            addCriterion(new StringBuilder("age <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andAgeGreaterThan(Integer value) {
            addCriterion("age >", value, "age");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table njuser
         *
         * @mbg.generated
         */
        public Criteria andAgeGreaterThanColumn(Njuser.Column column) {
            addCriterion(new StringBuilder("age > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andAgeGreaterThanOrEqualTo(Integer value) {
            addCriterion("age >=", value, "age");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table njuser
         *
         * @mbg.generated
         */
        public Criteria andAgeGreaterThanOrEqualToColumn(Njuser.Column column) {
            addCriterion(new StringBuilder("age >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andAgeLessThan(Integer value) {
            addCriterion("age <", value, "age");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table njuser
         *
         * @mbg.generated
         */
        public Criteria andAgeLessThanColumn(Njuser.Column column) {
            addCriterion(new StringBuilder("age < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andAgeLessThanOrEqualTo(Integer value) {
            addCriterion("age <=", value, "age");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table njuser
         *
         * @mbg.generated
         */
        public Criteria andAgeLessThanOrEqualToColumn(Njuser.Column column) {
            addCriterion(new StringBuilder("age <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andAgeIn(List<Integer> values) {
            addCriterion("age in", values, "age");
            return (Criteria) this;
        }

        public Criteria andAgeNotIn(List<Integer> values) {
            addCriterion("age not in", values, "age");
            return (Criteria) this;
        }

        public Criteria andAgeBetween(Integer value1, Integer value2) {
            addCriterion("age between", value1, value2, "age");
            return (Criteria) this;
        }

        public Criteria andAgeNotBetween(Integer value1, Integer value2) {
            addCriterion("age not between", value1, value2, "age");
            return (Criteria) this;
        }

        public Criteria andIdcardIsNull() {
            addCriterion("idcard is null");
            return (Criteria) this;
        }

        public Criteria andIdcardIsNotNull() {
            addCriterion("idcard is not null");
            return (Criteria) this;
        }

        public Criteria andIdcardEqualTo(String value) {
            addCriterion("idcard =", value, "idcard");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table njuser
         *
         * @mbg.generated
         */
        public Criteria andIdcardEqualToColumn(Njuser.Column column) {
            addCriterion(new StringBuilder("idcard = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIdcardNotEqualTo(String value) {
            addCriterion("idcard <>", value, "idcard");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table njuser
         *
         * @mbg.generated
         */
        public Criteria andIdcardNotEqualToColumn(Njuser.Column column) {
            addCriterion(new StringBuilder("idcard <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIdcardGreaterThan(String value) {
            addCriterion("idcard >", value, "idcard");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table njuser
         *
         * @mbg.generated
         */
        public Criteria andIdcardGreaterThanColumn(Njuser.Column column) {
            addCriterion(new StringBuilder("idcard > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIdcardGreaterThanOrEqualTo(String value) {
            addCriterion("idcard >=", value, "idcard");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table njuser
         *
         * @mbg.generated
         */
        public Criteria andIdcardGreaterThanOrEqualToColumn(Njuser.Column column) {
            addCriterion(new StringBuilder("idcard >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIdcardLessThan(String value) {
            addCriterion("idcard <", value, "idcard");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table njuser
         *
         * @mbg.generated
         */
        public Criteria andIdcardLessThanColumn(Njuser.Column column) {
            addCriterion(new StringBuilder("idcard < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIdcardLessThanOrEqualTo(String value) {
            addCriterion("idcard <=", value, "idcard");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table njuser
         *
         * @mbg.generated
         */
        public Criteria andIdcardLessThanOrEqualToColumn(Njuser.Column column) {
            addCriterion(new StringBuilder("idcard <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIdcardLike(String value) {
            addCriterion("idcard like", value, "idcard");
            return (Criteria) this;
        }

        public Criteria andIdcardNotLike(String value) {
            addCriterion("idcard not like", value, "idcard");
            return (Criteria) this;
        }

        public Criteria andIdcardIn(List<String> values) {
            addCriterion("idcard in", values, "idcard");
            return (Criteria) this;
        }

        public Criteria andIdcardNotIn(List<String> values) {
            addCriterion("idcard not in", values, "idcard");
            return (Criteria) this;
        }

        public Criteria andIdcardBetween(String value1, String value2) {
            addCriterion("idcard between", value1, value2, "idcard");
            return (Criteria) this;
        }

        public Criteria andIdcardNotBetween(String value1, String value2) {
            addCriterion("idcard not between", value1, value2, "idcard");
            return (Criteria) this;
        }

        public Criteria andPhoneIsNull() {
            addCriterion("phone is null");
            return (Criteria) this;
        }

        public Criteria andPhoneIsNotNull() {
            addCriterion("phone is not null");
            return (Criteria) this;
        }

        public Criteria andPhoneEqualTo(String value) {
            addCriterion("phone =", value, "phone");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table njuser
         *
         * @mbg.generated
         */
        public Criteria andPhoneEqualToColumn(Njuser.Column column) {
            addCriterion(new StringBuilder("phone = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andPhoneNotEqualTo(String value) {
            addCriterion("phone <>", value, "phone");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table njuser
         *
         * @mbg.generated
         */
        public Criteria andPhoneNotEqualToColumn(Njuser.Column column) {
            addCriterion(new StringBuilder("phone <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andPhoneGreaterThan(String value) {
            addCriterion("phone >", value, "phone");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table njuser
         *
         * @mbg.generated
         */
        public Criteria andPhoneGreaterThanColumn(Njuser.Column column) {
            addCriterion(new StringBuilder("phone > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andPhoneGreaterThanOrEqualTo(String value) {
            addCriterion("phone >=", value, "phone");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table njuser
         *
         * @mbg.generated
         */
        public Criteria andPhoneGreaterThanOrEqualToColumn(Njuser.Column column) {
            addCriterion(new StringBuilder("phone >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andPhoneLessThan(String value) {
            addCriterion("phone <", value, "phone");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table njuser
         *
         * @mbg.generated
         */
        public Criteria andPhoneLessThanColumn(Njuser.Column column) {
            addCriterion(new StringBuilder("phone < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andPhoneLessThanOrEqualTo(String value) {
            addCriterion("phone <=", value, "phone");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table njuser
         *
         * @mbg.generated
         */
        public Criteria andPhoneLessThanOrEqualToColumn(Njuser.Column column) {
            addCriterion(new StringBuilder("phone <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andPhoneLike(String value) {
            addCriterion("phone like", value, "phone");
            return (Criteria) this;
        }

        public Criteria andPhoneNotLike(String value) {
            addCriterion("phone not like", value, "phone");
            return (Criteria) this;
        }

        public Criteria andPhoneIn(List<String> values) {
            addCriterion("phone in", values, "phone");
            return (Criteria) this;
        }

        public Criteria andPhoneNotIn(List<String> values) {
            addCriterion("phone not in", values, "phone");
            return (Criteria) this;
        }

        public Criteria andPhoneBetween(String value1, String value2) {
            addCriterion("phone between", value1, value2, "phone");
            return (Criteria) this;
        }

        public Criteria andPhoneNotBetween(String value1, String value2) {
            addCriterion("phone not between", value1, value2, "phone");
            return (Criteria) this;
        }

        public Criteria andAreaIsNull() {
            addCriterion("area is null");
            return (Criteria) this;
        }

        public Criteria andAreaIsNotNull() {
            addCriterion("area is not null");
            return (Criteria) this;
        }

        public Criteria andAreaEqualTo(String value) {
            addCriterion("area =", value, "area");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table njuser
         *
         * @mbg.generated
         */
        public Criteria andAreaEqualToColumn(Njuser.Column column) {
            addCriterion(new StringBuilder("area = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andAreaNotEqualTo(String value) {
            addCriterion("area <>", value, "area");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table njuser
         *
         * @mbg.generated
         */
        public Criteria andAreaNotEqualToColumn(Njuser.Column column) {
            addCriterion(new StringBuilder("area <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andAreaGreaterThan(String value) {
            addCriterion("area >", value, "area");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table njuser
         *
         * @mbg.generated
         */
        public Criteria andAreaGreaterThanColumn(Njuser.Column column) {
            addCriterion(new StringBuilder("area > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andAreaGreaterThanOrEqualTo(String value) {
            addCriterion("area >=", value, "area");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table njuser
         *
         * @mbg.generated
         */
        public Criteria andAreaGreaterThanOrEqualToColumn(Njuser.Column column) {
            addCriterion(new StringBuilder("area >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andAreaLessThan(String value) {
            addCriterion("area <", value, "area");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table njuser
         *
         * @mbg.generated
         */
        public Criteria andAreaLessThanColumn(Njuser.Column column) {
            addCriterion(new StringBuilder("area < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andAreaLessThanOrEqualTo(String value) {
            addCriterion("area <=", value, "area");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table njuser
         *
         * @mbg.generated
         */
        public Criteria andAreaLessThanOrEqualToColumn(Njuser.Column column) {
            addCriterion(new StringBuilder("area <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andAreaLike(String value) {
            addCriterion("area like", value, "area");
            return (Criteria) this;
        }

        public Criteria andAreaNotLike(String value) {
            addCriterion("area not like", value, "area");
            return (Criteria) this;
        }

        public Criteria andAreaIn(List<String> values) {
            addCriterion("area in", values, "area");
            return (Criteria) this;
        }

        public Criteria andAreaNotIn(List<String> values) {
            addCriterion("area not in", values, "area");
            return (Criteria) this;
        }

        public Criteria andAreaBetween(String value1, String value2) {
            addCriterion("area between", value1, value2, "area");
            return (Criteria) this;
        }

        public Criteria andAreaNotBetween(String value1, String value2) {
            addCriterion("area not between", value1, value2, "area");
            return (Criteria) this;
        }

        public Criteria andStreetIsNull() {
            addCriterion("street is null");
            return (Criteria) this;
        }

        public Criteria andStreetIsNotNull() {
            addCriterion("street is not null");
            return (Criteria) this;
        }

        public Criteria andStreetEqualTo(String value) {
            addCriterion("street =", value, "street");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table njuser
         *
         * @mbg.generated
         */
        public Criteria andStreetEqualToColumn(Njuser.Column column) {
            addCriterion(new StringBuilder("street = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andStreetNotEqualTo(String value) {
            addCriterion("street <>", value, "street");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table njuser
         *
         * @mbg.generated
         */
        public Criteria andStreetNotEqualToColumn(Njuser.Column column) {
            addCriterion(new StringBuilder("street <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andStreetGreaterThan(String value) {
            addCriterion("street >", value, "street");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table njuser
         *
         * @mbg.generated
         */
        public Criteria andStreetGreaterThanColumn(Njuser.Column column) {
            addCriterion(new StringBuilder("street > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andStreetGreaterThanOrEqualTo(String value) {
            addCriterion("street >=", value, "street");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table njuser
         *
         * @mbg.generated
         */
        public Criteria andStreetGreaterThanOrEqualToColumn(Njuser.Column column) {
            addCriterion(new StringBuilder("street >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andStreetLessThan(String value) {
            addCriterion("street <", value, "street");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table njuser
         *
         * @mbg.generated
         */
        public Criteria andStreetLessThanColumn(Njuser.Column column) {
            addCriterion(new StringBuilder("street < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andStreetLessThanOrEqualTo(String value) {
            addCriterion("street <=", value, "street");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table njuser
         *
         * @mbg.generated
         */
        public Criteria andStreetLessThanOrEqualToColumn(Njuser.Column column) {
            addCriterion(new StringBuilder("street <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andStreetLike(String value) {
            addCriterion("street like", value, "street");
            return (Criteria) this;
        }

        public Criteria andStreetNotLike(String value) {
            addCriterion("street not like", value, "street");
            return (Criteria) this;
        }

        public Criteria andStreetIn(List<String> values) {
            addCriterion("street in", values, "street");
            return (Criteria) this;
        }

        public Criteria andStreetNotIn(List<String> values) {
            addCriterion("street not in", values, "street");
            return (Criteria) this;
        }

        public Criteria andStreetBetween(String value1, String value2) {
            addCriterion("street between", value1, value2, "street");
            return (Criteria) this;
        }

        public Criteria andStreetNotBetween(String value1, String value2) {
            addCriterion("street not between", value1, value2, "street");
            return (Criteria) this;
        }

        public Criteria andCommunityIsNull() {
            addCriterion("community is null");
            return (Criteria) this;
        }

        public Criteria andCommunityIsNotNull() {
            addCriterion("community is not null");
            return (Criteria) this;
        }

        public Criteria andCommunityEqualTo(String value) {
            addCriterion("community =", value, "community");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table njuser
         *
         * @mbg.generated
         */
        public Criteria andCommunityEqualToColumn(Njuser.Column column) {
            addCriterion(new StringBuilder("community = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCommunityNotEqualTo(String value) {
            addCriterion("community <>", value, "community");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table njuser
         *
         * @mbg.generated
         */
        public Criteria andCommunityNotEqualToColumn(Njuser.Column column) {
            addCriterion(new StringBuilder("community <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCommunityGreaterThan(String value) {
            addCriterion("community >", value, "community");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table njuser
         *
         * @mbg.generated
         */
        public Criteria andCommunityGreaterThanColumn(Njuser.Column column) {
            addCriterion(new StringBuilder("community > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCommunityGreaterThanOrEqualTo(String value) {
            addCriterion("community >=", value, "community");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table njuser
         *
         * @mbg.generated
         */
        public Criteria andCommunityGreaterThanOrEqualToColumn(Njuser.Column column) {
            addCriterion(new StringBuilder("community >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCommunityLessThan(String value) {
            addCriterion("community <", value, "community");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table njuser
         *
         * @mbg.generated
         */
        public Criteria andCommunityLessThanColumn(Njuser.Column column) {
            addCriterion(new StringBuilder("community < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCommunityLessThanOrEqualTo(String value) {
            addCriterion("community <=", value, "community");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table njuser
         *
         * @mbg.generated
         */
        public Criteria andCommunityLessThanOrEqualToColumn(Njuser.Column column) {
            addCriterion(new StringBuilder("community <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCommunityLike(String value) {
            addCriterion("community like", value, "community");
            return (Criteria) this;
        }

        public Criteria andCommunityNotLike(String value) {
            addCriterion("community not like", value, "community");
            return (Criteria) this;
        }

        public Criteria andCommunityIn(List<String> values) {
            addCriterion("community in", values, "community");
            return (Criteria) this;
        }

        public Criteria andCommunityNotIn(List<String> values) {
            addCriterion("community not in", values, "community");
            return (Criteria) this;
        }

        public Criteria andCommunityBetween(String value1, String value2) {
            addCriterion("community between", value1, value2, "community");
            return (Criteria) this;
        }

        public Criteria andCommunityNotBetween(String value1, String value2) {
            addCriterion("community not between", value1, value2, "community");
            return (Criteria) this;
        }

        public Criteria andHjaddressIsNull() {
            addCriterion("hjaddress is null");
            return (Criteria) this;
        }

        public Criteria andHjaddressIsNotNull() {
            addCriterion("hjaddress is not null");
            return (Criteria) this;
        }

        public Criteria andHjaddressEqualTo(String value) {
            addCriterion("hjaddress =", value, "hjaddress");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table njuser
         *
         * @mbg.generated
         */
        public Criteria andHjaddressEqualToColumn(Njuser.Column column) {
            addCriterion(new StringBuilder("hjaddress = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andHjaddressNotEqualTo(String value) {
            addCriterion("hjaddress <>", value, "hjaddress");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table njuser
         *
         * @mbg.generated
         */
        public Criteria andHjaddressNotEqualToColumn(Njuser.Column column) {
            addCriterion(new StringBuilder("hjaddress <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andHjaddressGreaterThan(String value) {
            addCriterion("hjaddress >", value, "hjaddress");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table njuser
         *
         * @mbg.generated
         */
        public Criteria andHjaddressGreaterThanColumn(Njuser.Column column) {
            addCriterion(new StringBuilder("hjaddress > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andHjaddressGreaterThanOrEqualTo(String value) {
            addCriterion("hjaddress >=", value, "hjaddress");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table njuser
         *
         * @mbg.generated
         */
        public Criteria andHjaddressGreaterThanOrEqualToColumn(Njuser.Column column) {
            addCriterion(new StringBuilder("hjaddress >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andHjaddressLessThan(String value) {
            addCriterion("hjaddress <", value, "hjaddress");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table njuser
         *
         * @mbg.generated
         */
        public Criteria andHjaddressLessThanColumn(Njuser.Column column) {
            addCriterion(new StringBuilder("hjaddress < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andHjaddressLessThanOrEqualTo(String value) {
            addCriterion("hjaddress <=", value, "hjaddress");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table njuser
         *
         * @mbg.generated
         */
        public Criteria andHjaddressLessThanOrEqualToColumn(Njuser.Column column) {
            addCriterion(new StringBuilder("hjaddress <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andHjaddressLike(String value) {
            addCriterion("hjaddress like", value, "hjaddress");
            return (Criteria) this;
        }

        public Criteria andHjaddressNotLike(String value) {
            addCriterion("hjaddress not like", value, "hjaddress");
            return (Criteria) this;
        }

        public Criteria andHjaddressIn(List<String> values) {
            addCriterion("hjaddress in", values, "hjaddress");
            return (Criteria) this;
        }

        public Criteria andHjaddressNotIn(List<String> values) {
            addCriterion("hjaddress not in", values, "hjaddress");
            return (Criteria) this;
        }

        public Criteria andHjaddressBetween(String value1, String value2) {
            addCriterion("hjaddress between", value1, value2, "hjaddress");
            return (Criteria) this;
        }

        public Criteria andHjaddressNotBetween(String value1, String value2) {
            addCriterion("hjaddress not between", value1, value2, "hjaddress");
            return (Criteria) this;
        }

        public Criteria andLiveaddressIsNull() {
            addCriterion("liveaddress is null");
            return (Criteria) this;
        }

        public Criteria andLiveaddressIsNotNull() {
            addCriterion("liveaddress is not null");
            return (Criteria) this;
        }

        public Criteria andLiveaddressEqualTo(String value) {
            addCriterion("liveaddress =", value, "liveaddress");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table njuser
         *
         * @mbg.generated
         */
        public Criteria andLiveaddressEqualToColumn(Njuser.Column column) {
            addCriterion(new StringBuilder("liveaddress = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andLiveaddressNotEqualTo(String value) {
            addCriterion("liveaddress <>", value, "liveaddress");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table njuser
         *
         * @mbg.generated
         */
        public Criteria andLiveaddressNotEqualToColumn(Njuser.Column column) {
            addCriterion(new StringBuilder("liveaddress <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andLiveaddressGreaterThan(String value) {
            addCriterion("liveaddress >", value, "liveaddress");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table njuser
         *
         * @mbg.generated
         */
        public Criteria andLiveaddressGreaterThanColumn(Njuser.Column column) {
            addCriterion(new StringBuilder("liveaddress > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andLiveaddressGreaterThanOrEqualTo(String value) {
            addCriterion("liveaddress >=", value, "liveaddress");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table njuser
         *
         * @mbg.generated
         */
        public Criteria andLiveaddressGreaterThanOrEqualToColumn(Njuser.Column column) {
            addCriterion(new StringBuilder("liveaddress >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andLiveaddressLessThan(String value) {
            addCriterion("liveaddress <", value, "liveaddress");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table njuser
         *
         * @mbg.generated
         */
        public Criteria andLiveaddressLessThanColumn(Njuser.Column column) {
            addCriterion(new StringBuilder("liveaddress < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andLiveaddressLessThanOrEqualTo(String value) {
            addCriterion("liveaddress <=", value, "liveaddress");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table njuser
         *
         * @mbg.generated
         */
        public Criteria andLiveaddressLessThanOrEqualToColumn(Njuser.Column column) {
            addCriterion(new StringBuilder("liveaddress <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andLiveaddressLike(String value) {
            addCriterion("liveaddress like", value, "liveaddress");
            return (Criteria) this;
        }

        public Criteria andLiveaddressNotLike(String value) {
            addCriterion("liveaddress not like", value, "liveaddress");
            return (Criteria) this;
        }

        public Criteria andLiveaddressIn(List<String> values) {
            addCriterion("liveaddress in", values, "liveaddress");
            return (Criteria) this;
        }

        public Criteria andLiveaddressNotIn(List<String> values) {
            addCriterion("liveaddress not in", values, "liveaddress");
            return (Criteria) this;
        }

        public Criteria andLiveaddressBetween(String value1, String value2) {
            addCriterion("liveaddress between", value1, value2, "liveaddress");
            return (Criteria) this;
        }

        public Criteria andLiveaddressNotBetween(String value1, String value2) {
            addCriterion("liveaddress not between", value1, value2, "liveaddress");
            return (Criteria) this;
        }

        public Criteria andGlinfoIsNull() {
            addCriterion("glinfo is null");
            return (Criteria) this;
        }

        public Criteria andGlinfoIsNotNull() {
            addCriterion("glinfo is not null");
            return (Criteria) this;
        }

        public Criteria andGlinfoEqualTo(String value) {
            addCriterion("glinfo =", value, "glinfo");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table njuser
         *
         * @mbg.generated
         */
        public Criteria andGlinfoEqualToColumn(Njuser.Column column) {
            addCriterion(new StringBuilder("glinfo = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andGlinfoNotEqualTo(String value) {
            addCriterion("glinfo <>", value, "glinfo");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table njuser
         *
         * @mbg.generated
         */
        public Criteria andGlinfoNotEqualToColumn(Njuser.Column column) {
            addCriterion(new StringBuilder("glinfo <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andGlinfoGreaterThan(String value) {
            addCriterion("glinfo >", value, "glinfo");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table njuser
         *
         * @mbg.generated
         */
        public Criteria andGlinfoGreaterThanColumn(Njuser.Column column) {
            addCriterion(new StringBuilder("glinfo > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andGlinfoGreaterThanOrEqualTo(String value) {
            addCriterion("glinfo >=", value, "glinfo");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table njuser
         *
         * @mbg.generated
         */
        public Criteria andGlinfoGreaterThanOrEqualToColumn(Njuser.Column column) {
            addCriterion(new StringBuilder("glinfo >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andGlinfoLessThan(String value) {
            addCriterion("glinfo <", value, "glinfo");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table njuser
         *
         * @mbg.generated
         */
        public Criteria andGlinfoLessThanColumn(Njuser.Column column) {
            addCriterion(new StringBuilder("glinfo < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andGlinfoLessThanOrEqualTo(String value) {
            addCriterion("glinfo <=", value, "glinfo");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table njuser
         *
         * @mbg.generated
         */
        public Criteria andGlinfoLessThanOrEqualToColumn(Njuser.Column column) {
            addCriterion(new StringBuilder("glinfo <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andGlinfoLike(String value) {
            addCriterion("glinfo like", value, "glinfo");
            return (Criteria) this;
        }

        public Criteria andGlinfoNotLike(String value) {
            addCriterion("glinfo not like", value, "glinfo");
            return (Criteria) this;
        }

        public Criteria andGlinfoIn(List<String> values) {
            addCriterion("glinfo in", values, "glinfo");
            return (Criteria) this;
        }

        public Criteria andGlinfoNotIn(List<String> values) {
            addCriterion("glinfo not in", values, "glinfo");
            return (Criteria) this;
        }

        public Criteria andGlinfoBetween(String value1, String value2) {
            addCriterion("glinfo between", value1, value2, "glinfo");
            return (Criteria) this;
        }

        public Criteria andGlinfoNotBetween(String value1, String value2) {
            addCriterion("glinfo not between", value1, value2, "glinfo");
            return (Criteria) this;
        }

        public Criteria andZdyqinfoIsNull() {
            addCriterion("zdyqinfo is null");
            return (Criteria) this;
        }

        public Criteria andZdyqinfoIsNotNull() {
            addCriterion("zdyqinfo is not null");
            return (Criteria) this;
        }

        public Criteria andZdyqinfoEqualTo(String value) {
            addCriterion("zdyqinfo =", value, "zdyqinfo");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table njuser
         *
         * @mbg.generated
         */
        public Criteria andZdyqinfoEqualToColumn(Njuser.Column column) {
            addCriterion(new StringBuilder("zdyqinfo = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andZdyqinfoNotEqualTo(String value) {
            addCriterion("zdyqinfo <>", value, "zdyqinfo");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table njuser
         *
         * @mbg.generated
         */
        public Criteria andZdyqinfoNotEqualToColumn(Njuser.Column column) {
            addCriterion(new StringBuilder("zdyqinfo <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andZdyqinfoGreaterThan(String value) {
            addCriterion("zdyqinfo >", value, "zdyqinfo");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table njuser
         *
         * @mbg.generated
         */
        public Criteria andZdyqinfoGreaterThanColumn(Njuser.Column column) {
            addCriterion(new StringBuilder("zdyqinfo > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andZdyqinfoGreaterThanOrEqualTo(String value) {
            addCriterion("zdyqinfo >=", value, "zdyqinfo");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table njuser
         *
         * @mbg.generated
         */
        public Criteria andZdyqinfoGreaterThanOrEqualToColumn(Njuser.Column column) {
            addCriterion(new StringBuilder("zdyqinfo >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andZdyqinfoLessThan(String value) {
            addCriterion("zdyqinfo <", value, "zdyqinfo");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table njuser
         *
         * @mbg.generated
         */
        public Criteria andZdyqinfoLessThanColumn(Njuser.Column column) {
            addCriterion(new StringBuilder("zdyqinfo < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andZdyqinfoLessThanOrEqualTo(String value) {
            addCriterion("zdyqinfo <=", value, "zdyqinfo");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table njuser
         *
         * @mbg.generated
         */
        public Criteria andZdyqinfoLessThanOrEqualToColumn(Njuser.Column column) {
            addCriterion(new StringBuilder("zdyqinfo <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andZdyqinfoLike(String value) {
            addCriterion("zdyqinfo like", value, "zdyqinfo");
            return (Criteria) this;
        }

        public Criteria andZdyqinfoNotLike(String value) {
            addCriterion("zdyqinfo not like", value, "zdyqinfo");
            return (Criteria) this;
        }

        public Criteria andZdyqinfoIn(List<String> values) {
            addCriterion("zdyqinfo in", values, "zdyqinfo");
            return (Criteria) this;
        }

        public Criteria andZdyqinfoNotIn(List<String> values) {
            addCriterion("zdyqinfo not in", values, "zdyqinfo");
            return (Criteria) this;
        }

        public Criteria andZdyqinfoBetween(String value1, String value2) {
            addCriterion("zdyqinfo between", value1, value2, "zdyqinfo");
            return (Criteria) this;
        }

        public Criteria andZdyqinfoNotBetween(String value1, String value2) {
            addCriterion("zdyqinfo not between", value1, value2, "zdyqinfo");
            return (Criteria) this;
        }

        public Criteria andGlqtinfoIsNull() {
            addCriterion("glqtinfo is null");
            return (Criteria) this;
        }

        public Criteria andGlqtinfoIsNotNull() {
            addCriterion("glqtinfo is not null");
            return (Criteria) this;
        }

        public Criteria andGlqtinfoEqualTo(String value) {
            addCriterion("glqtinfo =", value, "glqtinfo");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table njuser
         *
         * @mbg.generated
         */
        public Criteria andGlqtinfoEqualToColumn(Njuser.Column column) {
            addCriterion(new StringBuilder("glqtinfo = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andGlqtinfoNotEqualTo(String value) {
            addCriterion("glqtinfo <>", value, "glqtinfo");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table njuser
         *
         * @mbg.generated
         */
        public Criteria andGlqtinfoNotEqualToColumn(Njuser.Column column) {
            addCriterion(new StringBuilder("glqtinfo <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andGlqtinfoGreaterThan(String value) {
            addCriterion("glqtinfo >", value, "glqtinfo");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table njuser
         *
         * @mbg.generated
         */
        public Criteria andGlqtinfoGreaterThanColumn(Njuser.Column column) {
            addCriterion(new StringBuilder("glqtinfo > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andGlqtinfoGreaterThanOrEqualTo(String value) {
            addCriterion("glqtinfo >=", value, "glqtinfo");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table njuser
         *
         * @mbg.generated
         */
        public Criteria andGlqtinfoGreaterThanOrEqualToColumn(Njuser.Column column) {
            addCriterion(new StringBuilder("glqtinfo >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andGlqtinfoLessThan(String value) {
            addCriterion("glqtinfo <", value, "glqtinfo");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table njuser
         *
         * @mbg.generated
         */
        public Criteria andGlqtinfoLessThanColumn(Njuser.Column column) {
            addCriterion(new StringBuilder("glqtinfo < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andGlqtinfoLessThanOrEqualTo(String value) {
            addCriterion("glqtinfo <=", value, "glqtinfo");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table njuser
         *
         * @mbg.generated
         */
        public Criteria andGlqtinfoLessThanOrEqualToColumn(Njuser.Column column) {
            addCriterion(new StringBuilder("glqtinfo <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andGlqtinfoLike(String value) {
            addCriterion("glqtinfo like", value, "glqtinfo");
            return (Criteria) this;
        }

        public Criteria andGlqtinfoNotLike(String value) {
            addCriterion("glqtinfo not like", value, "glqtinfo");
            return (Criteria) this;
        }

        public Criteria andGlqtinfoIn(List<String> values) {
            addCriterion("glqtinfo in", values, "glqtinfo");
            return (Criteria) this;
        }

        public Criteria andGlqtinfoNotIn(List<String> values) {
            addCriterion("glqtinfo not in", values, "glqtinfo");
            return (Criteria) this;
        }

        public Criteria andGlqtinfoBetween(String value1, String value2) {
            addCriterion("glqtinfo between", value1, value2, "glqtinfo");
            return (Criteria) this;
        }

        public Criteria andGlqtinfoNotBetween(String value1, String value2) {
            addCriterion("glqtinfo not between", value1, value2, "glqtinfo");
            return (Criteria) this;
        }

        public Criteria andStarttimeIsNull() {
            addCriterion("starttime is null");
            return (Criteria) this;
        }

        public Criteria andStarttimeIsNotNull() {
            addCriterion("starttime is not null");
            return (Criteria) this;
        }

        public Criteria andStarttimeEqualTo(LocalDateTime value) {
            addCriterion("starttime =", value, "starttime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table njuser
         *
         * @mbg.generated
         */
        public Criteria andStarttimeEqualToColumn(Njuser.Column column) {
            addCriterion(new StringBuilder("starttime = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andStarttimeNotEqualTo(LocalDateTime value) {
            addCriterion("starttime <>", value, "starttime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table njuser
         *
         * @mbg.generated
         */
        public Criteria andStarttimeNotEqualToColumn(Njuser.Column column) {
            addCriterion(new StringBuilder("starttime <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andStarttimeGreaterThan(LocalDateTime value) {
            addCriterion("starttime >", value, "starttime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table njuser
         *
         * @mbg.generated
         */
        public Criteria andStarttimeGreaterThanColumn(Njuser.Column column) {
            addCriterion(new StringBuilder("starttime > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andStarttimeGreaterThanOrEqualTo(LocalDateTime value) {
            addCriterion("starttime >=", value, "starttime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table njuser
         *
         * @mbg.generated
         */
        public Criteria andStarttimeGreaterThanOrEqualToColumn(Njuser.Column column) {
            addCriterion(new StringBuilder("starttime >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andStarttimeLessThan(LocalDateTime value) {
            addCriterion("starttime <", value, "starttime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table njuser
         *
         * @mbg.generated
         */
        public Criteria andStarttimeLessThanColumn(Njuser.Column column) {
            addCriterion(new StringBuilder("starttime < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andStarttimeLessThanOrEqualTo(LocalDateTime value) {
            addCriterion("starttime <=", value, "starttime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table njuser
         *
         * @mbg.generated
         */
        public Criteria andStarttimeLessThanOrEqualToColumn(Njuser.Column column) {
            addCriterion(new StringBuilder("starttime <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andStarttimeIn(List<LocalDateTime> values) {
            addCriterion("starttime in", values, "starttime");
            return (Criteria) this;
        }

        public Criteria andStarttimeNotIn(List<LocalDateTime> values) {
            addCriterion("starttime not in", values, "starttime");
            return (Criteria) this;
        }

        public Criteria andStarttimeBetween(LocalDateTime value1, LocalDateTime value2) {
            addCriterion("starttime between", value1, value2, "starttime");
            return (Criteria) this;
        }

        public Criteria andStarttimeNotBetween(LocalDateTime value1, LocalDateTime value2) {
            addCriterion("starttime not between", value1, value2, "starttime");
            return (Criteria) this;
        }

        public Criteria andStoptimeIsNull() {
            addCriterion("stoptime is null");
            return (Criteria) this;
        }

        public Criteria andStoptimeIsNotNull() {
            addCriterion("stoptime is not null");
            return (Criteria) this;
        }

        public Criteria andStoptimeEqualTo(LocalDateTime value) {
            addCriterion("stoptime =", value, "stoptime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table njuser
         *
         * @mbg.generated
         */
        public Criteria andStoptimeEqualToColumn(Njuser.Column column) {
            addCriterion(new StringBuilder("stoptime = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andStoptimeNotEqualTo(LocalDateTime value) {
            addCriterion("stoptime <>", value, "stoptime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table njuser
         *
         * @mbg.generated
         */
        public Criteria andStoptimeNotEqualToColumn(Njuser.Column column) {
            addCriterion(new StringBuilder("stoptime <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andStoptimeGreaterThan(LocalDateTime value) {
            addCriterion("stoptime >", value, "stoptime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table njuser
         *
         * @mbg.generated
         */
        public Criteria andStoptimeGreaterThanColumn(Njuser.Column column) {
            addCriterion(new StringBuilder("stoptime > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andStoptimeGreaterThanOrEqualTo(LocalDateTime value) {
            addCriterion("stoptime >=", value, "stoptime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table njuser
         *
         * @mbg.generated
         */
        public Criteria andStoptimeGreaterThanOrEqualToColumn(Njuser.Column column) {
            addCriterion(new StringBuilder("stoptime >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andStoptimeLessThan(LocalDateTime value) {
            addCriterion("stoptime <", value, "stoptime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table njuser
         *
         * @mbg.generated
         */
        public Criteria andStoptimeLessThanColumn(Njuser.Column column) {
            addCriterion(new StringBuilder("stoptime < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andStoptimeLessThanOrEqualTo(LocalDateTime value) {
            addCriterion("stoptime <=", value, "stoptime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table njuser
         *
         * @mbg.generated
         */
        public Criteria andStoptimeLessThanOrEqualToColumn(Njuser.Column column) {
            addCriterion(new StringBuilder("stoptime <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andStoptimeIn(List<LocalDateTime> values) {
            addCriterion("stoptime in", values, "stoptime");
            return (Criteria) this;
        }

        public Criteria andStoptimeNotIn(List<LocalDateTime> values) {
            addCriterion("stoptime not in", values, "stoptime");
            return (Criteria) this;
        }

        public Criteria andStoptimeBetween(LocalDateTime value1, LocalDateTime value2) {
            addCriterion("stoptime between", value1, value2, "stoptime");
            return (Criteria) this;
        }

        public Criteria andStoptimeNotBetween(LocalDateTime value1, LocalDateTime value2) {
            addCriterion("stoptime not between", value1, value2, "stoptime");
            return (Criteria) this;
        }

        public Criteria andStopinfoIsNull() {
            addCriterion("stopinfo is null");
            return (Criteria) this;
        }

        public Criteria andStopinfoIsNotNull() {
            addCriterion("stopinfo is not null");
            return (Criteria) this;
        }

        public Criteria andStopinfoEqualTo(String value) {
            addCriterion("stopinfo =", value, "stopinfo");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table njuser
         *
         * @mbg.generated
         */
        public Criteria andStopinfoEqualToColumn(Njuser.Column column) {
            addCriterion(new StringBuilder("stopinfo = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andStopinfoNotEqualTo(String value) {
            addCriterion("stopinfo <>", value, "stopinfo");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table njuser
         *
         * @mbg.generated
         */
        public Criteria andStopinfoNotEqualToColumn(Njuser.Column column) {
            addCriterion(new StringBuilder("stopinfo <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andStopinfoGreaterThan(String value) {
            addCriterion("stopinfo >", value, "stopinfo");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table njuser
         *
         * @mbg.generated
         */
        public Criteria andStopinfoGreaterThanColumn(Njuser.Column column) {
            addCriterion(new StringBuilder("stopinfo > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andStopinfoGreaterThanOrEqualTo(String value) {
            addCriterion("stopinfo >=", value, "stopinfo");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table njuser
         *
         * @mbg.generated
         */
        public Criteria andStopinfoGreaterThanOrEqualToColumn(Njuser.Column column) {
            addCriterion(new StringBuilder("stopinfo >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andStopinfoLessThan(String value) {
            addCriterion("stopinfo <", value, "stopinfo");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table njuser
         *
         * @mbg.generated
         */
        public Criteria andStopinfoLessThanColumn(Njuser.Column column) {
            addCriterion(new StringBuilder("stopinfo < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andStopinfoLessThanOrEqualTo(String value) {
            addCriterion("stopinfo <=", value, "stopinfo");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table njuser
         *
         * @mbg.generated
         */
        public Criteria andStopinfoLessThanOrEqualToColumn(Njuser.Column column) {
            addCriterion(new StringBuilder("stopinfo <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andStopinfoLike(String value) {
            addCriterion("stopinfo like", value, "stopinfo");
            return (Criteria) this;
        }

        public Criteria andStopinfoNotLike(String value) {
            addCriterion("stopinfo not like", value, "stopinfo");
            return (Criteria) this;
        }

        public Criteria andStopinfoIn(List<String> values) {
            addCriterion("stopinfo in", values, "stopinfo");
            return (Criteria) this;
        }

        public Criteria andStopinfoNotIn(List<String> values) {
            addCriterion("stopinfo not in", values, "stopinfo");
            return (Criteria) this;
        }

        public Criteria andStopinfoBetween(String value1, String value2) {
            addCriterion("stopinfo between", value1, value2, "stopinfo");
            return (Criteria) this;
        }

        public Criteria andStopinfoNotBetween(String value1, String value2) {
            addCriterion("stopinfo not between", value1, value2, "stopinfo");
            return (Criteria) this;
        }

        public Criteria andEndtimeIsNull() {
            addCriterion("endtime is null");
            return (Criteria) this;
        }

        public Criteria andEndtimeIsNotNull() {
            addCriterion("endtime is not null");
            return (Criteria) this;
        }

        public Criteria andEndtimeEqualTo(LocalDateTime value) {
            addCriterion("endtime =", value, "endtime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table njuser
         *
         * @mbg.generated
         */
        public Criteria andEndtimeEqualToColumn(Njuser.Column column) {
            addCriterion(new StringBuilder("endtime = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andEndtimeNotEqualTo(LocalDateTime value) {
            addCriterion("endtime <>", value, "endtime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table njuser
         *
         * @mbg.generated
         */
        public Criteria andEndtimeNotEqualToColumn(Njuser.Column column) {
            addCriterion(new StringBuilder("endtime <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andEndtimeGreaterThan(LocalDateTime value) {
            addCriterion("endtime >", value, "endtime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table njuser
         *
         * @mbg.generated
         */
        public Criteria andEndtimeGreaterThanColumn(Njuser.Column column) {
            addCriterion(new StringBuilder("endtime > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andEndtimeGreaterThanOrEqualTo(LocalDateTime value) {
            addCriterion("endtime >=", value, "endtime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table njuser
         *
         * @mbg.generated
         */
        public Criteria andEndtimeGreaterThanOrEqualToColumn(Njuser.Column column) {
            addCriterion(new StringBuilder("endtime >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andEndtimeLessThan(LocalDateTime value) {
            addCriterion("endtime <", value, "endtime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table njuser
         *
         * @mbg.generated
         */
        public Criteria andEndtimeLessThanColumn(Njuser.Column column) {
            addCriterion(new StringBuilder("endtime < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andEndtimeLessThanOrEqualTo(LocalDateTime value) {
            addCriterion("endtime <=", value, "endtime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table njuser
         *
         * @mbg.generated
         */
        public Criteria andEndtimeLessThanOrEqualToColumn(Njuser.Column column) {
            addCriterion(new StringBuilder("endtime <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andEndtimeIn(List<LocalDateTime> values) {
            addCriterion("endtime in", values, "endtime");
            return (Criteria) this;
        }

        public Criteria andEndtimeNotIn(List<LocalDateTime> values) {
            addCriterion("endtime not in", values, "endtime");
            return (Criteria) this;
        }

        public Criteria andEndtimeBetween(LocalDateTime value1, LocalDateTime value2) {
            addCriterion("endtime between", value1, value2, "endtime");
            return (Criteria) this;
        }

        public Criteria andEndtimeNotBetween(LocalDateTime value1, LocalDateTime value2) {
            addCriterion("endtime not between", value1, value2, "endtime");
            return (Criteria) this;
        }

        public Criteria andSgnameIsNull() {
            addCriterion("sgname is null");
            return (Criteria) this;
        }

        public Criteria andSgnameIsNotNull() {
            addCriterion("sgname is not null");
            return (Criteria) this;
        }

        public Criteria andSgnameEqualTo(String value) {
            addCriterion("sgname =", value, "sgname");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table njuser
         *
         * @mbg.generated
         */
        public Criteria andSgnameEqualToColumn(Njuser.Column column) {
            addCriterion(new StringBuilder("sgname = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andSgnameNotEqualTo(String value) {
            addCriterion("sgname <>", value, "sgname");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table njuser
         *
         * @mbg.generated
         */
        public Criteria andSgnameNotEqualToColumn(Njuser.Column column) {
            addCriterion(new StringBuilder("sgname <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andSgnameGreaterThan(String value) {
            addCriterion("sgname >", value, "sgname");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table njuser
         *
         * @mbg.generated
         */
        public Criteria andSgnameGreaterThanColumn(Njuser.Column column) {
            addCriterion(new StringBuilder("sgname > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andSgnameGreaterThanOrEqualTo(String value) {
            addCriterion("sgname >=", value, "sgname");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table njuser
         *
         * @mbg.generated
         */
        public Criteria andSgnameGreaterThanOrEqualToColumn(Njuser.Column column) {
            addCriterion(new StringBuilder("sgname >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andSgnameLessThan(String value) {
            addCriterion("sgname <", value, "sgname");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table njuser
         *
         * @mbg.generated
         */
        public Criteria andSgnameLessThanColumn(Njuser.Column column) {
            addCriterion(new StringBuilder("sgname < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andSgnameLessThanOrEqualTo(String value) {
            addCriterion("sgname <=", value, "sgname");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table njuser
         *
         * @mbg.generated
         */
        public Criteria andSgnameLessThanOrEqualToColumn(Njuser.Column column) {
            addCriterion(new StringBuilder("sgname <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andSgnameLike(String value) {
            addCriterion("sgname like", value, "sgname");
            return (Criteria) this;
        }

        public Criteria andSgnameNotLike(String value) {
            addCriterion("sgname not like", value, "sgname");
            return (Criteria) this;
        }

        public Criteria andSgnameIn(List<String> values) {
            addCriterion("sgname in", values, "sgname");
            return (Criteria) this;
        }

        public Criteria andSgnameNotIn(List<String> values) {
            addCriterion("sgname not in", values, "sgname");
            return (Criteria) this;
        }

        public Criteria andSgnameBetween(String value1, String value2) {
            addCriterion("sgname between", value1, value2, "sgname");
            return (Criteria) this;
        }

        public Criteria andSgnameNotBetween(String value1, String value2) {
            addCriterion("sgname not between", value1, value2, "sgname");
            return (Criteria) this;
        }

        public Criteria andSgphoneIsNull() {
            addCriterion("sgphone is null");
            return (Criteria) this;
        }

        public Criteria andSgphoneIsNotNull() {
            addCriterion("sgphone is not null");
            return (Criteria) this;
        }

        public Criteria andSgphoneEqualTo(String value) {
            addCriterion("sgphone =", value, "sgphone");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table njuser
         *
         * @mbg.generated
         */
        public Criteria andSgphoneEqualToColumn(Njuser.Column column) {
            addCriterion(new StringBuilder("sgphone = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andSgphoneNotEqualTo(String value) {
            addCriterion("sgphone <>", value, "sgphone");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table njuser
         *
         * @mbg.generated
         */
        public Criteria andSgphoneNotEqualToColumn(Njuser.Column column) {
            addCriterion(new StringBuilder("sgphone <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andSgphoneGreaterThan(String value) {
            addCriterion("sgphone >", value, "sgphone");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table njuser
         *
         * @mbg.generated
         */
        public Criteria andSgphoneGreaterThanColumn(Njuser.Column column) {
            addCriterion(new StringBuilder("sgphone > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andSgphoneGreaterThanOrEqualTo(String value) {
            addCriterion("sgphone >=", value, "sgphone");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table njuser
         *
         * @mbg.generated
         */
        public Criteria andSgphoneGreaterThanOrEqualToColumn(Njuser.Column column) {
            addCriterion(new StringBuilder("sgphone >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andSgphoneLessThan(String value) {
            addCriterion("sgphone <", value, "sgphone");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table njuser
         *
         * @mbg.generated
         */
        public Criteria andSgphoneLessThanColumn(Njuser.Column column) {
            addCriterion(new StringBuilder("sgphone < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andSgphoneLessThanOrEqualTo(String value) {
            addCriterion("sgphone <=", value, "sgphone");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table njuser
         *
         * @mbg.generated
         */
        public Criteria andSgphoneLessThanOrEqualToColumn(Njuser.Column column) {
            addCriterion(new StringBuilder("sgphone <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andSgphoneLike(String value) {
            addCriterion("sgphone like", value, "sgphone");
            return (Criteria) this;
        }

        public Criteria andSgphoneNotLike(String value) {
            addCriterion("sgphone not like", value, "sgphone");
            return (Criteria) this;
        }

        public Criteria andSgphoneIn(List<String> values) {
            addCriterion("sgphone in", values, "sgphone");
            return (Criteria) this;
        }

        public Criteria andSgphoneNotIn(List<String> values) {
            addCriterion("sgphone not in", values, "sgphone");
            return (Criteria) this;
        }

        public Criteria andSgphoneBetween(String value1, String value2) {
            addCriterion("sgphone between", value1, value2, "sgphone");
            return (Criteria) this;
        }

        public Criteria andSgphoneNotBetween(String value1, String value2) {
            addCriterion("sgphone not between", value1, value2, "sgphone");
            return (Criteria) this;
        }

        public Criteria andYlnameIsNull() {
            addCriterion("ylname is null");
            return (Criteria) this;
        }

        public Criteria andYlnameIsNotNull() {
            addCriterion("ylname is not null");
            return (Criteria) this;
        }

        public Criteria andYlnameEqualTo(String value) {
            addCriterion("ylname =", value, "ylname");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table njuser
         *
         * @mbg.generated
         */
        public Criteria andYlnameEqualToColumn(Njuser.Column column) {
            addCriterion(new StringBuilder("ylname = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andYlnameNotEqualTo(String value) {
            addCriterion("ylname <>", value, "ylname");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table njuser
         *
         * @mbg.generated
         */
        public Criteria andYlnameNotEqualToColumn(Njuser.Column column) {
            addCriterion(new StringBuilder("ylname <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andYlnameGreaterThan(String value) {
            addCriterion("ylname >", value, "ylname");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table njuser
         *
         * @mbg.generated
         */
        public Criteria andYlnameGreaterThanColumn(Njuser.Column column) {
            addCriterion(new StringBuilder("ylname > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andYlnameGreaterThanOrEqualTo(String value) {
            addCriterion("ylname >=", value, "ylname");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table njuser
         *
         * @mbg.generated
         */
        public Criteria andYlnameGreaterThanOrEqualToColumn(Njuser.Column column) {
            addCriterion(new StringBuilder("ylname >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andYlnameLessThan(String value) {
            addCriterion("ylname <", value, "ylname");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table njuser
         *
         * @mbg.generated
         */
        public Criteria andYlnameLessThanColumn(Njuser.Column column) {
            addCriterion(new StringBuilder("ylname < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andYlnameLessThanOrEqualTo(String value) {
            addCriterion("ylname <=", value, "ylname");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table njuser
         *
         * @mbg.generated
         */
        public Criteria andYlnameLessThanOrEqualToColumn(Njuser.Column column) {
            addCriterion(new StringBuilder("ylname <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andYlnameLike(String value) {
            addCriterion("ylname like", value, "ylname");
            return (Criteria) this;
        }

        public Criteria andYlnameNotLike(String value) {
            addCriterion("ylname not like", value, "ylname");
            return (Criteria) this;
        }

        public Criteria andYlnameIn(List<String> values) {
            addCriterion("ylname in", values, "ylname");
            return (Criteria) this;
        }

        public Criteria andYlnameNotIn(List<String> values) {
            addCriterion("ylname not in", values, "ylname");
            return (Criteria) this;
        }

        public Criteria andYlnameBetween(String value1, String value2) {
            addCriterion("ylname between", value1, value2, "ylname");
            return (Criteria) this;
        }

        public Criteria andYlnameNotBetween(String value1, String value2) {
            addCriterion("ylname not between", value1, value2, "ylname");
            return (Criteria) this;
        }

        public Criteria andYlphoneIsNull() {
            addCriterion("ylphone is null");
            return (Criteria) this;
        }

        public Criteria andYlphoneIsNotNull() {
            addCriterion("ylphone is not null");
            return (Criteria) this;
        }

        public Criteria andYlphoneEqualTo(String value) {
            addCriterion("ylphone =", value, "ylphone");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table njuser
         *
         * @mbg.generated
         */
        public Criteria andYlphoneEqualToColumn(Njuser.Column column) {
            addCriterion(new StringBuilder("ylphone = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andYlphoneNotEqualTo(String value) {
            addCriterion("ylphone <>", value, "ylphone");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table njuser
         *
         * @mbg.generated
         */
        public Criteria andYlphoneNotEqualToColumn(Njuser.Column column) {
            addCriterion(new StringBuilder("ylphone <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andYlphoneGreaterThan(String value) {
            addCriterion("ylphone >", value, "ylphone");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table njuser
         *
         * @mbg.generated
         */
        public Criteria andYlphoneGreaterThanColumn(Njuser.Column column) {
            addCriterion(new StringBuilder("ylphone > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andYlphoneGreaterThanOrEqualTo(String value) {
            addCriterion("ylphone >=", value, "ylphone");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table njuser
         *
         * @mbg.generated
         */
        public Criteria andYlphoneGreaterThanOrEqualToColumn(Njuser.Column column) {
            addCriterion(new StringBuilder("ylphone >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andYlphoneLessThan(String value) {
            addCriterion("ylphone <", value, "ylphone");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table njuser
         *
         * @mbg.generated
         */
        public Criteria andYlphoneLessThanColumn(Njuser.Column column) {
            addCriterion(new StringBuilder("ylphone < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andYlphoneLessThanOrEqualTo(String value) {
            addCriterion("ylphone <=", value, "ylphone");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table njuser
         *
         * @mbg.generated
         */
        public Criteria andYlphoneLessThanOrEqualToColumn(Njuser.Column column) {
            addCriterion(new StringBuilder("ylphone <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andYlphoneLike(String value) {
            addCriterion("ylphone like", value, "ylphone");
            return (Criteria) this;
        }

        public Criteria andYlphoneNotLike(String value) {
            addCriterion("ylphone not like", value, "ylphone");
            return (Criteria) this;
        }

        public Criteria andYlphoneIn(List<String> values) {
            addCriterion("ylphone in", values, "ylphone");
            return (Criteria) this;
        }

        public Criteria andYlphoneNotIn(List<String> values) {
            addCriterion("ylphone not in", values, "ylphone");
            return (Criteria) this;
        }

        public Criteria andYlphoneBetween(String value1, String value2) {
            addCriterion("ylphone between", value1, value2, "ylphone");
            return (Criteria) this;
        }

        public Criteria andYlphoneNotBetween(String value1, String value2) {
            addCriterion("ylphone not between", value1, value2, "ylphone");
            return (Criteria) this;
        }

        public Criteria andMjnameIsNull() {
            addCriterion("mjname is null");
            return (Criteria) this;
        }

        public Criteria andMjnameIsNotNull() {
            addCriterion("mjname is not null");
            return (Criteria) this;
        }

        public Criteria andMjnameEqualTo(String value) {
            addCriterion("mjname =", value, "mjname");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table njuser
         *
         * @mbg.generated
         */
        public Criteria andMjnameEqualToColumn(Njuser.Column column) {
            addCriterion(new StringBuilder("mjname = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andMjnameNotEqualTo(String value) {
            addCriterion("mjname <>", value, "mjname");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table njuser
         *
         * @mbg.generated
         */
        public Criteria andMjnameNotEqualToColumn(Njuser.Column column) {
            addCriterion(new StringBuilder("mjname <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andMjnameGreaterThan(String value) {
            addCriterion("mjname >", value, "mjname");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table njuser
         *
         * @mbg.generated
         */
        public Criteria andMjnameGreaterThanColumn(Njuser.Column column) {
            addCriterion(new StringBuilder("mjname > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andMjnameGreaterThanOrEqualTo(String value) {
            addCriterion("mjname >=", value, "mjname");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table njuser
         *
         * @mbg.generated
         */
        public Criteria andMjnameGreaterThanOrEqualToColumn(Njuser.Column column) {
            addCriterion(new StringBuilder("mjname >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andMjnameLessThan(String value) {
            addCriterion("mjname <", value, "mjname");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table njuser
         *
         * @mbg.generated
         */
        public Criteria andMjnameLessThanColumn(Njuser.Column column) {
            addCriterion(new StringBuilder("mjname < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andMjnameLessThanOrEqualTo(String value) {
            addCriterion("mjname <=", value, "mjname");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table njuser
         *
         * @mbg.generated
         */
        public Criteria andMjnameLessThanOrEqualToColumn(Njuser.Column column) {
            addCriterion(new StringBuilder("mjname <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andMjnameLike(String value) {
            addCriterion("mjname like", value, "mjname");
            return (Criteria) this;
        }

        public Criteria andMjnameNotLike(String value) {
            addCriterion("mjname not like", value, "mjname");
            return (Criteria) this;
        }

        public Criteria andMjnameIn(List<String> values) {
            addCriterion("mjname in", values, "mjname");
            return (Criteria) this;
        }

        public Criteria andMjnameNotIn(List<String> values) {
            addCriterion("mjname not in", values, "mjname");
            return (Criteria) this;
        }

        public Criteria andMjnameBetween(String value1, String value2) {
            addCriterion("mjname between", value1, value2, "mjname");
            return (Criteria) this;
        }

        public Criteria andMjnameNotBetween(String value1, String value2) {
            addCriterion("mjname not between", value1, value2, "mjname");
            return (Criteria) this;
        }

        public Criteria andMjphoneIsNull() {
            addCriterion("mjphone is null");
            return (Criteria) this;
        }

        public Criteria andMjphoneIsNotNull() {
            addCriterion("mjphone is not null");
            return (Criteria) this;
        }

        public Criteria andMjphoneEqualTo(String value) {
            addCriterion("mjphone =", value, "mjphone");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table njuser
         *
         * @mbg.generated
         */
        public Criteria andMjphoneEqualToColumn(Njuser.Column column) {
            addCriterion(new StringBuilder("mjphone = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andMjphoneNotEqualTo(String value) {
            addCriterion("mjphone <>", value, "mjphone");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table njuser
         *
         * @mbg.generated
         */
        public Criteria andMjphoneNotEqualToColumn(Njuser.Column column) {
            addCriterion(new StringBuilder("mjphone <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andMjphoneGreaterThan(String value) {
            addCriterion("mjphone >", value, "mjphone");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table njuser
         *
         * @mbg.generated
         */
        public Criteria andMjphoneGreaterThanColumn(Njuser.Column column) {
            addCriterion(new StringBuilder("mjphone > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andMjphoneGreaterThanOrEqualTo(String value) {
            addCriterion("mjphone >=", value, "mjphone");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table njuser
         *
         * @mbg.generated
         */
        public Criteria andMjphoneGreaterThanOrEqualToColumn(Njuser.Column column) {
            addCriterion(new StringBuilder("mjphone >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andMjphoneLessThan(String value) {
            addCriterion("mjphone <", value, "mjphone");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table njuser
         *
         * @mbg.generated
         */
        public Criteria andMjphoneLessThanColumn(Njuser.Column column) {
            addCriterion(new StringBuilder("mjphone < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andMjphoneLessThanOrEqualTo(String value) {
            addCriterion("mjphone <=", value, "mjphone");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table njuser
         *
         * @mbg.generated
         */
        public Criteria andMjphoneLessThanOrEqualToColumn(Njuser.Column column) {
            addCriterion(new StringBuilder("mjphone <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andMjphoneLike(String value) {
            addCriterion("mjphone like", value, "mjphone");
            return (Criteria) this;
        }

        public Criteria andMjphoneNotLike(String value) {
            addCriterion("mjphone not like", value, "mjphone");
            return (Criteria) this;
        }

        public Criteria andMjphoneIn(List<String> values) {
            addCriterion("mjphone in", values, "mjphone");
            return (Criteria) this;
        }

        public Criteria andMjphoneNotIn(List<String> values) {
            addCriterion("mjphone not in", values, "mjphone");
            return (Criteria) this;
        }

        public Criteria andMjphoneBetween(String value1, String value2) {
            addCriterion("mjphone between", value1, value2, "mjphone");
            return (Criteria) this;
        }

        public Criteria andMjphoneNotBetween(String value1, String value2) {
            addCriterion("mjphone not between", value1, value2, "mjphone");
            return (Criteria) this;
        }

        public Criteria andWgnameIsNull() {
            addCriterion("wgname is null");
            return (Criteria) this;
        }

        public Criteria andWgnameIsNotNull() {
            addCriterion("wgname is not null");
            return (Criteria) this;
        }

        public Criteria andWgnameEqualTo(String value) {
            addCriterion("wgname =", value, "wgname");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table njuser
         *
         * @mbg.generated
         */
        public Criteria andWgnameEqualToColumn(Njuser.Column column) {
            addCriterion(new StringBuilder("wgname = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andWgnameNotEqualTo(String value) {
            addCriterion("wgname <>", value, "wgname");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table njuser
         *
         * @mbg.generated
         */
        public Criteria andWgnameNotEqualToColumn(Njuser.Column column) {
            addCriterion(new StringBuilder("wgname <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andWgnameGreaterThan(String value) {
            addCriterion("wgname >", value, "wgname");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table njuser
         *
         * @mbg.generated
         */
        public Criteria andWgnameGreaterThanColumn(Njuser.Column column) {
            addCriterion(new StringBuilder("wgname > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andWgnameGreaterThanOrEqualTo(String value) {
            addCriterion("wgname >=", value, "wgname");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table njuser
         *
         * @mbg.generated
         */
        public Criteria andWgnameGreaterThanOrEqualToColumn(Njuser.Column column) {
            addCriterion(new StringBuilder("wgname >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andWgnameLessThan(String value) {
            addCriterion("wgname <", value, "wgname");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table njuser
         *
         * @mbg.generated
         */
        public Criteria andWgnameLessThanColumn(Njuser.Column column) {
            addCriterion(new StringBuilder("wgname < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andWgnameLessThanOrEqualTo(String value) {
            addCriterion("wgname <=", value, "wgname");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table njuser
         *
         * @mbg.generated
         */
        public Criteria andWgnameLessThanOrEqualToColumn(Njuser.Column column) {
            addCriterion(new StringBuilder("wgname <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andWgnameLike(String value) {
            addCriterion("wgname like", value, "wgname");
            return (Criteria) this;
        }

        public Criteria andWgnameNotLike(String value) {
            addCriterion("wgname not like", value, "wgname");
            return (Criteria) this;
        }

        public Criteria andWgnameIn(List<String> values) {
            addCriterion("wgname in", values, "wgname");
            return (Criteria) this;
        }

        public Criteria andWgnameNotIn(List<String> values) {
            addCriterion("wgname not in", values, "wgname");
            return (Criteria) this;
        }

        public Criteria andWgnameBetween(String value1, String value2) {
            addCriterion("wgname between", value1, value2, "wgname");
            return (Criteria) this;
        }

        public Criteria andWgnameNotBetween(String value1, String value2) {
            addCriterion("wgname not between", value1, value2, "wgname");
            return (Criteria) this;
        }

        public Criteria andWgphoneIsNull() {
            addCriterion("wgphone is null");
            return (Criteria) this;
        }

        public Criteria andWgphoneIsNotNull() {
            addCriterion("wgphone is not null");
            return (Criteria) this;
        }

        public Criteria andWgphoneEqualTo(String value) {
            addCriterion("wgphone =", value, "wgphone");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table njuser
         *
         * @mbg.generated
         */
        public Criteria andWgphoneEqualToColumn(Njuser.Column column) {
            addCriterion(new StringBuilder("wgphone = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andWgphoneNotEqualTo(String value) {
            addCriterion("wgphone <>", value, "wgphone");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table njuser
         *
         * @mbg.generated
         */
        public Criteria andWgphoneNotEqualToColumn(Njuser.Column column) {
            addCriterion(new StringBuilder("wgphone <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andWgphoneGreaterThan(String value) {
            addCriterion("wgphone >", value, "wgphone");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table njuser
         *
         * @mbg.generated
         */
        public Criteria andWgphoneGreaterThanColumn(Njuser.Column column) {
            addCriterion(new StringBuilder("wgphone > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andWgphoneGreaterThanOrEqualTo(String value) {
            addCriterion("wgphone >=", value, "wgphone");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table njuser
         *
         * @mbg.generated
         */
        public Criteria andWgphoneGreaterThanOrEqualToColumn(Njuser.Column column) {
            addCriterion(new StringBuilder("wgphone >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andWgphoneLessThan(String value) {
            addCriterion("wgphone <", value, "wgphone");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table njuser
         *
         * @mbg.generated
         */
        public Criteria andWgphoneLessThanColumn(Njuser.Column column) {
            addCriterion(new StringBuilder("wgphone < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andWgphoneLessThanOrEqualTo(String value) {
            addCriterion("wgphone <=", value, "wgphone");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table njuser
         *
         * @mbg.generated
         */
        public Criteria andWgphoneLessThanOrEqualToColumn(Njuser.Column column) {
            addCriterion(new StringBuilder("wgphone <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andWgphoneLike(String value) {
            addCriterion("wgphone like", value, "wgphone");
            return (Criteria) this;
        }

        public Criteria andWgphoneNotLike(String value) {
            addCriterion("wgphone not like", value, "wgphone");
            return (Criteria) this;
        }

        public Criteria andWgphoneIn(List<String> values) {
            addCriterion("wgphone in", values, "wgphone");
            return (Criteria) this;
        }

        public Criteria andWgphoneNotIn(List<String> values) {
            addCriterion("wgphone not in", values, "wgphone");
            return (Criteria) this;
        }

        public Criteria andWgphoneBetween(String value1, String value2) {
            addCriterion("wgphone between", value1, value2, "wgphone");
            return (Criteria) this;
        }

        public Criteria andWgphoneNotBetween(String value1, String value2) {
            addCriterion("wgphone not between", value1, value2, "wgphone");
            return (Criteria) this;
        }

        public Criteria andGbnameIsNull() {
            addCriterion("gbname is null");
            return (Criteria) this;
        }

        public Criteria andGbnameIsNotNull() {
            addCriterion("gbname is not null");
            return (Criteria) this;
        }

        public Criteria andGbnameEqualTo(String value) {
            addCriterion("gbname =", value, "gbname");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table njuser
         *
         * @mbg.generated
         */
        public Criteria andGbnameEqualToColumn(Njuser.Column column) {
            addCriterion(new StringBuilder("gbname = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andGbnameNotEqualTo(String value) {
            addCriterion("gbname <>", value, "gbname");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table njuser
         *
         * @mbg.generated
         */
        public Criteria andGbnameNotEqualToColumn(Njuser.Column column) {
            addCriterion(new StringBuilder("gbname <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andGbnameGreaterThan(String value) {
            addCriterion("gbname >", value, "gbname");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table njuser
         *
         * @mbg.generated
         */
        public Criteria andGbnameGreaterThanColumn(Njuser.Column column) {
            addCriterion(new StringBuilder("gbname > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andGbnameGreaterThanOrEqualTo(String value) {
            addCriterion("gbname >=", value, "gbname");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table njuser
         *
         * @mbg.generated
         */
        public Criteria andGbnameGreaterThanOrEqualToColumn(Njuser.Column column) {
            addCriterion(new StringBuilder("gbname >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andGbnameLessThan(String value) {
            addCriterion("gbname <", value, "gbname");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table njuser
         *
         * @mbg.generated
         */
        public Criteria andGbnameLessThanColumn(Njuser.Column column) {
            addCriterion(new StringBuilder("gbname < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andGbnameLessThanOrEqualTo(String value) {
            addCriterion("gbname <=", value, "gbname");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table njuser
         *
         * @mbg.generated
         */
        public Criteria andGbnameLessThanOrEqualToColumn(Njuser.Column column) {
            addCriterion(new StringBuilder("gbname <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andGbnameLike(String value) {
            addCriterion("gbname like", value, "gbname");
            return (Criteria) this;
        }

        public Criteria andGbnameNotLike(String value) {
            addCriterion("gbname not like", value, "gbname");
            return (Criteria) this;
        }

        public Criteria andGbnameIn(List<String> values) {
            addCriterion("gbname in", values, "gbname");
            return (Criteria) this;
        }

        public Criteria andGbnameNotIn(List<String> values) {
            addCriterion("gbname not in", values, "gbname");
            return (Criteria) this;
        }

        public Criteria andGbnameBetween(String value1, String value2) {
            addCriterion("gbname between", value1, value2, "gbname");
            return (Criteria) this;
        }

        public Criteria andGbnameNotBetween(String value1, String value2) {
            addCriterion("gbname not between", value1, value2, "gbname");
            return (Criteria) this;
        }

        public Criteria andGbphoneIsNull() {
            addCriterion("gbphone is null");
            return (Criteria) this;
        }

        public Criteria andGbphoneIsNotNull() {
            addCriterion("gbphone is not null");
            return (Criteria) this;
        }

        public Criteria andGbphoneEqualTo(String value) {
            addCriterion("gbphone =", value, "gbphone");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table njuser
         *
         * @mbg.generated
         */
        public Criteria andGbphoneEqualToColumn(Njuser.Column column) {
            addCriterion(new StringBuilder("gbphone = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andGbphoneNotEqualTo(String value) {
            addCriterion("gbphone <>", value, "gbphone");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table njuser
         *
         * @mbg.generated
         */
        public Criteria andGbphoneNotEqualToColumn(Njuser.Column column) {
            addCriterion(new StringBuilder("gbphone <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andGbphoneGreaterThan(String value) {
            addCriterion("gbphone >", value, "gbphone");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table njuser
         *
         * @mbg.generated
         */
        public Criteria andGbphoneGreaterThanColumn(Njuser.Column column) {
            addCriterion(new StringBuilder("gbphone > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andGbphoneGreaterThanOrEqualTo(String value) {
            addCriterion("gbphone >=", value, "gbphone");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table njuser
         *
         * @mbg.generated
         */
        public Criteria andGbphoneGreaterThanOrEqualToColumn(Njuser.Column column) {
            addCriterion(new StringBuilder("gbphone >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andGbphoneLessThan(String value) {
            addCriterion("gbphone <", value, "gbphone");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table njuser
         *
         * @mbg.generated
         */
        public Criteria andGbphoneLessThanColumn(Njuser.Column column) {
            addCriterion(new StringBuilder("gbphone < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andGbphoneLessThanOrEqualTo(String value) {
            addCriterion("gbphone <=", value, "gbphone");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table njuser
         *
         * @mbg.generated
         */
        public Criteria andGbphoneLessThanOrEqualToColumn(Njuser.Column column) {
            addCriterion(new StringBuilder("gbphone <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andGbphoneLike(String value) {
            addCriterion("gbphone like", value, "gbphone");
            return (Criteria) this;
        }

        public Criteria andGbphoneNotLike(String value) {
            addCriterion("gbphone not like", value, "gbphone");
            return (Criteria) this;
        }

        public Criteria andGbphoneIn(List<String> values) {
            addCriterion("gbphone in", values, "gbphone");
            return (Criteria) this;
        }

        public Criteria andGbphoneNotIn(List<String> values) {
            addCriterion("gbphone not in", values, "gbphone");
            return (Criteria) this;
        }

        public Criteria andGbphoneBetween(String value1, String value2) {
            addCriterion("gbphone between", value1, value2, "gbphone");
            return (Criteria) this;
        }

        public Criteria andGbphoneNotBetween(String value1, String value2) {
            addCriterion("gbphone not between", value1, value2, "gbphone");
            return (Criteria) this;
        }

        public Criteria andAddtimeIsNull() {
            addCriterion("addtime is null");
            return (Criteria) this;
        }

        public Criteria andAddtimeIsNotNull() {
            addCriterion("addtime is not null");
            return (Criteria) this;
        }

        public Criteria andAddtimeEqualTo(LocalDateTime value) {
            addCriterion("addtime =", value, "addtime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table njuser
         *
         * @mbg.generated
         */
        public Criteria andAddtimeEqualToColumn(Njuser.Column column) {
            addCriterion(new StringBuilder("addtime = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andAddtimeNotEqualTo(LocalDateTime value) {
            addCriterion("addtime <>", value, "addtime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table njuser
         *
         * @mbg.generated
         */
        public Criteria andAddtimeNotEqualToColumn(Njuser.Column column) {
            addCriterion(new StringBuilder("addtime <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andAddtimeGreaterThan(LocalDateTime value) {
            addCriterion("addtime >", value, "addtime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table njuser
         *
         * @mbg.generated
         */
        public Criteria andAddtimeGreaterThanColumn(Njuser.Column column) {
            addCriterion(new StringBuilder("addtime > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andAddtimeGreaterThanOrEqualTo(LocalDateTime value) {
            addCriterion("addtime >=", value, "addtime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table njuser
         *
         * @mbg.generated
         */
        public Criteria andAddtimeGreaterThanOrEqualToColumn(Njuser.Column column) {
            addCriterion(new StringBuilder("addtime >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andAddtimeLessThan(LocalDateTime value) {
            addCriterion("addtime <", value, "addtime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table njuser
         *
         * @mbg.generated
         */
        public Criteria andAddtimeLessThanColumn(Njuser.Column column) {
            addCriterion(new StringBuilder("addtime < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andAddtimeLessThanOrEqualTo(LocalDateTime value) {
            addCriterion("addtime <=", value, "addtime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table njuser
         *
         * @mbg.generated
         */
        public Criteria andAddtimeLessThanOrEqualToColumn(Njuser.Column column) {
            addCriterion(new StringBuilder("addtime <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andAddtimeIn(List<LocalDateTime> values) {
            addCriterion("addtime in", values, "addtime");
            return (Criteria) this;
        }

        public Criteria andAddtimeNotIn(List<LocalDateTime> values) {
            addCriterion("addtime not in", values, "addtime");
            return (Criteria) this;
        }

        public Criteria andAddtimeBetween(LocalDateTime value1, LocalDateTime value2) {
            addCriterion("addtime between", value1, value2, "addtime");
            return (Criteria) this;
        }

        public Criteria andAddtimeNotBetween(LocalDateTime value1, LocalDateTime value2) {
            addCriterion("addtime not between", value1, value2, "addtime");
            return (Criteria) this;
        }

        public Criteria andAddaccountIsNull() {
            addCriterion("addaccount is null");
            return (Criteria) this;
        }

        public Criteria andAddaccountIsNotNull() {
            addCriterion("addaccount is not null");
            return (Criteria) this;
        }

        public Criteria andAddaccountEqualTo(String value) {
            addCriterion("addaccount =", value, "addaccount");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table njuser
         *
         * @mbg.generated
         */
        public Criteria andAddaccountEqualToColumn(Njuser.Column column) {
            addCriterion(new StringBuilder("addaccount = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andAddaccountNotEqualTo(String value) {
            addCriterion("addaccount <>", value, "addaccount");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table njuser
         *
         * @mbg.generated
         */
        public Criteria andAddaccountNotEqualToColumn(Njuser.Column column) {
            addCriterion(new StringBuilder("addaccount <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andAddaccountGreaterThan(String value) {
            addCriterion("addaccount >", value, "addaccount");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table njuser
         *
         * @mbg.generated
         */
        public Criteria andAddaccountGreaterThanColumn(Njuser.Column column) {
            addCriterion(new StringBuilder("addaccount > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andAddaccountGreaterThanOrEqualTo(String value) {
            addCriterion("addaccount >=", value, "addaccount");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table njuser
         *
         * @mbg.generated
         */
        public Criteria andAddaccountGreaterThanOrEqualToColumn(Njuser.Column column) {
            addCriterion(new StringBuilder("addaccount >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andAddaccountLessThan(String value) {
            addCriterion("addaccount <", value, "addaccount");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table njuser
         *
         * @mbg.generated
         */
        public Criteria andAddaccountLessThanColumn(Njuser.Column column) {
            addCriterion(new StringBuilder("addaccount < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andAddaccountLessThanOrEqualTo(String value) {
            addCriterion("addaccount <=", value, "addaccount");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table njuser
         *
         * @mbg.generated
         */
        public Criteria andAddaccountLessThanOrEqualToColumn(Njuser.Column column) {
            addCriterion(new StringBuilder("addaccount <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andAddaccountLike(String value) {
            addCriterion("addaccount like", value, "addaccount");
            return (Criteria) this;
        }

        public Criteria andAddaccountNotLike(String value) {
            addCriterion("addaccount not like", value, "addaccount");
            return (Criteria) this;
        }

        public Criteria andAddaccountIn(List<String> values) {
            addCriterion("addaccount in", values, "addaccount");
            return (Criteria) this;
        }

        public Criteria andAddaccountNotIn(List<String> values) {
            addCriterion("addaccount not in", values, "addaccount");
            return (Criteria) this;
        }

        public Criteria andAddaccountBetween(String value1, String value2) {
            addCriterion("addaccount between", value1, value2, "addaccount");
            return (Criteria) this;
        }

        public Criteria andAddaccountNotBetween(String value1, String value2) {
            addCriterion("addaccount not between", value1, value2, "addaccount");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table njuser
     *
     * @mbg.generated do_not_delete_during_merge
     */
    public static class Criteria extends GeneratedCriteria {
        /**
         * This field was generated by MyBatis Generator.
         * This field corresponds to the database table njuser
         *
         * @mbg.generated
         */
        private NjuserExample example;

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table njuser
         *
         * @mbg.generated
         */
        protected Criteria(NjuserExample example) {
            super();
            this.example = example;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table njuser
         *
         * @mbg.generated
         */
        public NjuserExample example() {
            return this.example;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table njuser
         *
         * @mbg.generated
         */
        @Deprecated
        public Criteria andIf(boolean ifAdd, ICriteriaAdd add) {
            if (ifAdd) {
                add.add(this);
            }
            return this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table njuser
         *
         * @mbg.generated
         */
        public Criteria when(boolean condition, ICriteriaWhen then) {
            if (condition) {
                then.criteria(this);
            }
            return this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table njuser
         *
         * @mbg.generated
         */
        public Criteria when(boolean condition, ICriteriaWhen then, ICriteriaWhen otherwise) {
            if (condition) {
                then.criteria(this);
            } else {
                otherwise.criteria(this);
            }
            return this;
        }

        @Deprecated
        public interface ICriteriaAdd {
            /**
             * This method was generated by MyBatis Generator.
             * This method corresponds to the database table njuser
             *
             * @mbg.generated
             */
            Criteria add(Criteria add);
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table njuser
     *
     * @mbg.generated
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }

    public interface ICriteriaWhen {
        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table njuser
         *
         * @mbg.generated
         */
        void criteria(Criteria criteria);
    }

    public interface IExampleWhen {
        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table njuser
         *
         * @mbg.generated
         */
        void example(org.linlinjava.litemall.db.domain.NjuserExample example);
    }
}