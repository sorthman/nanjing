package org.linlinjava.litemall.db.domain;

import java.time.LocalDateTime;
import java.util.ArrayList;
import java.util.List;

public class WhuserExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table whuser
     *
     * @mbg.generated
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table whuser
     *
     * @mbg.generated
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table whuser
     *
     * @mbg.generated
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table whuser
     *
     * @mbg.generated
     */
    public WhuserExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table whuser
     *
     * @mbg.generated
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table whuser
     *
     * @mbg.generated
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table whuser
     *
     * @mbg.generated
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table whuser
     *
     * @mbg.generated
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table whuser
     *
     * @mbg.generated
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table whuser
     *
     * @mbg.generated
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table whuser
     *
     * @mbg.generated
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table whuser
     *
     * @mbg.generated
     */
    public WhuserExample orderBy(String orderByClause) {
        this.setOrderByClause(orderByClause);
        return this;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table whuser
     *
     * @mbg.generated
     */
    public WhuserExample orderBy(String ... orderByClauses) {
        StringBuffer sb = new StringBuffer();
        for (int i = 0; i < orderByClauses.length; i++) {
            sb.append(orderByClauses[i]);
            if (i < orderByClauses.length - 1) {
                sb.append(" , ");
            }
        }
        this.setOrderByClause(sb.toString());
        return this;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table whuser
     *
     * @mbg.generated
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table whuser
     *
     * @mbg.generated
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria(this);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table whuser
     *
     * @mbg.generated
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table whuser
     *
     * @mbg.generated
     */
    public static Criteria newAndCreateCriteria() {
        WhuserExample example = new WhuserExample();
        return example.createCriteria();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table whuser
     *
     * @mbg.generated
     */
    public WhuserExample when(boolean condition, IExampleWhen then) {
        if (condition) {
            then.example(this);
        }
        return this;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table whuser
     *
     * @mbg.generated
     */
    public WhuserExample when(boolean condition, IExampleWhen then, IExampleWhen otherwise) {
        if (condition) {
            then.example(this);
        } else {
            otherwise.example(this);
        }
        return this;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table whuser
     *
     * @mbg.generated
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andIdIsNull() {
            addCriterion("id is null");
            return (Criteria) this;
        }

        public Criteria andIdIsNotNull() {
            addCriterion("id is not null");
            return (Criteria) this;
        }

        public Criteria andIdEqualTo(Integer value) {
            addCriterion("id =", value, "id");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table whuser
         *
         * @mbg.generated
         */
        public Criteria andIdEqualToColumn(Whuser.Column column) {
            addCriterion(new StringBuilder("id = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIdNotEqualTo(Integer value) {
            addCriterion("id <>", value, "id");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table whuser
         *
         * @mbg.generated
         */
        public Criteria andIdNotEqualToColumn(Whuser.Column column) {
            addCriterion(new StringBuilder("id <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIdGreaterThan(Integer value) {
            addCriterion("id >", value, "id");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table whuser
         *
         * @mbg.generated
         */
        public Criteria andIdGreaterThanColumn(Whuser.Column column) {
            addCriterion(new StringBuilder("id > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("id >=", value, "id");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table whuser
         *
         * @mbg.generated
         */
        public Criteria andIdGreaterThanOrEqualToColumn(Whuser.Column column) {
            addCriterion(new StringBuilder("id >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIdLessThan(Integer value) {
            addCriterion("id <", value, "id");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table whuser
         *
         * @mbg.generated
         */
        public Criteria andIdLessThanColumn(Whuser.Column column) {
            addCriterion(new StringBuilder("id < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIdLessThanOrEqualTo(Integer value) {
            addCriterion("id <=", value, "id");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table whuser
         *
         * @mbg.generated
         */
        public Criteria andIdLessThanOrEqualToColumn(Whuser.Column column) {
            addCriterion(new StringBuilder("id <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIdIn(List<Integer> values) {
            addCriterion("id in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotIn(List<Integer> values) {
            addCriterion("id not in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdBetween(Integer value1, Integer value2) {
            addCriterion("id between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotBetween(Integer value1, Integer value2) {
            addCriterion("id not between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andNameIsNull() {
            addCriterion("`name` is null");
            return (Criteria) this;
        }

        public Criteria andNameIsNotNull() {
            addCriterion("`name` is not null");
            return (Criteria) this;
        }

        public Criteria andNameEqualTo(String value) {
            addCriterion("`name` =", value, "name");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table whuser
         *
         * @mbg.generated
         */
        public Criteria andNameEqualToColumn(Whuser.Column column) {
            addCriterion(new StringBuilder("`name` = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andNameNotEqualTo(String value) {
            addCriterion("`name` <>", value, "name");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table whuser
         *
         * @mbg.generated
         */
        public Criteria andNameNotEqualToColumn(Whuser.Column column) {
            addCriterion(new StringBuilder("`name` <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andNameGreaterThan(String value) {
            addCriterion("`name` >", value, "name");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table whuser
         *
         * @mbg.generated
         */
        public Criteria andNameGreaterThanColumn(Whuser.Column column) {
            addCriterion(new StringBuilder("`name` > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andNameGreaterThanOrEqualTo(String value) {
            addCriterion("`name` >=", value, "name");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table whuser
         *
         * @mbg.generated
         */
        public Criteria andNameGreaterThanOrEqualToColumn(Whuser.Column column) {
            addCriterion(new StringBuilder("`name` >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andNameLessThan(String value) {
            addCriterion("`name` <", value, "name");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table whuser
         *
         * @mbg.generated
         */
        public Criteria andNameLessThanColumn(Whuser.Column column) {
            addCriterion(new StringBuilder("`name` < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andNameLessThanOrEqualTo(String value) {
            addCriterion("`name` <=", value, "name");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table whuser
         *
         * @mbg.generated
         */
        public Criteria andNameLessThanOrEqualToColumn(Whuser.Column column) {
            addCriterion(new StringBuilder("`name` <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andNameLike(String value) {
            addCriterion("`name` like", value, "name");
            return (Criteria) this;
        }

        public Criteria andNameNotLike(String value) {
            addCriterion("`name` not like", value, "name");
            return (Criteria) this;
        }

        public Criteria andNameIn(List<String> values) {
            addCriterion("`name` in", values, "name");
            return (Criteria) this;
        }

        public Criteria andNameNotIn(List<String> values) {
            addCriterion("`name` not in", values, "name");
            return (Criteria) this;
        }

        public Criteria andNameBetween(String value1, String value2) {
            addCriterion("`name` between", value1, value2, "name");
            return (Criteria) this;
        }

        public Criteria andNameNotBetween(String value1, String value2) {
            addCriterion("`name` not between", value1, value2, "name");
            return (Criteria) this;
        }

        public Criteria andIdcardIsNull() {
            addCriterion("idcard is null");
            return (Criteria) this;
        }

        public Criteria andIdcardIsNotNull() {
            addCriterion("idcard is not null");
            return (Criteria) this;
        }

        public Criteria andIdcardEqualTo(String value) {
            addCriterion("idcard =", value, "idcard");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table whuser
         *
         * @mbg.generated
         */
        public Criteria andIdcardEqualToColumn(Whuser.Column column) {
            addCriterion(new StringBuilder("idcard = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIdcardNotEqualTo(String value) {
            addCriterion("idcard <>", value, "idcard");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table whuser
         *
         * @mbg.generated
         */
        public Criteria andIdcardNotEqualToColumn(Whuser.Column column) {
            addCriterion(new StringBuilder("idcard <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIdcardGreaterThan(String value) {
            addCriterion("idcard >", value, "idcard");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table whuser
         *
         * @mbg.generated
         */
        public Criteria andIdcardGreaterThanColumn(Whuser.Column column) {
            addCriterion(new StringBuilder("idcard > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIdcardGreaterThanOrEqualTo(String value) {
            addCriterion("idcard >=", value, "idcard");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table whuser
         *
         * @mbg.generated
         */
        public Criteria andIdcardGreaterThanOrEqualToColumn(Whuser.Column column) {
            addCriterion(new StringBuilder("idcard >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIdcardLessThan(String value) {
            addCriterion("idcard <", value, "idcard");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table whuser
         *
         * @mbg.generated
         */
        public Criteria andIdcardLessThanColumn(Whuser.Column column) {
            addCriterion(new StringBuilder("idcard < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIdcardLessThanOrEqualTo(String value) {
            addCriterion("idcard <=", value, "idcard");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table whuser
         *
         * @mbg.generated
         */
        public Criteria andIdcardLessThanOrEqualToColumn(Whuser.Column column) {
            addCriterion(new StringBuilder("idcard <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIdcardLike(String value) {
            addCriterion("idcard like", value, "idcard");
            return (Criteria) this;
        }

        public Criteria andIdcardNotLike(String value) {
            addCriterion("idcard not like", value, "idcard");
            return (Criteria) this;
        }

        public Criteria andIdcardIn(List<String> values) {
            addCriterion("idcard in", values, "idcard");
            return (Criteria) this;
        }

        public Criteria andIdcardNotIn(List<String> values) {
            addCriterion("idcard not in", values, "idcard");
            return (Criteria) this;
        }

        public Criteria andIdcardBetween(String value1, String value2) {
            addCriterion("idcard between", value1, value2, "idcard");
            return (Criteria) this;
        }

        public Criteria andIdcardNotBetween(String value1, String value2) {
            addCriterion("idcard not between", value1, value2, "idcard");
            return (Criteria) this;
        }

        public Criteria andPhoneIsNull() {
            addCriterion("phone is null");
            return (Criteria) this;
        }

        public Criteria andPhoneIsNotNull() {
            addCriterion("phone is not null");
            return (Criteria) this;
        }

        public Criteria andPhoneEqualTo(String value) {
            addCriterion("phone =", value, "phone");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table whuser
         *
         * @mbg.generated
         */
        public Criteria andPhoneEqualToColumn(Whuser.Column column) {
            addCriterion(new StringBuilder("phone = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andPhoneNotEqualTo(String value) {
            addCriterion("phone <>", value, "phone");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table whuser
         *
         * @mbg.generated
         */
        public Criteria andPhoneNotEqualToColumn(Whuser.Column column) {
            addCriterion(new StringBuilder("phone <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andPhoneGreaterThan(String value) {
            addCriterion("phone >", value, "phone");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table whuser
         *
         * @mbg.generated
         */
        public Criteria andPhoneGreaterThanColumn(Whuser.Column column) {
            addCriterion(new StringBuilder("phone > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andPhoneGreaterThanOrEqualTo(String value) {
            addCriterion("phone >=", value, "phone");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table whuser
         *
         * @mbg.generated
         */
        public Criteria andPhoneGreaterThanOrEqualToColumn(Whuser.Column column) {
            addCriterion(new StringBuilder("phone >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andPhoneLessThan(String value) {
            addCriterion("phone <", value, "phone");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table whuser
         *
         * @mbg.generated
         */
        public Criteria andPhoneLessThanColumn(Whuser.Column column) {
            addCriterion(new StringBuilder("phone < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andPhoneLessThanOrEqualTo(String value) {
            addCriterion("phone <=", value, "phone");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table whuser
         *
         * @mbg.generated
         */
        public Criteria andPhoneLessThanOrEqualToColumn(Whuser.Column column) {
            addCriterion(new StringBuilder("phone <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andPhoneLike(String value) {
            addCriterion("phone like", value, "phone");
            return (Criteria) this;
        }

        public Criteria andPhoneNotLike(String value) {
            addCriterion("phone not like", value, "phone");
            return (Criteria) this;
        }

        public Criteria andPhoneIn(List<String> values) {
            addCriterion("phone in", values, "phone");
            return (Criteria) this;
        }

        public Criteria andPhoneNotIn(List<String> values) {
            addCriterion("phone not in", values, "phone");
            return (Criteria) this;
        }

        public Criteria andPhoneBetween(String value1, String value2) {
            addCriterion("phone between", value1, value2, "phone");
            return (Criteria) this;
        }

        public Criteria andPhoneNotBetween(String value1, String value2) {
            addCriterion("phone not between", value1, value2, "phone");
            return (Criteria) this;
        }

        public Criteria andNationIsNull() {
            addCriterion("nation is null");
            return (Criteria) this;
        }

        public Criteria andNationIsNotNull() {
            addCriterion("nation is not null");
            return (Criteria) this;
        }

        public Criteria andNationEqualTo(String value) {
            addCriterion("nation =", value, "nation");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table whuser
         *
         * @mbg.generated
         */
        public Criteria andNationEqualToColumn(Whuser.Column column) {
            addCriterion(new StringBuilder("nation = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andNationNotEqualTo(String value) {
            addCriterion("nation <>", value, "nation");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table whuser
         *
         * @mbg.generated
         */
        public Criteria andNationNotEqualToColumn(Whuser.Column column) {
            addCriterion(new StringBuilder("nation <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andNationGreaterThan(String value) {
            addCriterion("nation >", value, "nation");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table whuser
         *
         * @mbg.generated
         */
        public Criteria andNationGreaterThanColumn(Whuser.Column column) {
            addCriterion(new StringBuilder("nation > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andNationGreaterThanOrEqualTo(String value) {
            addCriterion("nation >=", value, "nation");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table whuser
         *
         * @mbg.generated
         */
        public Criteria andNationGreaterThanOrEqualToColumn(Whuser.Column column) {
            addCriterion(new StringBuilder("nation >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andNationLessThan(String value) {
            addCriterion("nation <", value, "nation");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table whuser
         *
         * @mbg.generated
         */
        public Criteria andNationLessThanColumn(Whuser.Column column) {
            addCriterion(new StringBuilder("nation < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andNationLessThanOrEqualTo(String value) {
            addCriterion("nation <=", value, "nation");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table whuser
         *
         * @mbg.generated
         */
        public Criteria andNationLessThanOrEqualToColumn(Whuser.Column column) {
            addCriterion(new StringBuilder("nation <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andNationLike(String value) {
            addCriterion("nation like", value, "nation");
            return (Criteria) this;
        }

        public Criteria andNationNotLike(String value) {
            addCriterion("nation not like", value, "nation");
            return (Criteria) this;
        }

        public Criteria andNationIn(List<String> values) {
            addCriterion("nation in", values, "nation");
            return (Criteria) this;
        }

        public Criteria andNationNotIn(List<String> values) {
            addCriterion("nation not in", values, "nation");
            return (Criteria) this;
        }

        public Criteria andNationBetween(String value1, String value2) {
            addCriterion("nation between", value1, value2, "nation");
            return (Criteria) this;
        }

        public Criteria andNationNotBetween(String value1, String value2) {
            addCriterion("nation not between", value1, value2, "nation");
            return (Criteria) this;
        }

        public Criteria andSexIsNull() {
            addCriterion("sex is null");
            return (Criteria) this;
        }

        public Criteria andSexIsNotNull() {
            addCriterion("sex is not null");
            return (Criteria) this;
        }

        public Criteria andSexEqualTo(String value) {
            addCriterion("sex =", value, "sex");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table whuser
         *
         * @mbg.generated
         */
        public Criteria andSexEqualToColumn(Whuser.Column column) {
            addCriterion(new StringBuilder("sex = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andSexNotEqualTo(String value) {
            addCriterion("sex <>", value, "sex");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table whuser
         *
         * @mbg.generated
         */
        public Criteria andSexNotEqualToColumn(Whuser.Column column) {
            addCriterion(new StringBuilder("sex <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andSexGreaterThan(String value) {
            addCriterion("sex >", value, "sex");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table whuser
         *
         * @mbg.generated
         */
        public Criteria andSexGreaterThanColumn(Whuser.Column column) {
            addCriterion(new StringBuilder("sex > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andSexGreaterThanOrEqualTo(String value) {
            addCriterion("sex >=", value, "sex");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table whuser
         *
         * @mbg.generated
         */
        public Criteria andSexGreaterThanOrEqualToColumn(Whuser.Column column) {
            addCriterion(new StringBuilder("sex >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andSexLessThan(String value) {
            addCriterion("sex <", value, "sex");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table whuser
         *
         * @mbg.generated
         */
        public Criteria andSexLessThanColumn(Whuser.Column column) {
            addCriterion(new StringBuilder("sex < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andSexLessThanOrEqualTo(String value) {
            addCriterion("sex <=", value, "sex");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table whuser
         *
         * @mbg.generated
         */
        public Criteria andSexLessThanOrEqualToColumn(Whuser.Column column) {
            addCriterion(new StringBuilder("sex <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andSexLike(String value) {
            addCriterion("sex like", value, "sex");
            return (Criteria) this;
        }

        public Criteria andSexNotLike(String value) {
            addCriterion("sex not like", value, "sex");
            return (Criteria) this;
        }

        public Criteria andSexIn(List<String> values) {
            addCriterion("sex in", values, "sex");
            return (Criteria) this;
        }

        public Criteria andSexNotIn(List<String> values) {
            addCriterion("sex not in", values, "sex");
            return (Criteria) this;
        }

        public Criteria andSexBetween(String value1, String value2) {
            addCriterion("sex between", value1, value2, "sex");
            return (Criteria) this;
        }

        public Criteria andSexNotBetween(String value1, String value2) {
            addCriterion("sex not between", value1, value2, "sex");
            return (Criteria) this;
        }

        public Criteria andBirthdayIsNull() {
            addCriterion("birthday is null");
            return (Criteria) this;
        }

        public Criteria andBirthdayIsNotNull() {
            addCriterion("birthday is not null");
            return (Criteria) this;
        }

        public Criteria andBirthdayEqualTo(String value) {
            addCriterion("birthday =", value, "birthday");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table whuser
         *
         * @mbg.generated
         */
        public Criteria andBirthdayEqualToColumn(Whuser.Column column) {
            addCriterion(new StringBuilder("birthday = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andBirthdayNotEqualTo(String value) {
            addCriterion("birthday <>", value, "birthday");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table whuser
         *
         * @mbg.generated
         */
        public Criteria andBirthdayNotEqualToColumn(Whuser.Column column) {
            addCriterion(new StringBuilder("birthday <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andBirthdayGreaterThan(String value) {
            addCriterion("birthday >", value, "birthday");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table whuser
         *
         * @mbg.generated
         */
        public Criteria andBirthdayGreaterThanColumn(Whuser.Column column) {
            addCriterion(new StringBuilder("birthday > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andBirthdayGreaterThanOrEqualTo(String value) {
            addCriterion("birthday >=", value, "birthday");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table whuser
         *
         * @mbg.generated
         */
        public Criteria andBirthdayGreaterThanOrEqualToColumn(Whuser.Column column) {
            addCriterion(new StringBuilder("birthday >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andBirthdayLessThan(String value) {
            addCriterion("birthday <", value, "birthday");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table whuser
         *
         * @mbg.generated
         */
        public Criteria andBirthdayLessThanColumn(Whuser.Column column) {
            addCriterion(new StringBuilder("birthday < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andBirthdayLessThanOrEqualTo(String value) {
            addCriterion("birthday <=", value, "birthday");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table whuser
         *
         * @mbg.generated
         */
        public Criteria andBirthdayLessThanOrEqualToColumn(Whuser.Column column) {
            addCriterion(new StringBuilder("birthday <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andBirthdayLike(String value) {
            addCriterion("birthday like", value, "birthday");
            return (Criteria) this;
        }

        public Criteria andBirthdayNotLike(String value) {
            addCriterion("birthday not like", value, "birthday");
            return (Criteria) this;
        }

        public Criteria andBirthdayIn(List<String> values) {
            addCriterion("birthday in", values, "birthday");
            return (Criteria) this;
        }

        public Criteria andBirthdayNotIn(List<String> values) {
            addCriterion("birthday not in", values, "birthday");
            return (Criteria) this;
        }

        public Criteria andBirthdayBetween(String value1, String value2) {
            addCriterion("birthday between", value1, value2, "birthday");
            return (Criteria) this;
        }

        public Criteria andBirthdayNotBetween(String value1, String value2) {
            addCriterion("birthday not between", value1, value2, "birthday");
            return (Criteria) this;
        }

        public Criteria andCurrentaddressIsNull() {
            addCriterion("currentaddress is null");
            return (Criteria) this;
        }

        public Criteria andCurrentaddressIsNotNull() {
            addCriterion("currentaddress is not null");
            return (Criteria) this;
        }

        public Criteria andCurrentaddressEqualTo(String value) {
            addCriterion("currentaddress =", value, "currentaddress");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table whuser
         *
         * @mbg.generated
         */
        public Criteria andCurrentaddressEqualToColumn(Whuser.Column column) {
            addCriterion(new StringBuilder("currentaddress = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCurrentaddressNotEqualTo(String value) {
            addCriterion("currentaddress <>", value, "currentaddress");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table whuser
         *
         * @mbg.generated
         */
        public Criteria andCurrentaddressNotEqualToColumn(Whuser.Column column) {
            addCriterion(new StringBuilder("currentaddress <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCurrentaddressGreaterThan(String value) {
            addCriterion("currentaddress >", value, "currentaddress");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table whuser
         *
         * @mbg.generated
         */
        public Criteria andCurrentaddressGreaterThanColumn(Whuser.Column column) {
            addCriterion(new StringBuilder("currentaddress > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCurrentaddressGreaterThanOrEqualTo(String value) {
            addCriterion("currentaddress >=", value, "currentaddress");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table whuser
         *
         * @mbg.generated
         */
        public Criteria andCurrentaddressGreaterThanOrEqualToColumn(Whuser.Column column) {
            addCriterion(new StringBuilder("currentaddress >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCurrentaddressLessThan(String value) {
            addCriterion("currentaddress <", value, "currentaddress");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table whuser
         *
         * @mbg.generated
         */
        public Criteria andCurrentaddressLessThanColumn(Whuser.Column column) {
            addCriterion(new StringBuilder("currentaddress < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCurrentaddressLessThanOrEqualTo(String value) {
            addCriterion("currentaddress <=", value, "currentaddress");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table whuser
         *
         * @mbg.generated
         */
        public Criteria andCurrentaddressLessThanOrEqualToColumn(Whuser.Column column) {
            addCriterion(new StringBuilder("currentaddress <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCurrentaddressLike(String value) {
            addCriterion("currentaddress like", value, "currentaddress");
            return (Criteria) this;
        }

        public Criteria andCurrentaddressNotLike(String value) {
            addCriterion("currentaddress not like", value, "currentaddress");
            return (Criteria) this;
        }

        public Criteria andCurrentaddressIn(List<String> values) {
            addCriterion("currentaddress in", values, "currentaddress");
            return (Criteria) this;
        }

        public Criteria andCurrentaddressNotIn(List<String> values) {
            addCriterion("currentaddress not in", values, "currentaddress");
            return (Criteria) this;
        }

        public Criteria andCurrentaddressBetween(String value1, String value2) {
            addCriterion("currentaddress between", value1, value2, "currentaddress");
            return (Criteria) this;
        }

        public Criteria andCurrentaddressNotBetween(String value1, String value2) {
            addCriterion("currentaddress not between", value1, value2, "currentaddress");
            return (Criteria) this;
        }

        public Criteria andIfwhIsNull() {
            addCriterion("ifwh is null");
            return (Criteria) this;
        }

        public Criteria andIfwhIsNotNull() {
            addCriterion("ifwh is not null");
            return (Criteria) this;
        }

        public Criteria andIfwhEqualTo(String value) {
            addCriterion("ifwh =", value, "ifwh");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table whuser
         *
         * @mbg.generated
         */
        public Criteria andIfwhEqualToColumn(Whuser.Column column) {
            addCriterion(new StringBuilder("ifwh = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIfwhNotEqualTo(String value) {
            addCriterion("ifwh <>", value, "ifwh");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table whuser
         *
         * @mbg.generated
         */
        public Criteria andIfwhNotEqualToColumn(Whuser.Column column) {
            addCriterion(new StringBuilder("ifwh <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIfwhGreaterThan(String value) {
            addCriterion("ifwh >", value, "ifwh");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table whuser
         *
         * @mbg.generated
         */
        public Criteria andIfwhGreaterThanColumn(Whuser.Column column) {
            addCriterion(new StringBuilder("ifwh > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIfwhGreaterThanOrEqualTo(String value) {
            addCriterion("ifwh >=", value, "ifwh");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table whuser
         *
         * @mbg.generated
         */
        public Criteria andIfwhGreaterThanOrEqualToColumn(Whuser.Column column) {
            addCriterion(new StringBuilder("ifwh >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIfwhLessThan(String value) {
            addCriterion("ifwh <", value, "ifwh");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table whuser
         *
         * @mbg.generated
         */
        public Criteria andIfwhLessThanColumn(Whuser.Column column) {
            addCriterion(new StringBuilder("ifwh < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIfwhLessThanOrEqualTo(String value) {
            addCriterion("ifwh <=", value, "ifwh");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table whuser
         *
         * @mbg.generated
         */
        public Criteria andIfwhLessThanOrEqualToColumn(Whuser.Column column) {
            addCriterion(new StringBuilder("ifwh <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIfwhLike(String value) {
            addCriterion("ifwh like", value, "ifwh");
            return (Criteria) this;
        }

        public Criteria andIfwhNotLike(String value) {
            addCriterion("ifwh not like", value, "ifwh");
            return (Criteria) this;
        }

        public Criteria andIfwhIn(List<String> values) {
            addCriterion("ifwh in", values, "ifwh");
            return (Criteria) this;
        }

        public Criteria andIfwhNotIn(List<String> values) {
            addCriterion("ifwh not in", values, "ifwh");
            return (Criteria) this;
        }

        public Criteria andIfwhBetween(String value1, String value2) {
            addCriterion("ifwh between", value1, value2, "ifwh");
            return (Criteria) this;
        }

        public Criteria andIfwhNotBetween(String value1, String value2) {
            addCriterion("ifwh not between", value1, value2, "ifwh");
            return (Criteria) this;
        }

        public Criteria andTraffictypeIsNull() {
            addCriterion("traffictype is null");
            return (Criteria) this;
        }

        public Criteria andTraffictypeIsNotNull() {
            addCriterion("traffictype is not null");
            return (Criteria) this;
        }

        public Criteria andTraffictypeEqualTo(String value) {
            addCriterion("traffictype =", value, "traffictype");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table whuser
         *
         * @mbg.generated
         */
        public Criteria andTraffictypeEqualToColumn(Whuser.Column column) {
            addCriterion(new StringBuilder("traffictype = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andTraffictypeNotEqualTo(String value) {
            addCriterion("traffictype <>", value, "traffictype");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table whuser
         *
         * @mbg.generated
         */
        public Criteria andTraffictypeNotEqualToColumn(Whuser.Column column) {
            addCriterion(new StringBuilder("traffictype <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andTraffictypeGreaterThan(String value) {
            addCriterion("traffictype >", value, "traffictype");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table whuser
         *
         * @mbg.generated
         */
        public Criteria andTraffictypeGreaterThanColumn(Whuser.Column column) {
            addCriterion(new StringBuilder("traffictype > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andTraffictypeGreaterThanOrEqualTo(String value) {
            addCriterion("traffictype >=", value, "traffictype");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table whuser
         *
         * @mbg.generated
         */
        public Criteria andTraffictypeGreaterThanOrEqualToColumn(Whuser.Column column) {
            addCriterion(new StringBuilder("traffictype >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andTraffictypeLessThan(String value) {
            addCriterion("traffictype <", value, "traffictype");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table whuser
         *
         * @mbg.generated
         */
        public Criteria andTraffictypeLessThanColumn(Whuser.Column column) {
            addCriterion(new StringBuilder("traffictype < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andTraffictypeLessThanOrEqualTo(String value) {
            addCriterion("traffictype <=", value, "traffictype");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table whuser
         *
         * @mbg.generated
         */
        public Criteria andTraffictypeLessThanOrEqualToColumn(Whuser.Column column) {
            addCriterion(new StringBuilder("traffictype <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andTraffictypeLike(String value) {
            addCriterion("traffictype like", value, "traffictype");
            return (Criteria) this;
        }

        public Criteria andTraffictypeNotLike(String value) {
            addCriterion("traffictype not like", value, "traffictype");
            return (Criteria) this;
        }

        public Criteria andTraffictypeIn(List<String> values) {
            addCriterion("traffictype in", values, "traffictype");
            return (Criteria) this;
        }

        public Criteria andTraffictypeNotIn(List<String> values) {
            addCriterion("traffictype not in", values, "traffictype");
            return (Criteria) this;
        }

        public Criteria andTraffictypeBetween(String value1, String value2) {
            addCriterion("traffictype between", value1, value2, "traffictype");
            return (Criteria) this;
        }

        public Criteria andTraffictypeNotBetween(String value1, String value2) {
            addCriterion("traffictype not between", value1, value2, "traffictype");
            return (Criteria) this;
        }

        public Criteria andTrafficinfoIsNull() {
            addCriterion("trafficinfo is null");
            return (Criteria) this;
        }

        public Criteria andTrafficinfoIsNotNull() {
            addCriterion("trafficinfo is not null");
            return (Criteria) this;
        }

        public Criteria andTrafficinfoEqualTo(String value) {
            addCriterion("trafficinfo =", value, "trafficinfo");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table whuser
         *
         * @mbg.generated
         */
        public Criteria andTrafficinfoEqualToColumn(Whuser.Column column) {
            addCriterion(new StringBuilder("trafficinfo = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andTrafficinfoNotEqualTo(String value) {
            addCriterion("trafficinfo <>", value, "trafficinfo");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table whuser
         *
         * @mbg.generated
         */
        public Criteria andTrafficinfoNotEqualToColumn(Whuser.Column column) {
            addCriterion(new StringBuilder("trafficinfo <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andTrafficinfoGreaterThan(String value) {
            addCriterion("trafficinfo >", value, "trafficinfo");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table whuser
         *
         * @mbg.generated
         */
        public Criteria andTrafficinfoGreaterThanColumn(Whuser.Column column) {
            addCriterion(new StringBuilder("trafficinfo > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andTrafficinfoGreaterThanOrEqualTo(String value) {
            addCriterion("trafficinfo >=", value, "trafficinfo");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table whuser
         *
         * @mbg.generated
         */
        public Criteria andTrafficinfoGreaterThanOrEqualToColumn(Whuser.Column column) {
            addCriterion(new StringBuilder("trafficinfo >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andTrafficinfoLessThan(String value) {
            addCriterion("trafficinfo <", value, "trafficinfo");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table whuser
         *
         * @mbg.generated
         */
        public Criteria andTrafficinfoLessThanColumn(Whuser.Column column) {
            addCriterion(new StringBuilder("trafficinfo < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andTrafficinfoLessThanOrEqualTo(String value) {
            addCriterion("trafficinfo <=", value, "trafficinfo");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table whuser
         *
         * @mbg.generated
         */
        public Criteria andTrafficinfoLessThanOrEqualToColumn(Whuser.Column column) {
            addCriterion(new StringBuilder("trafficinfo <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andTrafficinfoLike(String value) {
            addCriterion("trafficinfo like", value, "trafficinfo");
            return (Criteria) this;
        }

        public Criteria andTrafficinfoNotLike(String value) {
            addCriterion("trafficinfo not like", value, "trafficinfo");
            return (Criteria) this;
        }

        public Criteria andTrafficinfoIn(List<String> values) {
            addCriterion("trafficinfo in", values, "trafficinfo");
            return (Criteria) this;
        }

        public Criteria andTrafficinfoNotIn(List<String> values) {
            addCriterion("trafficinfo not in", values, "trafficinfo");
            return (Criteria) this;
        }

        public Criteria andTrafficinfoBetween(String value1, String value2) {
            addCriterion("trafficinfo between", value1, value2, "trafficinfo");
            return (Criteria) this;
        }

        public Criteria andTrafficinfoNotBetween(String value1, String value2) {
            addCriterion("trafficinfo not between", value1, value2, "trafficinfo");
            return (Criteria) this;
        }

        public Criteria andStartaddressIsNull() {
            addCriterion("startaddress is null");
            return (Criteria) this;
        }

        public Criteria andStartaddressIsNotNull() {
            addCriterion("startaddress is not null");
            return (Criteria) this;
        }

        public Criteria andStartaddressEqualTo(String value) {
            addCriterion("startaddress =", value, "startaddress");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table whuser
         *
         * @mbg.generated
         */
        public Criteria andStartaddressEqualToColumn(Whuser.Column column) {
            addCriterion(new StringBuilder("startaddress = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andStartaddressNotEqualTo(String value) {
            addCriterion("startaddress <>", value, "startaddress");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table whuser
         *
         * @mbg.generated
         */
        public Criteria andStartaddressNotEqualToColumn(Whuser.Column column) {
            addCriterion(new StringBuilder("startaddress <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andStartaddressGreaterThan(String value) {
            addCriterion("startaddress >", value, "startaddress");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table whuser
         *
         * @mbg.generated
         */
        public Criteria andStartaddressGreaterThanColumn(Whuser.Column column) {
            addCriterion(new StringBuilder("startaddress > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andStartaddressGreaterThanOrEqualTo(String value) {
            addCriterion("startaddress >=", value, "startaddress");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table whuser
         *
         * @mbg.generated
         */
        public Criteria andStartaddressGreaterThanOrEqualToColumn(Whuser.Column column) {
            addCriterion(new StringBuilder("startaddress >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andStartaddressLessThan(String value) {
            addCriterion("startaddress <", value, "startaddress");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table whuser
         *
         * @mbg.generated
         */
        public Criteria andStartaddressLessThanColumn(Whuser.Column column) {
            addCriterion(new StringBuilder("startaddress < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andStartaddressLessThanOrEqualTo(String value) {
            addCriterion("startaddress <=", value, "startaddress");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table whuser
         *
         * @mbg.generated
         */
        public Criteria andStartaddressLessThanOrEqualToColumn(Whuser.Column column) {
            addCriterion(new StringBuilder("startaddress <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andStartaddressLike(String value) {
            addCriterion("startaddress like", value, "startaddress");
            return (Criteria) this;
        }

        public Criteria andStartaddressNotLike(String value) {
            addCriterion("startaddress not like", value, "startaddress");
            return (Criteria) this;
        }

        public Criteria andStartaddressIn(List<String> values) {
            addCriterion("startaddress in", values, "startaddress");
            return (Criteria) this;
        }

        public Criteria andStartaddressNotIn(List<String> values) {
            addCriterion("startaddress not in", values, "startaddress");
            return (Criteria) this;
        }

        public Criteria andStartaddressBetween(String value1, String value2) {
            addCriterion("startaddress between", value1, value2, "startaddress");
            return (Criteria) this;
        }

        public Criteria andStartaddressNotBetween(String value1, String value2) {
            addCriterion("startaddress not between", value1, value2, "startaddress");
            return (Criteria) this;
        }

        public Criteria andEndaddressIsNull() {
            addCriterion("endaddress is null");
            return (Criteria) this;
        }

        public Criteria andEndaddressIsNotNull() {
            addCriterion("endaddress is not null");
            return (Criteria) this;
        }

        public Criteria andEndaddressEqualTo(String value) {
            addCriterion("endaddress =", value, "endaddress");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table whuser
         *
         * @mbg.generated
         */
        public Criteria andEndaddressEqualToColumn(Whuser.Column column) {
            addCriterion(new StringBuilder("endaddress = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andEndaddressNotEqualTo(String value) {
            addCriterion("endaddress <>", value, "endaddress");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table whuser
         *
         * @mbg.generated
         */
        public Criteria andEndaddressNotEqualToColumn(Whuser.Column column) {
            addCriterion(new StringBuilder("endaddress <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andEndaddressGreaterThan(String value) {
            addCriterion("endaddress >", value, "endaddress");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table whuser
         *
         * @mbg.generated
         */
        public Criteria andEndaddressGreaterThanColumn(Whuser.Column column) {
            addCriterion(new StringBuilder("endaddress > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andEndaddressGreaterThanOrEqualTo(String value) {
            addCriterion("endaddress >=", value, "endaddress");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table whuser
         *
         * @mbg.generated
         */
        public Criteria andEndaddressGreaterThanOrEqualToColumn(Whuser.Column column) {
            addCriterion(new StringBuilder("endaddress >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andEndaddressLessThan(String value) {
            addCriterion("endaddress <", value, "endaddress");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table whuser
         *
         * @mbg.generated
         */
        public Criteria andEndaddressLessThanColumn(Whuser.Column column) {
            addCriterion(new StringBuilder("endaddress < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andEndaddressLessThanOrEqualTo(String value) {
            addCriterion("endaddress <=", value, "endaddress");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table whuser
         *
         * @mbg.generated
         */
        public Criteria andEndaddressLessThanOrEqualToColumn(Whuser.Column column) {
            addCriterion(new StringBuilder("endaddress <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andEndaddressLike(String value) {
            addCriterion("endaddress like", value, "endaddress");
            return (Criteria) this;
        }

        public Criteria andEndaddressNotLike(String value) {
            addCriterion("endaddress not like", value, "endaddress");
            return (Criteria) this;
        }

        public Criteria andEndaddressIn(List<String> values) {
            addCriterion("endaddress in", values, "endaddress");
            return (Criteria) this;
        }

        public Criteria andEndaddressNotIn(List<String> values) {
            addCriterion("endaddress not in", values, "endaddress");
            return (Criteria) this;
        }

        public Criteria andEndaddressBetween(String value1, String value2) {
            addCriterion("endaddress between", value1, value2, "endaddress");
            return (Criteria) this;
        }

        public Criteria andEndaddressNotBetween(String value1, String value2) {
            addCriterion("endaddress not between", value1, value2, "endaddress");
            return (Criteria) this;
        }

        public Criteria andLeavedateIsNull() {
            addCriterion("leavedate is null");
            return (Criteria) this;
        }

        public Criteria andLeavedateIsNotNull() {
            addCriterion("leavedate is not null");
            return (Criteria) this;
        }

        public Criteria andLeavedateEqualTo(LocalDateTime value) {
            addCriterion("leavedate =", value, "leavedate");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table whuser
         *
         * @mbg.generated
         */
        public Criteria andLeavedateEqualToColumn(Whuser.Column column) {
            addCriterion(new StringBuilder("leavedate = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andLeavedateNotEqualTo(LocalDateTime value) {
            addCriterion("leavedate <>", value, "leavedate");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table whuser
         *
         * @mbg.generated
         */
        public Criteria andLeavedateNotEqualToColumn(Whuser.Column column) {
            addCriterion(new StringBuilder("leavedate <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andLeavedateGreaterThan(LocalDateTime value) {
            addCriterion("leavedate >", value, "leavedate");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table whuser
         *
         * @mbg.generated
         */
        public Criteria andLeavedateGreaterThanColumn(Whuser.Column column) {
            addCriterion(new StringBuilder("leavedate > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andLeavedateGreaterThanOrEqualTo(LocalDateTime value) {
            addCriterion("leavedate >=", value, "leavedate");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table whuser
         *
         * @mbg.generated
         */
        public Criteria andLeavedateGreaterThanOrEqualToColumn(Whuser.Column column) {
            addCriterion(new StringBuilder("leavedate >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andLeavedateLessThan(LocalDateTime value) {
            addCriterion("leavedate <", value, "leavedate");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table whuser
         *
         * @mbg.generated
         */
        public Criteria andLeavedateLessThanColumn(Whuser.Column column) {
            addCriterion(new StringBuilder("leavedate < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andLeavedateLessThanOrEqualTo(LocalDateTime value) {
            addCriterion("leavedate <=", value, "leavedate");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table whuser
         *
         * @mbg.generated
         */
        public Criteria andLeavedateLessThanOrEqualToColumn(Whuser.Column column) {
            addCriterion(new StringBuilder("leavedate <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andLeavedateIn(List<LocalDateTime> values) {
            addCriterion("leavedate in", values, "leavedate");
            return (Criteria) this;
        }

        public Criteria andLeavedateNotIn(List<LocalDateTime> values) {
            addCriterion("leavedate not in", values, "leavedate");
            return (Criteria) this;
        }

        public Criteria andLeavedateBetween(LocalDateTime value1, LocalDateTime value2) {
            addCriterion("leavedate between", value1, value2, "leavedate");
            return (Criteria) this;
        }

        public Criteria andLeavedateNotBetween(LocalDateTime value1, LocalDateTime value2) {
            addCriterion("leavedate not between", value1, value2, "leavedate");
            return (Criteria) this;
        }

        public Criteria andWhaddressIsNull() {
            addCriterion("whaddress is null");
            return (Criteria) this;
        }

        public Criteria andWhaddressIsNotNull() {
            addCriterion("whaddress is not null");
            return (Criteria) this;
        }

        public Criteria andWhaddressEqualTo(String value) {
            addCriterion("whaddress =", value, "whaddress");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table whuser
         *
         * @mbg.generated
         */
        public Criteria andWhaddressEqualToColumn(Whuser.Column column) {
            addCriterion(new StringBuilder("whaddress = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andWhaddressNotEqualTo(String value) {
            addCriterion("whaddress <>", value, "whaddress");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table whuser
         *
         * @mbg.generated
         */
        public Criteria andWhaddressNotEqualToColumn(Whuser.Column column) {
            addCriterion(new StringBuilder("whaddress <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andWhaddressGreaterThan(String value) {
            addCriterion("whaddress >", value, "whaddress");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table whuser
         *
         * @mbg.generated
         */
        public Criteria andWhaddressGreaterThanColumn(Whuser.Column column) {
            addCriterion(new StringBuilder("whaddress > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andWhaddressGreaterThanOrEqualTo(String value) {
            addCriterion("whaddress >=", value, "whaddress");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table whuser
         *
         * @mbg.generated
         */
        public Criteria andWhaddressGreaterThanOrEqualToColumn(Whuser.Column column) {
            addCriterion(new StringBuilder("whaddress >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andWhaddressLessThan(String value) {
            addCriterion("whaddress <", value, "whaddress");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table whuser
         *
         * @mbg.generated
         */
        public Criteria andWhaddressLessThanColumn(Whuser.Column column) {
            addCriterion(new StringBuilder("whaddress < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andWhaddressLessThanOrEqualTo(String value) {
            addCriterion("whaddress <=", value, "whaddress");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table whuser
         *
         * @mbg.generated
         */
        public Criteria andWhaddressLessThanOrEqualToColumn(Whuser.Column column) {
            addCriterion(new StringBuilder("whaddress <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andWhaddressLike(String value) {
            addCriterion("whaddress like", value, "whaddress");
            return (Criteria) this;
        }

        public Criteria andWhaddressNotLike(String value) {
            addCriterion("whaddress not like", value, "whaddress");
            return (Criteria) this;
        }

        public Criteria andWhaddressIn(List<String> values) {
            addCriterion("whaddress in", values, "whaddress");
            return (Criteria) this;
        }

        public Criteria andWhaddressNotIn(List<String> values) {
            addCriterion("whaddress not in", values, "whaddress");
            return (Criteria) this;
        }

        public Criteria andWhaddressBetween(String value1, String value2) {
            addCriterion("whaddress between", value1, value2, "whaddress");
            return (Criteria) this;
        }

        public Criteria andWhaddressNotBetween(String value1, String value2) {
            addCriterion("whaddress not between", value1, value2, "whaddress");
            return (Criteria) this;
        }

        public Criteria andStopaddressIsNull() {
            addCriterion("stopaddress is null");
            return (Criteria) this;
        }

        public Criteria andStopaddressIsNotNull() {
            addCriterion("stopaddress is not null");
            return (Criteria) this;
        }

        public Criteria andStopaddressEqualTo(String value) {
            addCriterion("stopaddress =", value, "stopaddress");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table whuser
         *
         * @mbg.generated
         */
        public Criteria andStopaddressEqualToColumn(Whuser.Column column) {
            addCriterion(new StringBuilder("stopaddress = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andStopaddressNotEqualTo(String value) {
            addCriterion("stopaddress <>", value, "stopaddress");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table whuser
         *
         * @mbg.generated
         */
        public Criteria andStopaddressNotEqualToColumn(Whuser.Column column) {
            addCriterion(new StringBuilder("stopaddress <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andStopaddressGreaterThan(String value) {
            addCriterion("stopaddress >", value, "stopaddress");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table whuser
         *
         * @mbg.generated
         */
        public Criteria andStopaddressGreaterThanColumn(Whuser.Column column) {
            addCriterion(new StringBuilder("stopaddress > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andStopaddressGreaterThanOrEqualTo(String value) {
            addCriterion("stopaddress >=", value, "stopaddress");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table whuser
         *
         * @mbg.generated
         */
        public Criteria andStopaddressGreaterThanOrEqualToColumn(Whuser.Column column) {
            addCriterion(new StringBuilder("stopaddress >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andStopaddressLessThan(String value) {
            addCriterion("stopaddress <", value, "stopaddress");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table whuser
         *
         * @mbg.generated
         */
        public Criteria andStopaddressLessThanColumn(Whuser.Column column) {
            addCriterion(new StringBuilder("stopaddress < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andStopaddressLessThanOrEqualTo(String value) {
            addCriterion("stopaddress <=", value, "stopaddress");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table whuser
         *
         * @mbg.generated
         */
        public Criteria andStopaddressLessThanOrEqualToColumn(Whuser.Column column) {
            addCriterion(new StringBuilder("stopaddress <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andStopaddressLike(String value) {
            addCriterion("stopaddress like", value, "stopaddress");
            return (Criteria) this;
        }

        public Criteria andStopaddressNotLike(String value) {
            addCriterion("stopaddress not like", value, "stopaddress");
            return (Criteria) this;
        }

        public Criteria andStopaddressIn(List<String> values) {
            addCriterion("stopaddress in", values, "stopaddress");
            return (Criteria) this;
        }

        public Criteria andStopaddressNotIn(List<String> values) {
            addCriterion("stopaddress not in", values, "stopaddress");
            return (Criteria) this;
        }

        public Criteria andStopaddressBetween(String value1, String value2) {
            addCriterion("stopaddress between", value1, value2, "stopaddress");
            return (Criteria) this;
        }

        public Criteria andStopaddressNotBetween(String value1, String value2) {
            addCriterion("stopaddress not between", value1, value2, "stopaddress");
            return (Criteria) this;
        }

        public Criteria andTemperatureIsNull() {
            addCriterion("temperature is null");
            return (Criteria) this;
        }

        public Criteria andTemperatureIsNotNull() {
            addCriterion("temperature is not null");
            return (Criteria) this;
        }

        public Criteria andTemperatureEqualTo(String value) {
            addCriterion("temperature =", value, "temperature");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table whuser
         *
         * @mbg.generated
         */
        public Criteria andTemperatureEqualToColumn(Whuser.Column column) {
            addCriterion(new StringBuilder("temperature = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andTemperatureNotEqualTo(String value) {
            addCriterion("temperature <>", value, "temperature");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table whuser
         *
         * @mbg.generated
         */
        public Criteria andTemperatureNotEqualToColumn(Whuser.Column column) {
            addCriterion(new StringBuilder("temperature <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andTemperatureGreaterThan(String value) {
            addCriterion("temperature >", value, "temperature");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table whuser
         *
         * @mbg.generated
         */
        public Criteria andTemperatureGreaterThanColumn(Whuser.Column column) {
            addCriterion(new StringBuilder("temperature > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andTemperatureGreaterThanOrEqualTo(String value) {
            addCriterion("temperature >=", value, "temperature");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table whuser
         *
         * @mbg.generated
         */
        public Criteria andTemperatureGreaterThanOrEqualToColumn(Whuser.Column column) {
            addCriterion(new StringBuilder("temperature >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andTemperatureLessThan(String value) {
            addCriterion("temperature <", value, "temperature");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table whuser
         *
         * @mbg.generated
         */
        public Criteria andTemperatureLessThanColumn(Whuser.Column column) {
            addCriterion(new StringBuilder("temperature < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andTemperatureLessThanOrEqualTo(String value) {
            addCriterion("temperature <=", value, "temperature");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table whuser
         *
         * @mbg.generated
         */
        public Criteria andTemperatureLessThanOrEqualToColumn(Whuser.Column column) {
            addCriterion(new StringBuilder("temperature <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andTemperatureLike(String value) {
            addCriterion("temperature like", value, "temperature");
            return (Criteria) this;
        }

        public Criteria andTemperatureNotLike(String value) {
            addCriterion("temperature not like", value, "temperature");
            return (Criteria) this;
        }

        public Criteria andTemperatureIn(List<String> values) {
            addCriterion("temperature in", values, "temperature");
            return (Criteria) this;
        }

        public Criteria andTemperatureNotIn(List<String> values) {
            addCriterion("temperature not in", values, "temperature");
            return (Criteria) this;
        }

        public Criteria andTemperatureBetween(String value1, String value2) {
            addCriterion("temperature between", value1, value2, "temperature");
            return (Criteria) this;
        }

        public Criteria andTemperatureNotBetween(String value1, String value2) {
            addCriterion("temperature not between", value1, value2, "temperature");
            return (Criteria) this;
        }

        public Criteria andHealthinfoIsNull() {
            addCriterion("healthinfo is null");
            return (Criteria) this;
        }

        public Criteria andHealthinfoIsNotNull() {
            addCriterion("healthinfo is not null");
            return (Criteria) this;
        }

        public Criteria andHealthinfoEqualTo(String value) {
            addCriterion("healthinfo =", value, "healthinfo");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table whuser
         *
         * @mbg.generated
         */
        public Criteria andHealthinfoEqualToColumn(Whuser.Column column) {
            addCriterion(new StringBuilder("healthinfo = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andHealthinfoNotEqualTo(String value) {
            addCriterion("healthinfo <>", value, "healthinfo");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table whuser
         *
         * @mbg.generated
         */
        public Criteria andHealthinfoNotEqualToColumn(Whuser.Column column) {
            addCriterion(new StringBuilder("healthinfo <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andHealthinfoGreaterThan(String value) {
            addCriterion("healthinfo >", value, "healthinfo");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table whuser
         *
         * @mbg.generated
         */
        public Criteria andHealthinfoGreaterThanColumn(Whuser.Column column) {
            addCriterion(new StringBuilder("healthinfo > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andHealthinfoGreaterThanOrEqualTo(String value) {
            addCriterion("healthinfo >=", value, "healthinfo");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table whuser
         *
         * @mbg.generated
         */
        public Criteria andHealthinfoGreaterThanOrEqualToColumn(Whuser.Column column) {
            addCriterion(new StringBuilder("healthinfo >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andHealthinfoLessThan(String value) {
            addCriterion("healthinfo <", value, "healthinfo");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table whuser
         *
         * @mbg.generated
         */
        public Criteria andHealthinfoLessThanColumn(Whuser.Column column) {
            addCriterion(new StringBuilder("healthinfo < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andHealthinfoLessThanOrEqualTo(String value) {
            addCriterion("healthinfo <=", value, "healthinfo");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table whuser
         *
         * @mbg.generated
         */
        public Criteria andHealthinfoLessThanOrEqualToColumn(Whuser.Column column) {
            addCriterion(new StringBuilder("healthinfo <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andHealthinfoLike(String value) {
            addCriterion("healthinfo like", value, "healthinfo");
            return (Criteria) this;
        }

        public Criteria andHealthinfoNotLike(String value) {
            addCriterion("healthinfo not like", value, "healthinfo");
            return (Criteria) this;
        }

        public Criteria andHealthinfoIn(List<String> values) {
            addCriterion("healthinfo in", values, "healthinfo");
            return (Criteria) this;
        }

        public Criteria andHealthinfoNotIn(List<String> values) {
            addCriterion("healthinfo not in", values, "healthinfo");
            return (Criteria) this;
        }

        public Criteria andHealthinfoBetween(String value1, String value2) {
            addCriterion("healthinfo between", value1, value2, "healthinfo");
            return (Criteria) this;
        }

        public Criteria andHealthinfoNotBetween(String value1, String value2) {
            addCriterion("healthinfo not between", value1, value2, "healthinfo");
            return (Criteria) this;
        }

        public Criteria andIfhotIsNull() {
            addCriterion("ifhot is null");
            return (Criteria) this;
        }

        public Criteria andIfhotIsNotNull() {
            addCriterion("ifhot is not null");
            return (Criteria) this;
        }

        public Criteria andIfhotEqualTo(String value) {
            addCriterion("ifhot =", value, "ifhot");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table whuser
         *
         * @mbg.generated
         */
        public Criteria andIfhotEqualToColumn(Whuser.Column column) {
            addCriterion(new StringBuilder("ifhot = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIfhotNotEqualTo(String value) {
            addCriterion("ifhot <>", value, "ifhot");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table whuser
         *
         * @mbg.generated
         */
        public Criteria andIfhotNotEqualToColumn(Whuser.Column column) {
            addCriterion(new StringBuilder("ifhot <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIfhotGreaterThan(String value) {
            addCriterion("ifhot >", value, "ifhot");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table whuser
         *
         * @mbg.generated
         */
        public Criteria andIfhotGreaterThanColumn(Whuser.Column column) {
            addCriterion(new StringBuilder("ifhot > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIfhotGreaterThanOrEqualTo(String value) {
            addCriterion("ifhot >=", value, "ifhot");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table whuser
         *
         * @mbg.generated
         */
        public Criteria andIfhotGreaterThanOrEqualToColumn(Whuser.Column column) {
            addCriterion(new StringBuilder("ifhot >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIfhotLessThan(String value) {
            addCriterion("ifhot <", value, "ifhot");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table whuser
         *
         * @mbg.generated
         */
        public Criteria andIfhotLessThanColumn(Whuser.Column column) {
            addCriterion(new StringBuilder("ifhot < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIfhotLessThanOrEqualTo(String value) {
            addCriterion("ifhot <=", value, "ifhot");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table whuser
         *
         * @mbg.generated
         */
        public Criteria andIfhotLessThanOrEqualToColumn(Whuser.Column column) {
            addCriterion(new StringBuilder("ifhot <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIfhotLike(String value) {
            addCriterion("ifhot like", value, "ifhot");
            return (Criteria) this;
        }

        public Criteria andIfhotNotLike(String value) {
            addCriterion("ifhot not like", value, "ifhot");
            return (Criteria) this;
        }

        public Criteria andIfhotIn(List<String> values) {
            addCriterion("ifhot in", values, "ifhot");
            return (Criteria) this;
        }

        public Criteria andIfhotNotIn(List<String> values) {
            addCriterion("ifhot not in", values, "ifhot");
            return (Criteria) this;
        }

        public Criteria andIfhotBetween(String value1, String value2) {
            addCriterion("ifhot between", value1, value2, "ifhot");
            return (Criteria) this;
        }

        public Criteria andIfhotNotBetween(String value1, String value2) {
            addCriterion("ifhot not between", value1, value2, "ifhot");
            return (Criteria) this;
        }

        public Criteria andIfkesouIsNull() {
            addCriterion("ifkesou is null");
            return (Criteria) this;
        }

        public Criteria andIfkesouIsNotNull() {
            addCriterion("ifkesou is not null");
            return (Criteria) this;
        }

        public Criteria andIfkesouEqualTo(String value) {
            addCriterion("ifkesou =", value, "ifkesou");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table whuser
         *
         * @mbg.generated
         */
        public Criteria andIfkesouEqualToColumn(Whuser.Column column) {
            addCriterion(new StringBuilder("ifkesou = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIfkesouNotEqualTo(String value) {
            addCriterion("ifkesou <>", value, "ifkesou");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table whuser
         *
         * @mbg.generated
         */
        public Criteria andIfkesouNotEqualToColumn(Whuser.Column column) {
            addCriterion(new StringBuilder("ifkesou <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIfkesouGreaterThan(String value) {
            addCriterion("ifkesou >", value, "ifkesou");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table whuser
         *
         * @mbg.generated
         */
        public Criteria andIfkesouGreaterThanColumn(Whuser.Column column) {
            addCriterion(new StringBuilder("ifkesou > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIfkesouGreaterThanOrEqualTo(String value) {
            addCriterion("ifkesou >=", value, "ifkesou");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table whuser
         *
         * @mbg.generated
         */
        public Criteria andIfkesouGreaterThanOrEqualToColumn(Whuser.Column column) {
            addCriterion(new StringBuilder("ifkesou >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIfkesouLessThan(String value) {
            addCriterion("ifkesou <", value, "ifkesou");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table whuser
         *
         * @mbg.generated
         */
        public Criteria andIfkesouLessThanColumn(Whuser.Column column) {
            addCriterion(new StringBuilder("ifkesou < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIfkesouLessThanOrEqualTo(String value) {
            addCriterion("ifkesou <=", value, "ifkesou");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table whuser
         *
         * @mbg.generated
         */
        public Criteria andIfkesouLessThanOrEqualToColumn(Whuser.Column column) {
            addCriterion(new StringBuilder("ifkesou <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIfkesouLike(String value) {
            addCriterion("ifkesou like", value, "ifkesou");
            return (Criteria) this;
        }

        public Criteria andIfkesouNotLike(String value) {
            addCriterion("ifkesou not like", value, "ifkesou");
            return (Criteria) this;
        }

        public Criteria andIfkesouIn(List<String> values) {
            addCriterion("ifkesou in", values, "ifkesou");
            return (Criteria) this;
        }

        public Criteria andIfkesouNotIn(List<String> values) {
            addCriterion("ifkesou not in", values, "ifkesou");
            return (Criteria) this;
        }

        public Criteria andIfkesouBetween(String value1, String value2) {
            addCriterion("ifkesou between", value1, value2, "ifkesou");
            return (Criteria) this;
        }

        public Criteria andIfkesouNotBetween(String value1, String value2) {
            addCriterion("ifkesou not between", value1, value2, "ifkesou");
            return (Criteria) this;
        }

        public Criteria andIfcontactHotIsNull() {
            addCriterion("ifcontact_hot is null");
            return (Criteria) this;
        }

        public Criteria andIfcontactHotIsNotNull() {
            addCriterion("ifcontact_hot is not null");
            return (Criteria) this;
        }

        public Criteria andIfcontactHotEqualTo(String value) {
            addCriterion("ifcontact_hot =", value, "ifcontactHot");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table whuser
         *
         * @mbg.generated
         */
        public Criteria andIfcontactHotEqualToColumn(Whuser.Column column) {
            addCriterion(new StringBuilder("ifcontact_hot = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIfcontactHotNotEqualTo(String value) {
            addCriterion("ifcontact_hot <>", value, "ifcontactHot");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table whuser
         *
         * @mbg.generated
         */
        public Criteria andIfcontactHotNotEqualToColumn(Whuser.Column column) {
            addCriterion(new StringBuilder("ifcontact_hot <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIfcontactHotGreaterThan(String value) {
            addCriterion("ifcontact_hot >", value, "ifcontactHot");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table whuser
         *
         * @mbg.generated
         */
        public Criteria andIfcontactHotGreaterThanColumn(Whuser.Column column) {
            addCriterion(new StringBuilder("ifcontact_hot > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIfcontactHotGreaterThanOrEqualTo(String value) {
            addCriterion("ifcontact_hot >=", value, "ifcontactHot");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table whuser
         *
         * @mbg.generated
         */
        public Criteria andIfcontactHotGreaterThanOrEqualToColumn(Whuser.Column column) {
            addCriterion(new StringBuilder("ifcontact_hot >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIfcontactHotLessThan(String value) {
            addCriterion("ifcontact_hot <", value, "ifcontactHot");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table whuser
         *
         * @mbg.generated
         */
        public Criteria andIfcontactHotLessThanColumn(Whuser.Column column) {
            addCriterion(new StringBuilder("ifcontact_hot < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIfcontactHotLessThanOrEqualTo(String value) {
            addCriterion("ifcontact_hot <=", value, "ifcontactHot");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table whuser
         *
         * @mbg.generated
         */
        public Criteria andIfcontactHotLessThanOrEqualToColumn(Whuser.Column column) {
            addCriterion(new StringBuilder("ifcontact_hot <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIfcontactHotLike(String value) {
            addCriterion("ifcontact_hot like", value, "ifcontactHot");
            return (Criteria) this;
        }

        public Criteria andIfcontactHotNotLike(String value) {
            addCriterion("ifcontact_hot not like", value, "ifcontactHot");
            return (Criteria) this;
        }

        public Criteria andIfcontactHotIn(List<String> values) {
            addCriterion("ifcontact_hot in", values, "ifcontactHot");
            return (Criteria) this;
        }

        public Criteria andIfcontactHotNotIn(List<String> values) {
            addCriterion("ifcontact_hot not in", values, "ifcontactHot");
            return (Criteria) this;
        }

        public Criteria andIfcontactHotBetween(String value1, String value2) {
            addCriterion("ifcontact_hot between", value1, value2, "ifcontactHot");
            return (Criteria) this;
        }

        public Criteria andIfcontactHotNotBetween(String value1, String value2) {
            addCriterion("ifcontact_hot not between", value1, value2, "ifcontactHot");
            return (Criteria) this;
        }

        public Criteria andIfcontactSarsIsNull() {
            addCriterion("ifcontact_sars is null");
            return (Criteria) this;
        }

        public Criteria andIfcontactSarsIsNotNull() {
            addCriterion("ifcontact_sars is not null");
            return (Criteria) this;
        }

        public Criteria andIfcontactSarsEqualTo(String value) {
            addCriterion("ifcontact_sars =", value, "ifcontactSars");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table whuser
         *
         * @mbg.generated
         */
        public Criteria andIfcontactSarsEqualToColumn(Whuser.Column column) {
            addCriterion(new StringBuilder("ifcontact_sars = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIfcontactSarsNotEqualTo(String value) {
            addCriterion("ifcontact_sars <>", value, "ifcontactSars");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table whuser
         *
         * @mbg.generated
         */
        public Criteria andIfcontactSarsNotEqualToColumn(Whuser.Column column) {
            addCriterion(new StringBuilder("ifcontact_sars <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIfcontactSarsGreaterThan(String value) {
            addCriterion("ifcontact_sars >", value, "ifcontactSars");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table whuser
         *
         * @mbg.generated
         */
        public Criteria andIfcontactSarsGreaterThanColumn(Whuser.Column column) {
            addCriterion(new StringBuilder("ifcontact_sars > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIfcontactSarsGreaterThanOrEqualTo(String value) {
            addCriterion("ifcontact_sars >=", value, "ifcontactSars");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table whuser
         *
         * @mbg.generated
         */
        public Criteria andIfcontactSarsGreaterThanOrEqualToColumn(Whuser.Column column) {
            addCriterion(new StringBuilder("ifcontact_sars >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIfcontactSarsLessThan(String value) {
            addCriterion("ifcontact_sars <", value, "ifcontactSars");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table whuser
         *
         * @mbg.generated
         */
        public Criteria andIfcontactSarsLessThanColumn(Whuser.Column column) {
            addCriterion(new StringBuilder("ifcontact_sars < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIfcontactSarsLessThanOrEqualTo(String value) {
            addCriterion("ifcontact_sars <=", value, "ifcontactSars");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table whuser
         *
         * @mbg.generated
         */
        public Criteria andIfcontactSarsLessThanOrEqualToColumn(Whuser.Column column) {
            addCriterion(new StringBuilder("ifcontact_sars <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIfcontactSarsLike(String value) {
            addCriterion("ifcontact_sars like", value, "ifcontactSars");
            return (Criteria) this;
        }

        public Criteria andIfcontactSarsNotLike(String value) {
            addCriterion("ifcontact_sars not like", value, "ifcontactSars");
            return (Criteria) this;
        }

        public Criteria andIfcontactSarsIn(List<String> values) {
            addCriterion("ifcontact_sars in", values, "ifcontactSars");
            return (Criteria) this;
        }

        public Criteria andIfcontactSarsNotIn(List<String> values) {
            addCriterion("ifcontact_sars not in", values, "ifcontactSars");
            return (Criteria) this;
        }

        public Criteria andIfcontactSarsBetween(String value1, String value2) {
            addCriterion("ifcontact_sars between", value1, value2, "ifcontactSars");
            return (Criteria) this;
        }

        public Criteria andIfcontactSarsNotBetween(String value1, String value2) {
            addCriterion("ifcontact_sars not between", value1, value2, "ifcontactSars");
            return (Criteria) this;
        }

        public Criteria andContactNameIsNull() {
            addCriterion("contact_name is null");
            return (Criteria) this;
        }

        public Criteria andContactNameIsNotNull() {
            addCriterion("contact_name is not null");
            return (Criteria) this;
        }

        public Criteria andContactNameEqualTo(String value) {
            addCriterion("contact_name =", value, "contactName");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table whuser
         *
         * @mbg.generated
         */
        public Criteria andContactNameEqualToColumn(Whuser.Column column) {
            addCriterion(new StringBuilder("contact_name = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andContactNameNotEqualTo(String value) {
            addCriterion("contact_name <>", value, "contactName");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table whuser
         *
         * @mbg.generated
         */
        public Criteria andContactNameNotEqualToColumn(Whuser.Column column) {
            addCriterion(new StringBuilder("contact_name <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andContactNameGreaterThan(String value) {
            addCriterion("contact_name >", value, "contactName");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table whuser
         *
         * @mbg.generated
         */
        public Criteria andContactNameGreaterThanColumn(Whuser.Column column) {
            addCriterion(new StringBuilder("contact_name > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andContactNameGreaterThanOrEqualTo(String value) {
            addCriterion("contact_name >=", value, "contactName");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table whuser
         *
         * @mbg.generated
         */
        public Criteria andContactNameGreaterThanOrEqualToColumn(Whuser.Column column) {
            addCriterion(new StringBuilder("contact_name >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andContactNameLessThan(String value) {
            addCriterion("contact_name <", value, "contactName");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table whuser
         *
         * @mbg.generated
         */
        public Criteria andContactNameLessThanColumn(Whuser.Column column) {
            addCriterion(new StringBuilder("contact_name < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andContactNameLessThanOrEqualTo(String value) {
            addCriterion("contact_name <=", value, "contactName");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table whuser
         *
         * @mbg.generated
         */
        public Criteria andContactNameLessThanOrEqualToColumn(Whuser.Column column) {
            addCriterion(new StringBuilder("contact_name <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andContactNameLike(String value) {
            addCriterion("contact_name like", value, "contactName");
            return (Criteria) this;
        }

        public Criteria andContactNameNotLike(String value) {
            addCriterion("contact_name not like", value, "contactName");
            return (Criteria) this;
        }

        public Criteria andContactNameIn(List<String> values) {
            addCriterion("contact_name in", values, "contactName");
            return (Criteria) this;
        }

        public Criteria andContactNameNotIn(List<String> values) {
            addCriterion("contact_name not in", values, "contactName");
            return (Criteria) this;
        }

        public Criteria andContactNameBetween(String value1, String value2) {
            addCriterion("contact_name between", value1, value2, "contactName");
            return (Criteria) this;
        }

        public Criteria andContactNameNotBetween(String value1, String value2) {
            addCriterion("contact_name not between", value1, value2, "contactName");
            return (Criteria) this;
        }

        public Criteria andContactPhoneIsNull() {
            addCriterion("contact_phone is null");
            return (Criteria) this;
        }

        public Criteria andContactPhoneIsNotNull() {
            addCriterion("contact_phone is not null");
            return (Criteria) this;
        }

        public Criteria andContactPhoneEqualTo(String value) {
            addCriterion("contact_phone =", value, "contactPhone");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table whuser
         *
         * @mbg.generated
         */
        public Criteria andContactPhoneEqualToColumn(Whuser.Column column) {
            addCriterion(new StringBuilder("contact_phone = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andContactPhoneNotEqualTo(String value) {
            addCriterion("contact_phone <>", value, "contactPhone");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table whuser
         *
         * @mbg.generated
         */
        public Criteria andContactPhoneNotEqualToColumn(Whuser.Column column) {
            addCriterion(new StringBuilder("contact_phone <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andContactPhoneGreaterThan(String value) {
            addCriterion("contact_phone >", value, "contactPhone");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table whuser
         *
         * @mbg.generated
         */
        public Criteria andContactPhoneGreaterThanColumn(Whuser.Column column) {
            addCriterion(new StringBuilder("contact_phone > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andContactPhoneGreaterThanOrEqualTo(String value) {
            addCriterion("contact_phone >=", value, "contactPhone");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table whuser
         *
         * @mbg.generated
         */
        public Criteria andContactPhoneGreaterThanOrEqualToColumn(Whuser.Column column) {
            addCriterion(new StringBuilder("contact_phone >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andContactPhoneLessThan(String value) {
            addCriterion("contact_phone <", value, "contactPhone");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table whuser
         *
         * @mbg.generated
         */
        public Criteria andContactPhoneLessThanColumn(Whuser.Column column) {
            addCriterion(new StringBuilder("contact_phone < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andContactPhoneLessThanOrEqualTo(String value) {
            addCriterion("contact_phone <=", value, "contactPhone");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table whuser
         *
         * @mbg.generated
         */
        public Criteria andContactPhoneLessThanOrEqualToColumn(Whuser.Column column) {
            addCriterion(new StringBuilder("contact_phone <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andContactPhoneLike(String value) {
            addCriterion("contact_phone like", value, "contactPhone");
            return (Criteria) this;
        }

        public Criteria andContactPhoneNotLike(String value) {
            addCriterion("contact_phone not like", value, "contactPhone");
            return (Criteria) this;
        }

        public Criteria andContactPhoneIn(List<String> values) {
            addCriterion("contact_phone in", values, "contactPhone");
            return (Criteria) this;
        }

        public Criteria andContactPhoneNotIn(List<String> values) {
            addCriterion("contact_phone not in", values, "contactPhone");
            return (Criteria) this;
        }

        public Criteria andContactPhoneBetween(String value1, String value2) {
            addCriterion("contact_phone between", value1, value2, "contactPhone");
            return (Criteria) this;
        }

        public Criteria andContactPhoneNotBetween(String value1, String value2) {
            addCriterion("contact_phone not between", value1, value2, "contactPhone");
            return (Criteria) this;
        }

        public Criteria andAddtimeIsNull() {
            addCriterion("addtime is null");
            return (Criteria) this;
        }

        public Criteria andAddtimeIsNotNull() {
            addCriterion("addtime is not null");
            return (Criteria) this;
        }

        public Criteria andAddtimeEqualTo(LocalDateTime value) {
            addCriterion("addtime =", value, "addtime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table whuser
         *
         * @mbg.generated
         */
        public Criteria andAddtimeEqualToColumn(Whuser.Column column) {
            addCriterion(new StringBuilder("addtime = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andAddtimeNotEqualTo(LocalDateTime value) {
            addCriterion("addtime <>", value, "addtime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table whuser
         *
         * @mbg.generated
         */
        public Criteria andAddtimeNotEqualToColumn(Whuser.Column column) {
            addCriterion(new StringBuilder("addtime <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andAddtimeGreaterThan(LocalDateTime value) {
            addCriterion("addtime >", value, "addtime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table whuser
         *
         * @mbg.generated
         */
        public Criteria andAddtimeGreaterThanColumn(Whuser.Column column) {
            addCriterion(new StringBuilder("addtime > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andAddtimeGreaterThanOrEqualTo(LocalDateTime value) {
            addCriterion("addtime >=", value, "addtime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table whuser
         *
         * @mbg.generated
         */
        public Criteria andAddtimeGreaterThanOrEqualToColumn(Whuser.Column column) {
            addCriterion(new StringBuilder("addtime >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andAddtimeLessThan(LocalDateTime value) {
            addCriterion("addtime <", value, "addtime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table whuser
         *
         * @mbg.generated
         */
        public Criteria andAddtimeLessThanColumn(Whuser.Column column) {
            addCriterion(new StringBuilder("addtime < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andAddtimeLessThanOrEqualTo(LocalDateTime value) {
            addCriterion("addtime <=", value, "addtime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table whuser
         *
         * @mbg.generated
         */
        public Criteria andAddtimeLessThanOrEqualToColumn(Whuser.Column column) {
            addCriterion(new StringBuilder("addtime <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andAddtimeIn(List<LocalDateTime> values) {
            addCriterion("addtime in", values, "addtime");
            return (Criteria) this;
        }

        public Criteria andAddtimeNotIn(List<LocalDateTime> values) {
            addCriterion("addtime not in", values, "addtime");
            return (Criteria) this;
        }

        public Criteria andAddtimeBetween(LocalDateTime value1, LocalDateTime value2) {
            addCriterion("addtime between", value1, value2, "addtime");
            return (Criteria) this;
        }

        public Criteria andAddtimeNotBetween(LocalDateTime value1, LocalDateTime value2) {
            addCriterion("addtime not between", value1, value2, "addtime");
            return (Criteria) this;
        }

        public Criteria andAddsourceIsNull() {
            addCriterion("addsource is null");
            return (Criteria) this;
        }

        public Criteria andAddsourceIsNotNull() {
            addCriterion("addsource is not null");
            return (Criteria) this;
        }

        public Criteria andAddsourceEqualTo(String value) {
            addCriterion("addsource =", value, "addsource");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table whuser
         *
         * @mbg.generated
         */
        public Criteria andAddsourceEqualToColumn(Whuser.Column column) {
            addCriterion(new StringBuilder("addsource = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andAddsourceNotEqualTo(String value) {
            addCriterion("addsource <>", value, "addsource");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table whuser
         *
         * @mbg.generated
         */
        public Criteria andAddsourceNotEqualToColumn(Whuser.Column column) {
            addCriterion(new StringBuilder("addsource <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andAddsourceGreaterThan(String value) {
            addCriterion("addsource >", value, "addsource");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table whuser
         *
         * @mbg.generated
         */
        public Criteria andAddsourceGreaterThanColumn(Whuser.Column column) {
            addCriterion(new StringBuilder("addsource > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andAddsourceGreaterThanOrEqualTo(String value) {
            addCriterion("addsource >=", value, "addsource");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table whuser
         *
         * @mbg.generated
         */
        public Criteria andAddsourceGreaterThanOrEqualToColumn(Whuser.Column column) {
            addCriterion(new StringBuilder("addsource >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andAddsourceLessThan(String value) {
            addCriterion("addsource <", value, "addsource");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table whuser
         *
         * @mbg.generated
         */
        public Criteria andAddsourceLessThanColumn(Whuser.Column column) {
            addCriterion(new StringBuilder("addsource < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andAddsourceLessThanOrEqualTo(String value) {
            addCriterion("addsource <=", value, "addsource");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table whuser
         *
         * @mbg.generated
         */
        public Criteria andAddsourceLessThanOrEqualToColumn(Whuser.Column column) {
            addCriterion(new StringBuilder("addsource <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andAddsourceLike(String value) {
            addCriterion("addsource like", value, "addsource");
            return (Criteria) this;
        }

        public Criteria andAddsourceNotLike(String value) {
            addCriterion("addsource not like", value, "addsource");
            return (Criteria) this;
        }

        public Criteria andAddsourceIn(List<String> values) {
            addCriterion("addsource in", values, "addsource");
            return (Criteria) this;
        }

        public Criteria andAddsourceNotIn(List<String> values) {
            addCriterion("addsource not in", values, "addsource");
            return (Criteria) this;
        }

        public Criteria andAddsourceBetween(String value1, String value2) {
            addCriterion("addsource between", value1, value2, "addsource");
            return (Criteria) this;
        }

        public Criteria andAddsourceNotBetween(String value1, String value2) {
            addCriterion("addsource not between", value1, value2, "addsource");
            return (Criteria) this;
        }

        public Criteria andNjcommunityIsNull() {
            addCriterion("njcommunity is null");
            return (Criteria) this;
        }

        public Criteria andNjcommunityIsNotNull() {
            addCriterion("njcommunity is not null");
            return (Criteria) this;
        }

        public Criteria andNjcommunityEqualTo(String value) {
            addCriterion("njcommunity =", value, "njcommunity");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table whuser
         *
         * @mbg.generated
         */
        public Criteria andNjcommunityEqualToColumn(Whuser.Column column) {
            addCriterion(new StringBuilder("njcommunity = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andNjcommunityNotEqualTo(String value) {
            addCriterion("njcommunity <>", value, "njcommunity");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table whuser
         *
         * @mbg.generated
         */
        public Criteria andNjcommunityNotEqualToColumn(Whuser.Column column) {
            addCriterion(new StringBuilder("njcommunity <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andNjcommunityGreaterThan(String value) {
            addCriterion("njcommunity >", value, "njcommunity");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table whuser
         *
         * @mbg.generated
         */
        public Criteria andNjcommunityGreaterThanColumn(Whuser.Column column) {
            addCriterion(new StringBuilder("njcommunity > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andNjcommunityGreaterThanOrEqualTo(String value) {
            addCriterion("njcommunity >=", value, "njcommunity");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table whuser
         *
         * @mbg.generated
         */
        public Criteria andNjcommunityGreaterThanOrEqualToColumn(Whuser.Column column) {
            addCriterion(new StringBuilder("njcommunity >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andNjcommunityLessThan(String value) {
            addCriterion("njcommunity <", value, "njcommunity");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table whuser
         *
         * @mbg.generated
         */
        public Criteria andNjcommunityLessThanColumn(Whuser.Column column) {
            addCriterion(new StringBuilder("njcommunity < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andNjcommunityLessThanOrEqualTo(String value) {
            addCriterion("njcommunity <=", value, "njcommunity");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table whuser
         *
         * @mbg.generated
         */
        public Criteria andNjcommunityLessThanOrEqualToColumn(Whuser.Column column) {
            addCriterion(new StringBuilder("njcommunity <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andNjcommunityLike(String value) {
            addCriterion("njcommunity like", value, "njcommunity");
            return (Criteria) this;
        }

        public Criteria andNjcommunityNotLike(String value) {
            addCriterion("njcommunity not like", value, "njcommunity");
            return (Criteria) this;
        }

        public Criteria andNjcommunityIn(List<String> values) {
            addCriterion("njcommunity in", values, "njcommunity");
            return (Criteria) this;
        }

        public Criteria andNjcommunityNotIn(List<String> values) {
            addCriterion("njcommunity not in", values, "njcommunity");
            return (Criteria) this;
        }

        public Criteria andNjcommunityBetween(String value1, String value2) {
            addCriterion("njcommunity between", value1, value2, "njcommunity");
            return (Criteria) this;
        }

        public Criteria andNjcommunityNotBetween(String value1, String value2) {
            addCriterion("njcommunity not between", value1, value2, "njcommunity");
            return (Criteria) this;
        }

        public Criteria andGpsaddrrssIsNull() {
            addCriterion("gpsaddrrss is null");
            return (Criteria) this;
        }

        public Criteria andGpsaddrrssIsNotNull() {
            addCriterion("gpsaddrrss is not null");
            return (Criteria) this;
        }

        public Criteria andGpsaddrrssEqualTo(String value) {
            addCriterion("gpsaddrrss =", value, "gpsaddrrss");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table whuser
         *
         * @mbg.generated
         */
        public Criteria andGpsaddrrssEqualToColumn(Whuser.Column column) {
            addCriterion(new StringBuilder("gpsaddrrss = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andGpsaddrrssNotEqualTo(String value) {
            addCriterion("gpsaddrrss <>", value, "gpsaddrrss");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table whuser
         *
         * @mbg.generated
         */
        public Criteria andGpsaddrrssNotEqualToColumn(Whuser.Column column) {
            addCriterion(new StringBuilder("gpsaddrrss <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andGpsaddrrssGreaterThan(String value) {
            addCriterion("gpsaddrrss >", value, "gpsaddrrss");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table whuser
         *
         * @mbg.generated
         */
        public Criteria andGpsaddrrssGreaterThanColumn(Whuser.Column column) {
            addCriterion(new StringBuilder("gpsaddrrss > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andGpsaddrrssGreaterThanOrEqualTo(String value) {
            addCriterion("gpsaddrrss >=", value, "gpsaddrrss");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table whuser
         *
         * @mbg.generated
         */
        public Criteria andGpsaddrrssGreaterThanOrEqualToColumn(Whuser.Column column) {
            addCriterion(new StringBuilder("gpsaddrrss >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andGpsaddrrssLessThan(String value) {
            addCriterion("gpsaddrrss <", value, "gpsaddrrss");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table whuser
         *
         * @mbg.generated
         */
        public Criteria andGpsaddrrssLessThanColumn(Whuser.Column column) {
            addCriterion(new StringBuilder("gpsaddrrss < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andGpsaddrrssLessThanOrEqualTo(String value) {
            addCriterion("gpsaddrrss <=", value, "gpsaddrrss");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table whuser
         *
         * @mbg.generated
         */
        public Criteria andGpsaddrrssLessThanOrEqualToColumn(Whuser.Column column) {
            addCriterion(new StringBuilder("gpsaddrrss <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andGpsaddrrssLike(String value) {
            addCriterion("gpsaddrrss like", value, "gpsaddrrss");
            return (Criteria) this;
        }

        public Criteria andGpsaddrrssNotLike(String value) {
            addCriterion("gpsaddrrss not like", value, "gpsaddrrss");
            return (Criteria) this;
        }

        public Criteria andGpsaddrrssIn(List<String> values) {
            addCriterion("gpsaddrrss in", values, "gpsaddrrss");
            return (Criteria) this;
        }

        public Criteria andGpsaddrrssNotIn(List<String> values) {
            addCriterion("gpsaddrrss not in", values, "gpsaddrrss");
            return (Criteria) this;
        }

        public Criteria andGpsaddrrssBetween(String value1, String value2) {
            addCriterion("gpsaddrrss between", value1, value2, "gpsaddrrss");
            return (Criteria) this;
        }

        public Criteria andGpsaddrrssNotBetween(String value1, String value2) {
            addCriterion("gpsaddrrss not between", value1, value2, "gpsaddrrss");
            return (Criteria) this;
        }

        public Criteria andWxopenidIsNull() {
            addCriterion("wxopenid is null");
            return (Criteria) this;
        }

        public Criteria andWxopenidIsNotNull() {
            addCriterion("wxopenid is not null");
            return (Criteria) this;
        }

        public Criteria andWxopenidEqualTo(String value) {
            addCriterion("wxopenid =", value, "wxopenid");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table whuser
         *
         * @mbg.generated
         */
        public Criteria andWxopenidEqualToColumn(Whuser.Column column) {
            addCriterion(new StringBuilder("wxopenid = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andWxopenidNotEqualTo(String value) {
            addCriterion("wxopenid <>", value, "wxopenid");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table whuser
         *
         * @mbg.generated
         */
        public Criteria andWxopenidNotEqualToColumn(Whuser.Column column) {
            addCriterion(new StringBuilder("wxopenid <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andWxopenidGreaterThan(String value) {
            addCriterion("wxopenid >", value, "wxopenid");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table whuser
         *
         * @mbg.generated
         */
        public Criteria andWxopenidGreaterThanColumn(Whuser.Column column) {
            addCriterion(new StringBuilder("wxopenid > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andWxopenidGreaterThanOrEqualTo(String value) {
            addCriterion("wxopenid >=", value, "wxopenid");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table whuser
         *
         * @mbg.generated
         */
        public Criteria andWxopenidGreaterThanOrEqualToColumn(Whuser.Column column) {
            addCriterion(new StringBuilder("wxopenid >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andWxopenidLessThan(String value) {
            addCriterion("wxopenid <", value, "wxopenid");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table whuser
         *
         * @mbg.generated
         */
        public Criteria andWxopenidLessThanColumn(Whuser.Column column) {
            addCriterion(new StringBuilder("wxopenid < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andWxopenidLessThanOrEqualTo(String value) {
            addCriterion("wxopenid <=", value, "wxopenid");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table whuser
         *
         * @mbg.generated
         */
        public Criteria andWxopenidLessThanOrEqualToColumn(Whuser.Column column) {
            addCriterion(new StringBuilder("wxopenid <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andWxopenidLike(String value) {
            addCriterion("wxopenid like", value, "wxopenid");
            return (Criteria) this;
        }

        public Criteria andWxopenidNotLike(String value) {
            addCriterion("wxopenid not like", value, "wxopenid");
            return (Criteria) this;
        }

        public Criteria andWxopenidIn(List<String> values) {
            addCriterion("wxopenid in", values, "wxopenid");
            return (Criteria) this;
        }

        public Criteria andWxopenidNotIn(List<String> values) {
            addCriterion("wxopenid not in", values, "wxopenid");
            return (Criteria) this;
        }

        public Criteria andWxopenidBetween(String value1, String value2) {
            addCriterion("wxopenid between", value1, value2, "wxopenid");
            return (Criteria) this;
        }

        public Criteria andWxopenidNotBetween(String value1, String value2) {
            addCriterion("wxopenid not between", value1, value2, "wxopenid");
            return (Criteria) this;
        }

        public Criteria andAddaccountIsNull() {
            addCriterion("addaccount is null");
            return (Criteria) this;
        }

        public Criteria andAddaccountIsNotNull() {
            addCriterion("addaccount is not null");
            return (Criteria) this;
        }

        public Criteria andAddaccountEqualTo(Integer value) {
            addCriterion("addaccount =", value, "addaccount");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table whuser
         *
         * @mbg.generated
         */
        public Criteria andAddaccountEqualToColumn(Whuser.Column column) {
            addCriterion(new StringBuilder("addaccount = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andAddaccountNotEqualTo(Integer value) {
            addCriterion("addaccount <>", value, "addaccount");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table whuser
         *
         * @mbg.generated
         */
        public Criteria andAddaccountNotEqualToColumn(Whuser.Column column) {
            addCriterion(new StringBuilder("addaccount <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andAddaccountGreaterThan(Integer value) {
            addCriterion("addaccount >", value, "addaccount");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table whuser
         *
         * @mbg.generated
         */
        public Criteria andAddaccountGreaterThanColumn(Whuser.Column column) {
            addCriterion(new StringBuilder("addaccount > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andAddaccountGreaterThanOrEqualTo(Integer value) {
            addCriterion("addaccount >=", value, "addaccount");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table whuser
         *
         * @mbg.generated
         */
        public Criteria andAddaccountGreaterThanOrEqualToColumn(Whuser.Column column) {
            addCriterion(new StringBuilder("addaccount >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andAddaccountLessThan(Integer value) {
            addCriterion("addaccount <", value, "addaccount");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table whuser
         *
         * @mbg.generated
         */
        public Criteria andAddaccountLessThanColumn(Whuser.Column column) {
            addCriterion(new StringBuilder("addaccount < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andAddaccountLessThanOrEqualTo(Integer value) {
            addCriterion("addaccount <=", value, "addaccount");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table whuser
         *
         * @mbg.generated
         */
        public Criteria andAddaccountLessThanOrEqualToColumn(Whuser.Column column) {
            addCriterion(new StringBuilder("addaccount <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andAddaccountIn(List<Integer> values) {
            addCriterion("addaccount in", values, "addaccount");
            return (Criteria) this;
        }

        public Criteria andAddaccountNotIn(List<Integer> values) {
            addCriterion("addaccount not in", values, "addaccount");
            return (Criteria) this;
        }

        public Criteria andAddaccountBetween(Integer value1, Integer value2) {
            addCriterion("addaccount between", value1, value2, "addaccount");
            return (Criteria) this;
        }

        public Criteria andAddaccountNotBetween(Integer value1, Integer value2) {
            addCriterion("addaccount not between", value1, value2, "addaccount");
            return (Criteria) this;
        }

        public Criteria andAgeIsNull() {
            addCriterion("age is null");
            return (Criteria) this;
        }

        public Criteria andAgeIsNotNull() {
            addCriterion("age is not null");
            return (Criteria) this;
        }

        public Criteria andAgeEqualTo(Integer value) {
            addCriterion("age =", value, "age");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table whuser
         *
         * @mbg.generated
         */
        public Criteria andAgeEqualToColumn(Whuser.Column column) {
            addCriterion(new StringBuilder("age = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andAgeNotEqualTo(Integer value) {
            addCriterion("age <>", value, "age");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table whuser
         *
         * @mbg.generated
         */
        public Criteria andAgeNotEqualToColumn(Whuser.Column column) {
            addCriterion(new StringBuilder("age <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andAgeGreaterThan(Integer value) {
            addCriterion("age >", value, "age");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table whuser
         *
         * @mbg.generated
         */
        public Criteria andAgeGreaterThanColumn(Whuser.Column column) {
            addCriterion(new StringBuilder("age > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andAgeGreaterThanOrEqualTo(Integer value) {
            addCriterion("age >=", value, "age");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table whuser
         *
         * @mbg.generated
         */
        public Criteria andAgeGreaterThanOrEqualToColumn(Whuser.Column column) {
            addCriterion(new StringBuilder("age >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andAgeLessThan(Integer value) {
            addCriterion("age <", value, "age");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table whuser
         *
         * @mbg.generated
         */
        public Criteria andAgeLessThanColumn(Whuser.Column column) {
            addCriterion(new StringBuilder("age < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andAgeLessThanOrEqualTo(Integer value) {
            addCriterion("age <=", value, "age");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table whuser
         *
         * @mbg.generated
         */
        public Criteria andAgeLessThanOrEqualToColumn(Whuser.Column column) {
            addCriterion(new StringBuilder("age <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andAgeIn(List<Integer> values) {
            addCriterion("age in", values, "age");
            return (Criteria) this;
        }

        public Criteria andAgeNotIn(List<Integer> values) {
            addCriterion("age not in", values, "age");
            return (Criteria) this;
        }

        public Criteria andAgeBetween(Integer value1, Integer value2) {
            addCriterion("age between", value1, value2, "age");
            return (Criteria) this;
        }

        public Criteria andAgeNotBetween(Integer value1, Integer value2) {
            addCriterion("age not between", value1, value2, "age");
            return (Criteria) this;
        }

        public Criteria andAreaIsNull() {
            addCriterion("area is null");
            return (Criteria) this;
        }

        public Criteria andAreaIsNotNull() {
            addCriterion("area is not null");
            return (Criteria) this;
        }

        public Criteria andAreaEqualTo(String value) {
            addCriterion("area =", value, "area");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table whuser
         *
         * @mbg.generated
         */
        public Criteria andAreaEqualToColumn(Whuser.Column column) {
            addCriterion(new StringBuilder("area = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andAreaNotEqualTo(String value) {
            addCriterion("area <>", value, "area");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table whuser
         *
         * @mbg.generated
         */
        public Criteria andAreaNotEqualToColumn(Whuser.Column column) {
            addCriterion(new StringBuilder("area <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andAreaGreaterThan(String value) {
            addCriterion("area >", value, "area");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table whuser
         *
         * @mbg.generated
         */
        public Criteria andAreaGreaterThanColumn(Whuser.Column column) {
            addCriterion(new StringBuilder("area > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andAreaGreaterThanOrEqualTo(String value) {
            addCriterion("area >=", value, "area");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table whuser
         *
         * @mbg.generated
         */
        public Criteria andAreaGreaterThanOrEqualToColumn(Whuser.Column column) {
            addCriterion(new StringBuilder("area >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andAreaLessThan(String value) {
            addCriterion("area <", value, "area");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table whuser
         *
         * @mbg.generated
         */
        public Criteria andAreaLessThanColumn(Whuser.Column column) {
            addCriterion(new StringBuilder("area < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andAreaLessThanOrEqualTo(String value) {
            addCriterion("area <=", value, "area");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table whuser
         *
         * @mbg.generated
         */
        public Criteria andAreaLessThanOrEqualToColumn(Whuser.Column column) {
            addCriterion(new StringBuilder("area <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andAreaLike(String value) {
            addCriterion("area like", value, "area");
            return (Criteria) this;
        }

        public Criteria andAreaNotLike(String value) {
            addCriterion("area not like", value, "area");
            return (Criteria) this;
        }

        public Criteria andAreaIn(List<String> values) {
            addCriterion("area in", values, "area");
            return (Criteria) this;
        }

        public Criteria andAreaNotIn(List<String> values) {
            addCriterion("area not in", values, "area");
            return (Criteria) this;
        }

        public Criteria andAreaBetween(String value1, String value2) {
            addCriterion("area between", value1, value2, "area");
            return (Criteria) this;
        }

        public Criteria andAreaNotBetween(String value1, String value2) {
            addCriterion("area not between", value1, value2, "area");
            return (Criteria) this;
        }

        public Criteria andStreetIsNull() {
            addCriterion("street is null");
            return (Criteria) this;
        }

        public Criteria andStreetIsNotNull() {
            addCriterion("street is not null");
            return (Criteria) this;
        }

        public Criteria andStreetEqualTo(String value) {
            addCriterion("street =", value, "street");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table whuser
         *
         * @mbg.generated
         */
        public Criteria andStreetEqualToColumn(Whuser.Column column) {
            addCriterion(new StringBuilder("street = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andStreetNotEqualTo(String value) {
            addCriterion("street <>", value, "street");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table whuser
         *
         * @mbg.generated
         */
        public Criteria andStreetNotEqualToColumn(Whuser.Column column) {
            addCriterion(new StringBuilder("street <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andStreetGreaterThan(String value) {
            addCriterion("street >", value, "street");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table whuser
         *
         * @mbg.generated
         */
        public Criteria andStreetGreaterThanColumn(Whuser.Column column) {
            addCriterion(new StringBuilder("street > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andStreetGreaterThanOrEqualTo(String value) {
            addCriterion("street >=", value, "street");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table whuser
         *
         * @mbg.generated
         */
        public Criteria andStreetGreaterThanOrEqualToColumn(Whuser.Column column) {
            addCriterion(new StringBuilder("street >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andStreetLessThan(String value) {
            addCriterion("street <", value, "street");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table whuser
         *
         * @mbg.generated
         */
        public Criteria andStreetLessThanColumn(Whuser.Column column) {
            addCriterion(new StringBuilder("street < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andStreetLessThanOrEqualTo(String value) {
            addCriterion("street <=", value, "street");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table whuser
         *
         * @mbg.generated
         */
        public Criteria andStreetLessThanOrEqualToColumn(Whuser.Column column) {
            addCriterion(new StringBuilder("street <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andStreetLike(String value) {
            addCriterion("street like", value, "street");
            return (Criteria) this;
        }

        public Criteria andStreetNotLike(String value) {
            addCriterion("street not like", value, "street");
            return (Criteria) this;
        }

        public Criteria andStreetIn(List<String> values) {
            addCriterion("street in", values, "street");
            return (Criteria) this;
        }

        public Criteria andStreetNotIn(List<String> values) {
            addCriterion("street not in", values, "street");
            return (Criteria) this;
        }

        public Criteria andStreetBetween(String value1, String value2) {
            addCriterion("street between", value1, value2, "street");
            return (Criteria) this;
        }

        public Criteria andStreetNotBetween(String value1, String value2) {
            addCriterion("street not between", value1, value2, "street");
            return (Criteria) this;
        }

        public Criteria andLiveaddressIsNull() {
            addCriterion("liveaddress is null");
            return (Criteria) this;
        }

        public Criteria andLiveaddressIsNotNull() {
            addCriterion("liveaddress is not null");
            return (Criteria) this;
        }

        public Criteria andLiveaddressEqualTo(String value) {
            addCriterion("liveaddress =", value, "liveaddress");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table whuser
         *
         * @mbg.generated
         */
        public Criteria andLiveaddressEqualToColumn(Whuser.Column column) {
            addCriterion(new StringBuilder("liveaddress = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andLiveaddressNotEqualTo(String value) {
            addCriterion("liveaddress <>", value, "liveaddress");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table whuser
         *
         * @mbg.generated
         */
        public Criteria andLiveaddressNotEqualToColumn(Whuser.Column column) {
            addCriterion(new StringBuilder("liveaddress <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andLiveaddressGreaterThan(String value) {
            addCriterion("liveaddress >", value, "liveaddress");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table whuser
         *
         * @mbg.generated
         */
        public Criteria andLiveaddressGreaterThanColumn(Whuser.Column column) {
            addCriterion(new StringBuilder("liveaddress > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andLiveaddressGreaterThanOrEqualTo(String value) {
            addCriterion("liveaddress >=", value, "liveaddress");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table whuser
         *
         * @mbg.generated
         */
        public Criteria andLiveaddressGreaterThanOrEqualToColumn(Whuser.Column column) {
            addCriterion(new StringBuilder("liveaddress >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andLiveaddressLessThan(String value) {
            addCriterion("liveaddress <", value, "liveaddress");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table whuser
         *
         * @mbg.generated
         */
        public Criteria andLiveaddressLessThanColumn(Whuser.Column column) {
            addCriterion(new StringBuilder("liveaddress < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andLiveaddressLessThanOrEqualTo(String value) {
            addCriterion("liveaddress <=", value, "liveaddress");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table whuser
         *
         * @mbg.generated
         */
        public Criteria andLiveaddressLessThanOrEqualToColumn(Whuser.Column column) {
            addCriterion(new StringBuilder("liveaddress <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andLiveaddressLike(String value) {
            addCriterion("liveaddress like", value, "liveaddress");
            return (Criteria) this;
        }

        public Criteria andLiveaddressNotLike(String value) {
            addCriterion("liveaddress not like", value, "liveaddress");
            return (Criteria) this;
        }

        public Criteria andLiveaddressIn(List<String> values) {
            addCriterion("liveaddress in", values, "liveaddress");
            return (Criteria) this;
        }

        public Criteria andLiveaddressNotIn(List<String> values) {
            addCriterion("liveaddress not in", values, "liveaddress");
            return (Criteria) this;
        }

        public Criteria andLiveaddressBetween(String value1, String value2) {
            addCriterion("liveaddress between", value1, value2, "liveaddress");
            return (Criteria) this;
        }

        public Criteria andLiveaddressNotBetween(String value1, String value2) {
            addCriterion("liveaddress not between", value1, value2, "liveaddress");
            return (Criteria) this;
        }

        public Criteria andIfhbIsNull() {
            addCriterion("ifhb is null");
            return (Criteria) this;
        }

        public Criteria andIfhbIsNotNull() {
            addCriterion("ifhb is not null");
            return (Criteria) this;
        }

        public Criteria andIfhbEqualTo(String value) {
            addCriterion("ifhb =", value, "ifhb");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table whuser
         *
         * @mbg.generated
         */
        public Criteria andIfhbEqualToColumn(Whuser.Column column) {
            addCriterion(new StringBuilder("ifhb = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIfhbNotEqualTo(String value) {
            addCriterion("ifhb <>", value, "ifhb");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table whuser
         *
         * @mbg.generated
         */
        public Criteria andIfhbNotEqualToColumn(Whuser.Column column) {
            addCriterion(new StringBuilder("ifhb <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIfhbGreaterThan(String value) {
            addCriterion("ifhb >", value, "ifhb");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table whuser
         *
         * @mbg.generated
         */
        public Criteria andIfhbGreaterThanColumn(Whuser.Column column) {
            addCriterion(new StringBuilder("ifhb > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIfhbGreaterThanOrEqualTo(String value) {
            addCriterion("ifhb >=", value, "ifhb");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table whuser
         *
         * @mbg.generated
         */
        public Criteria andIfhbGreaterThanOrEqualToColumn(Whuser.Column column) {
            addCriterion(new StringBuilder("ifhb >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIfhbLessThan(String value) {
            addCriterion("ifhb <", value, "ifhb");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table whuser
         *
         * @mbg.generated
         */
        public Criteria andIfhbLessThanColumn(Whuser.Column column) {
            addCriterion(new StringBuilder("ifhb < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIfhbLessThanOrEqualTo(String value) {
            addCriterion("ifhb <=", value, "ifhb");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table whuser
         *
         * @mbg.generated
         */
        public Criteria andIfhbLessThanOrEqualToColumn(Whuser.Column column) {
            addCriterion(new StringBuilder("ifhb <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIfhbLike(String value) {
            addCriterion("ifhb like", value, "ifhb");
            return (Criteria) this;
        }

        public Criteria andIfhbNotLike(String value) {
            addCriterion("ifhb not like", value, "ifhb");
            return (Criteria) this;
        }

        public Criteria andIfhbIn(List<String> values) {
            addCriterion("ifhb in", values, "ifhb");
            return (Criteria) this;
        }

        public Criteria andIfhbNotIn(List<String> values) {
            addCriterion("ifhb not in", values, "ifhb");
            return (Criteria) this;
        }

        public Criteria andIfhbBetween(String value1, String value2) {
            addCriterion("ifhb between", value1, value2, "ifhb");
            return (Criteria) this;
        }

        public Criteria andIfhbNotBetween(String value1, String value2) {
            addCriterion("ifhb not between", value1, value2, "ifhb");
            return (Criteria) this;
        }

        public Criteria andWhtimeIsNull() {
            addCriterion("whtime is null");
            return (Criteria) this;
        }

        public Criteria andWhtimeIsNotNull() {
            addCriterion("whtime is not null");
            return (Criteria) this;
        }

        public Criteria andWhtimeEqualTo(String value) {
            addCriterion("whtime =", value, "whtime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table whuser
         *
         * @mbg.generated
         */
        public Criteria andWhtimeEqualToColumn(Whuser.Column column) {
            addCriterion(new StringBuilder("whtime = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andWhtimeNotEqualTo(String value) {
            addCriterion("whtime <>", value, "whtime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table whuser
         *
         * @mbg.generated
         */
        public Criteria andWhtimeNotEqualToColumn(Whuser.Column column) {
            addCriterion(new StringBuilder("whtime <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andWhtimeGreaterThan(String value) {
            addCriterion("whtime >", value, "whtime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table whuser
         *
         * @mbg.generated
         */
        public Criteria andWhtimeGreaterThanColumn(Whuser.Column column) {
            addCriterion(new StringBuilder("whtime > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andWhtimeGreaterThanOrEqualTo(String value) {
            addCriterion("whtime >=", value, "whtime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table whuser
         *
         * @mbg.generated
         */
        public Criteria andWhtimeGreaterThanOrEqualToColumn(Whuser.Column column) {
            addCriterion(new StringBuilder("whtime >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andWhtimeLessThan(String value) {
            addCriterion("whtime <", value, "whtime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table whuser
         *
         * @mbg.generated
         */
        public Criteria andWhtimeLessThanColumn(Whuser.Column column) {
            addCriterion(new StringBuilder("whtime < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andWhtimeLessThanOrEqualTo(String value) {
            addCriterion("whtime <=", value, "whtime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table whuser
         *
         * @mbg.generated
         */
        public Criteria andWhtimeLessThanOrEqualToColumn(Whuser.Column column) {
            addCriterion(new StringBuilder("whtime <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andWhtimeLike(String value) {
            addCriterion("whtime like", value, "whtime");
            return (Criteria) this;
        }

        public Criteria andWhtimeNotLike(String value) {
            addCriterion("whtime not like", value, "whtime");
            return (Criteria) this;
        }

        public Criteria andWhtimeIn(List<String> values) {
            addCriterion("whtime in", values, "whtime");
            return (Criteria) this;
        }

        public Criteria andWhtimeNotIn(List<String> values) {
            addCriterion("whtime not in", values, "whtime");
            return (Criteria) this;
        }

        public Criteria andWhtimeBetween(String value1, String value2) {
            addCriterion("whtime between", value1, value2, "whtime");
            return (Criteria) this;
        }

        public Criteria andWhtimeNotBetween(String value1, String value2) {
            addCriterion("whtime not between", value1, value2, "whtime");
            return (Criteria) this;
        }

        public Criteria andArrivedateIsNull() {
            addCriterion("arrivedate is null");
            return (Criteria) this;
        }

        public Criteria andArrivedateIsNotNull() {
            addCriterion("arrivedate is not null");
            return (Criteria) this;
        }

        public Criteria andArrivedateEqualTo(LocalDateTime value) {
            addCriterion("arrivedate =", value, "arrivedate");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table whuser
         *
         * @mbg.generated
         */
        public Criteria andArrivedateEqualToColumn(Whuser.Column column) {
            addCriterion(new StringBuilder("arrivedate = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andArrivedateNotEqualTo(LocalDateTime value) {
            addCriterion("arrivedate <>", value, "arrivedate");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table whuser
         *
         * @mbg.generated
         */
        public Criteria andArrivedateNotEqualToColumn(Whuser.Column column) {
            addCriterion(new StringBuilder("arrivedate <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andArrivedateGreaterThan(LocalDateTime value) {
            addCriterion("arrivedate >", value, "arrivedate");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table whuser
         *
         * @mbg.generated
         */
        public Criteria andArrivedateGreaterThanColumn(Whuser.Column column) {
            addCriterion(new StringBuilder("arrivedate > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andArrivedateGreaterThanOrEqualTo(LocalDateTime value) {
            addCriterion("arrivedate >=", value, "arrivedate");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table whuser
         *
         * @mbg.generated
         */
        public Criteria andArrivedateGreaterThanOrEqualToColumn(Whuser.Column column) {
            addCriterion(new StringBuilder("arrivedate >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andArrivedateLessThan(LocalDateTime value) {
            addCriterion("arrivedate <", value, "arrivedate");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table whuser
         *
         * @mbg.generated
         */
        public Criteria andArrivedateLessThanColumn(Whuser.Column column) {
            addCriterion(new StringBuilder("arrivedate < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andArrivedateLessThanOrEqualTo(LocalDateTime value) {
            addCriterion("arrivedate <=", value, "arrivedate");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table whuser
         *
         * @mbg.generated
         */
        public Criteria andArrivedateLessThanOrEqualToColumn(Whuser.Column column) {
            addCriterion(new StringBuilder("arrivedate <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andArrivedateIn(List<LocalDateTime> values) {
            addCriterion("arrivedate in", values, "arrivedate");
            return (Criteria) this;
        }

        public Criteria andArrivedateNotIn(List<LocalDateTime> values) {
            addCriterion("arrivedate not in", values, "arrivedate");
            return (Criteria) this;
        }

        public Criteria andArrivedateBetween(LocalDateTime value1, LocalDateTime value2) {
            addCriterion("arrivedate between", value1, value2, "arrivedate");
            return (Criteria) this;
        }

        public Criteria andArrivedateNotBetween(LocalDateTime value1, LocalDateTime value2) {
            addCriterion("arrivedate not between", value1, value2, "arrivedate");
            return (Criteria) this;
        }

        public Criteria andJdnameIsNull() {
            addCriterion("jdname is null");
            return (Criteria) this;
        }

        public Criteria andJdnameIsNotNull() {
            addCriterion("jdname is not null");
            return (Criteria) this;
        }

        public Criteria andJdnameEqualTo(String value) {
            addCriterion("jdname =", value, "jdname");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table whuser
         *
         * @mbg.generated
         */
        public Criteria andJdnameEqualToColumn(Whuser.Column column) {
            addCriterion(new StringBuilder("jdname = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andJdnameNotEqualTo(String value) {
            addCriterion("jdname <>", value, "jdname");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table whuser
         *
         * @mbg.generated
         */
        public Criteria andJdnameNotEqualToColumn(Whuser.Column column) {
            addCriterion(new StringBuilder("jdname <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andJdnameGreaterThan(String value) {
            addCriterion("jdname >", value, "jdname");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table whuser
         *
         * @mbg.generated
         */
        public Criteria andJdnameGreaterThanColumn(Whuser.Column column) {
            addCriterion(new StringBuilder("jdname > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andJdnameGreaterThanOrEqualTo(String value) {
            addCriterion("jdname >=", value, "jdname");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table whuser
         *
         * @mbg.generated
         */
        public Criteria andJdnameGreaterThanOrEqualToColumn(Whuser.Column column) {
            addCriterion(new StringBuilder("jdname >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andJdnameLessThan(String value) {
            addCriterion("jdname <", value, "jdname");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table whuser
         *
         * @mbg.generated
         */
        public Criteria andJdnameLessThanColumn(Whuser.Column column) {
            addCriterion(new StringBuilder("jdname < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andJdnameLessThanOrEqualTo(String value) {
            addCriterion("jdname <=", value, "jdname");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table whuser
         *
         * @mbg.generated
         */
        public Criteria andJdnameLessThanOrEqualToColumn(Whuser.Column column) {
            addCriterion(new StringBuilder("jdname <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andJdnameLike(String value) {
            addCriterion("jdname like", value, "jdname");
            return (Criteria) this;
        }

        public Criteria andJdnameNotLike(String value) {
            addCriterion("jdname not like", value, "jdname");
            return (Criteria) this;
        }

        public Criteria andJdnameIn(List<String> values) {
            addCriterion("jdname in", values, "jdname");
            return (Criteria) this;
        }

        public Criteria andJdnameNotIn(List<String> values) {
            addCriterion("jdname not in", values, "jdname");
            return (Criteria) this;
        }

        public Criteria andJdnameBetween(String value1, String value2) {
            addCriterion("jdname between", value1, value2, "jdname");
            return (Criteria) this;
        }

        public Criteria andJdnameNotBetween(String value1, String value2) {
            addCriterion("jdname not between", value1, value2, "jdname");
            return (Criteria) this;
        }

        public Criteria andJdphoneIsNull() {
            addCriterion("jdphone is null");
            return (Criteria) this;
        }

        public Criteria andJdphoneIsNotNull() {
            addCriterion("jdphone is not null");
            return (Criteria) this;
        }

        public Criteria andJdphoneEqualTo(String value) {
            addCriterion("jdphone =", value, "jdphone");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table whuser
         *
         * @mbg.generated
         */
        public Criteria andJdphoneEqualToColumn(Whuser.Column column) {
            addCriterion(new StringBuilder("jdphone = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andJdphoneNotEqualTo(String value) {
            addCriterion("jdphone <>", value, "jdphone");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table whuser
         *
         * @mbg.generated
         */
        public Criteria andJdphoneNotEqualToColumn(Whuser.Column column) {
            addCriterion(new StringBuilder("jdphone <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andJdphoneGreaterThan(String value) {
            addCriterion("jdphone >", value, "jdphone");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table whuser
         *
         * @mbg.generated
         */
        public Criteria andJdphoneGreaterThanColumn(Whuser.Column column) {
            addCriterion(new StringBuilder("jdphone > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andJdphoneGreaterThanOrEqualTo(String value) {
            addCriterion("jdphone >=", value, "jdphone");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table whuser
         *
         * @mbg.generated
         */
        public Criteria andJdphoneGreaterThanOrEqualToColumn(Whuser.Column column) {
            addCriterion(new StringBuilder("jdphone >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andJdphoneLessThan(String value) {
            addCriterion("jdphone <", value, "jdphone");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table whuser
         *
         * @mbg.generated
         */
        public Criteria andJdphoneLessThanColumn(Whuser.Column column) {
            addCriterion(new StringBuilder("jdphone < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andJdphoneLessThanOrEqualTo(String value) {
            addCriterion("jdphone <=", value, "jdphone");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table whuser
         *
         * @mbg.generated
         */
        public Criteria andJdphoneLessThanOrEqualToColumn(Whuser.Column column) {
            addCriterion(new StringBuilder("jdphone <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andJdphoneLike(String value) {
            addCriterion("jdphone like", value, "jdphone");
            return (Criteria) this;
        }

        public Criteria andJdphoneNotLike(String value) {
            addCriterion("jdphone not like", value, "jdphone");
            return (Criteria) this;
        }

        public Criteria andJdphoneIn(List<String> values) {
            addCriterion("jdphone in", values, "jdphone");
            return (Criteria) this;
        }

        public Criteria andJdphoneNotIn(List<String> values) {
            addCriterion("jdphone not in", values, "jdphone");
            return (Criteria) this;
        }

        public Criteria andJdphoneBetween(String value1, String value2) {
            addCriterion("jdphone between", value1, value2, "jdphone");
            return (Criteria) this;
        }

        public Criteria andJdphoneNotBetween(String value1, String value2) {
            addCriterion("jdphone not between", value1, value2, "jdphone");
            return (Criteria) this;
        }

        public Criteria andGbnameIsNull() {
            addCriterion("gbname is null");
            return (Criteria) this;
        }

        public Criteria andGbnameIsNotNull() {
            addCriterion("gbname is not null");
            return (Criteria) this;
        }

        public Criteria andGbnameEqualTo(String value) {
            addCriterion("gbname =", value, "gbname");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table whuser
         *
         * @mbg.generated
         */
        public Criteria andGbnameEqualToColumn(Whuser.Column column) {
            addCriterion(new StringBuilder("gbname = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andGbnameNotEqualTo(String value) {
            addCriterion("gbname <>", value, "gbname");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table whuser
         *
         * @mbg.generated
         */
        public Criteria andGbnameNotEqualToColumn(Whuser.Column column) {
            addCriterion(new StringBuilder("gbname <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andGbnameGreaterThan(String value) {
            addCriterion("gbname >", value, "gbname");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table whuser
         *
         * @mbg.generated
         */
        public Criteria andGbnameGreaterThanColumn(Whuser.Column column) {
            addCriterion(new StringBuilder("gbname > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andGbnameGreaterThanOrEqualTo(String value) {
            addCriterion("gbname >=", value, "gbname");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table whuser
         *
         * @mbg.generated
         */
        public Criteria andGbnameGreaterThanOrEqualToColumn(Whuser.Column column) {
            addCriterion(new StringBuilder("gbname >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andGbnameLessThan(String value) {
            addCriterion("gbname <", value, "gbname");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table whuser
         *
         * @mbg.generated
         */
        public Criteria andGbnameLessThanColumn(Whuser.Column column) {
            addCriterion(new StringBuilder("gbname < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andGbnameLessThanOrEqualTo(String value) {
            addCriterion("gbname <=", value, "gbname");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table whuser
         *
         * @mbg.generated
         */
        public Criteria andGbnameLessThanOrEqualToColumn(Whuser.Column column) {
            addCriterion(new StringBuilder("gbname <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andGbnameLike(String value) {
            addCriterion("gbname like", value, "gbname");
            return (Criteria) this;
        }

        public Criteria andGbnameNotLike(String value) {
            addCriterion("gbname not like", value, "gbname");
            return (Criteria) this;
        }

        public Criteria andGbnameIn(List<String> values) {
            addCriterion("gbname in", values, "gbname");
            return (Criteria) this;
        }

        public Criteria andGbnameNotIn(List<String> values) {
            addCriterion("gbname not in", values, "gbname");
            return (Criteria) this;
        }

        public Criteria andGbnameBetween(String value1, String value2) {
            addCriterion("gbname between", value1, value2, "gbname");
            return (Criteria) this;
        }

        public Criteria andGbnameNotBetween(String value1, String value2) {
            addCriterion("gbname not between", value1, value2, "gbname");
            return (Criteria) this;
        }

        public Criteria andGbphoneIsNull() {
            addCriterion("gbphone is null");
            return (Criteria) this;
        }

        public Criteria andGbphoneIsNotNull() {
            addCriterion("gbphone is not null");
            return (Criteria) this;
        }

        public Criteria andGbphoneEqualTo(String value) {
            addCriterion("gbphone =", value, "gbphone");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table whuser
         *
         * @mbg.generated
         */
        public Criteria andGbphoneEqualToColumn(Whuser.Column column) {
            addCriterion(new StringBuilder("gbphone = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andGbphoneNotEqualTo(String value) {
            addCriterion("gbphone <>", value, "gbphone");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table whuser
         *
         * @mbg.generated
         */
        public Criteria andGbphoneNotEqualToColumn(Whuser.Column column) {
            addCriterion(new StringBuilder("gbphone <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andGbphoneGreaterThan(String value) {
            addCriterion("gbphone >", value, "gbphone");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table whuser
         *
         * @mbg.generated
         */
        public Criteria andGbphoneGreaterThanColumn(Whuser.Column column) {
            addCriterion(new StringBuilder("gbphone > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andGbphoneGreaterThanOrEqualTo(String value) {
            addCriterion("gbphone >=", value, "gbphone");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table whuser
         *
         * @mbg.generated
         */
        public Criteria andGbphoneGreaterThanOrEqualToColumn(Whuser.Column column) {
            addCriterion(new StringBuilder("gbphone >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andGbphoneLessThan(String value) {
            addCriterion("gbphone <", value, "gbphone");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table whuser
         *
         * @mbg.generated
         */
        public Criteria andGbphoneLessThanColumn(Whuser.Column column) {
            addCriterion(new StringBuilder("gbphone < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andGbphoneLessThanOrEqualTo(String value) {
            addCriterion("gbphone <=", value, "gbphone");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table whuser
         *
         * @mbg.generated
         */
        public Criteria andGbphoneLessThanOrEqualToColumn(Whuser.Column column) {
            addCriterion(new StringBuilder("gbphone <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andGbphoneLike(String value) {
            addCriterion("gbphone like", value, "gbphone");
            return (Criteria) this;
        }

        public Criteria andGbphoneNotLike(String value) {
            addCriterion("gbphone not like", value, "gbphone");
            return (Criteria) this;
        }

        public Criteria andGbphoneIn(List<String> values) {
            addCriterion("gbphone in", values, "gbphone");
            return (Criteria) this;
        }

        public Criteria andGbphoneNotIn(List<String> values) {
            addCriterion("gbphone not in", values, "gbphone");
            return (Criteria) this;
        }

        public Criteria andGbphoneBetween(String value1, String value2) {
            addCriterion("gbphone between", value1, value2, "gbphone");
            return (Criteria) this;
        }

        public Criteria andGbphoneNotBetween(String value1, String value2) {
            addCriterion("gbphone not between", value1, value2, "gbphone");
            return (Criteria) this;
        }

        public Criteria andSgnameIsNull() {
            addCriterion("sgname is null");
            return (Criteria) this;
        }

        public Criteria andSgnameIsNotNull() {
            addCriterion("sgname is not null");
            return (Criteria) this;
        }

        public Criteria andSgnameEqualTo(String value) {
            addCriterion("sgname =", value, "sgname");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table whuser
         *
         * @mbg.generated
         */
        public Criteria andSgnameEqualToColumn(Whuser.Column column) {
            addCriterion(new StringBuilder("sgname = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andSgnameNotEqualTo(String value) {
            addCriterion("sgname <>", value, "sgname");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table whuser
         *
         * @mbg.generated
         */
        public Criteria andSgnameNotEqualToColumn(Whuser.Column column) {
            addCriterion(new StringBuilder("sgname <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andSgnameGreaterThan(String value) {
            addCriterion("sgname >", value, "sgname");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table whuser
         *
         * @mbg.generated
         */
        public Criteria andSgnameGreaterThanColumn(Whuser.Column column) {
            addCriterion(new StringBuilder("sgname > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andSgnameGreaterThanOrEqualTo(String value) {
            addCriterion("sgname >=", value, "sgname");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table whuser
         *
         * @mbg.generated
         */
        public Criteria andSgnameGreaterThanOrEqualToColumn(Whuser.Column column) {
            addCriterion(new StringBuilder("sgname >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andSgnameLessThan(String value) {
            addCriterion("sgname <", value, "sgname");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table whuser
         *
         * @mbg.generated
         */
        public Criteria andSgnameLessThanColumn(Whuser.Column column) {
            addCriterion(new StringBuilder("sgname < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andSgnameLessThanOrEqualTo(String value) {
            addCriterion("sgname <=", value, "sgname");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table whuser
         *
         * @mbg.generated
         */
        public Criteria andSgnameLessThanOrEqualToColumn(Whuser.Column column) {
            addCriterion(new StringBuilder("sgname <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andSgnameLike(String value) {
            addCriterion("sgname like", value, "sgname");
            return (Criteria) this;
        }

        public Criteria andSgnameNotLike(String value) {
            addCriterion("sgname not like", value, "sgname");
            return (Criteria) this;
        }

        public Criteria andSgnameIn(List<String> values) {
            addCriterion("sgname in", values, "sgname");
            return (Criteria) this;
        }

        public Criteria andSgnameNotIn(List<String> values) {
            addCriterion("sgname not in", values, "sgname");
            return (Criteria) this;
        }

        public Criteria andSgnameBetween(String value1, String value2) {
            addCriterion("sgname between", value1, value2, "sgname");
            return (Criteria) this;
        }

        public Criteria andSgnameNotBetween(String value1, String value2) {
            addCriterion("sgname not between", value1, value2, "sgname");
            return (Criteria) this;
        }

        public Criteria andSgphoneIsNull() {
            addCriterion("sgphone is null");
            return (Criteria) this;
        }

        public Criteria andSgphoneIsNotNull() {
            addCriterion("sgphone is not null");
            return (Criteria) this;
        }

        public Criteria andSgphoneEqualTo(String value) {
            addCriterion("sgphone =", value, "sgphone");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table whuser
         *
         * @mbg.generated
         */
        public Criteria andSgphoneEqualToColumn(Whuser.Column column) {
            addCriterion(new StringBuilder("sgphone = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andSgphoneNotEqualTo(String value) {
            addCriterion("sgphone <>", value, "sgphone");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table whuser
         *
         * @mbg.generated
         */
        public Criteria andSgphoneNotEqualToColumn(Whuser.Column column) {
            addCriterion(new StringBuilder("sgphone <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andSgphoneGreaterThan(String value) {
            addCriterion("sgphone >", value, "sgphone");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table whuser
         *
         * @mbg.generated
         */
        public Criteria andSgphoneGreaterThanColumn(Whuser.Column column) {
            addCriterion(new StringBuilder("sgphone > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andSgphoneGreaterThanOrEqualTo(String value) {
            addCriterion("sgphone >=", value, "sgphone");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table whuser
         *
         * @mbg.generated
         */
        public Criteria andSgphoneGreaterThanOrEqualToColumn(Whuser.Column column) {
            addCriterion(new StringBuilder("sgphone >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andSgphoneLessThan(String value) {
            addCriterion("sgphone <", value, "sgphone");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table whuser
         *
         * @mbg.generated
         */
        public Criteria andSgphoneLessThanColumn(Whuser.Column column) {
            addCriterion(new StringBuilder("sgphone < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andSgphoneLessThanOrEqualTo(String value) {
            addCriterion("sgphone <=", value, "sgphone");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table whuser
         *
         * @mbg.generated
         */
        public Criteria andSgphoneLessThanOrEqualToColumn(Whuser.Column column) {
            addCriterion(new StringBuilder("sgphone <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andSgphoneLike(String value) {
            addCriterion("sgphone like", value, "sgphone");
            return (Criteria) this;
        }

        public Criteria andSgphoneNotLike(String value) {
            addCriterion("sgphone not like", value, "sgphone");
            return (Criteria) this;
        }

        public Criteria andSgphoneIn(List<String> values) {
            addCriterion("sgphone in", values, "sgphone");
            return (Criteria) this;
        }

        public Criteria andSgphoneNotIn(List<String> values) {
            addCriterion("sgphone not in", values, "sgphone");
            return (Criteria) this;
        }

        public Criteria andSgphoneBetween(String value1, String value2) {
            addCriterion("sgphone between", value1, value2, "sgphone");
            return (Criteria) this;
        }

        public Criteria andSgphoneNotBetween(String value1, String value2) {
            addCriterion("sgphone not between", value1, value2, "sgphone");
            return (Criteria) this;
        }

        public Criteria andMjnameIsNull() {
            addCriterion("mjname is null");
            return (Criteria) this;
        }

        public Criteria andMjnameIsNotNull() {
            addCriterion("mjname is not null");
            return (Criteria) this;
        }

        public Criteria andMjnameEqualTo(String value) {
            addCriterion("mjname =", value, "mjname");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table whuser
         *
         * @mbg.generated
         */
        public Criteria andMjnameEqualToColumn(Whuser.Column column) {
            addCriterion(new StringBuilder("mjname = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andMjnameNotEqualTo(String value) {
            addCriterion("mjname <>", value, "mjname");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table whuser
         *
         * @mbg.generated
         */
        public Criteria andMjnameNotEqualToColumn(Whuser.Column column) {
            addCriterion(new StringBuilder("mjname <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andMjnameGreaterThan(String value) {
            addCriterion("mjname >", value, "mjname");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table whuser
         *
         * @mbg.generated
         */
        public Criteria andMjnameGreaterThanColumn(Whuser.Column column) {
            addCriterion(new StringBuilder("mjname > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andMjnameGreaterThanOrEqualTo(String value) {
            addCriterion("mjname >=", value, "mjname");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table whuser
         *
         * @mbg.generated
         */
        public Criteria andMjnameGreaterThanOrEqualToColumn(Whuser.Column column) {
            addCriterion(new StringBuilder("mjname >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andMjnameLessThan(String value) {
            addCriterion("mjname <", value, "mjname");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table whuser
         *
         * @mbg.generated
         */
        public Criteria andMjnameLessThanColumn(Whuser.Column column) {
            addCriterion(new StringBuilder("mjname < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andMjnameLessThanOrEqualTo(String value) {
            addCriterion("mjname <=", value, "mjname");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table whuser
         *
         * @mbg.generated
         */
        public Criteria andMjnameLessThanOrEqualToColumn(Whuser.Column column) {
            addCriterion(new StringBuilder("mjname <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andMjnameLike(String value) {
            addCriterion("mjname like", value, "mjname");
            return (Criteria) this;
        }

        public Criteria andMjnameNotLike(String value) {
            addCriterion("mjname not like", value, "mjname");
            return (Criteria) this;
        }

        public Criteria andMjnameIn(List<String> values) {
            addCriterion("mjname in", values, "mjname");
            return (Criteria) this;
        }

        public Criteria andMjnameNotIn(List<String> values) {
            addCriterion("mjname not in", values, "mjname");
            return (Criteria) this;
        }

        public Criteria andMjnameBetween(String value1, String value2) {
            addCriterion("mjname between", value1, value2, "mjname");
            return (Criteria) this;
        }

        public Criteria andMjnameNotBetween(String value1, String value2) {
            addCriterion("mjname not between", value1, value2, "mjname");
            return (Criteria) this;
        }

        public Criteria andMjphoneIsNull() {
            addCriterion("mjphone is null");
            return (Criteria) this;
        }

        public Criteria andMjphoneIsNotNull() {
            addCriterion("mjphone is not null");
            return (Criteria) this;
        }

        public Criteria andMjphoneEqualTo(String value) {
            addCriterion("mjphone =", value, "mjphone");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table whuser
         *
         * @mbg.generated
         */
        public Criteria andMjphoneEqualToColumn(Whuser.Column column) {
            addCriterion(new StringBuilder("mjphone = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andMjphoneNotEqualTo(String value) {
            addCriterion("mjphone <>", value, "mjphone");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table whuser
         *
         * @mbg.generated
         */
        public Criteria andMjphoneNotEqualToColumn(Whuser.Column column) {
            addCriterion(new StringBuilder("mjphone <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andMjphoneGreaterThan(String value) {
            addCriterion("mjphone >", value, "mjphone");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table whuser
         *
         * @mbg.generated
         */
        public Criteria andMjphoneGreaterThanColumn(Whuser.Column column) {
            addCriterion(new StringBuilder("mjphone > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andMjphoneGreaterThanOrEqualTo(String value) {
            addCriterion("mjphone >=", value, "mjphone");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table whuser
         *
         * @mbg.generated
         */
        public Criteria andMjphoneGreaterThanOrEqualToColumn(Whuser.Column column) {
            addCriterion(new StringBuilder("mjphone >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andMjphoneLessThan(String value) {
            addCriterion("mjphone <", value, "mjphone");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table whuser
         *
         * @mbg.generated
         */
        public Criteria andMjphoneLessThanColumn(Whuser.Column column) {
            addCriterion(new StringBuilder("mjphone < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andMjphoneLessThanOrEqualTo(String value) {
            addCriterion("mjphone <=", value, "mjphone");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table whuser
         *
         * @mbg.generated
         */
        public Criteria andMjphoneLessThanOrEqualToColumn(Whuser.Column column) {
            addCriterion(new StringBuilder("mjphone <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andMjphoneLike(String value) {
            addCriterion("mjphone like", value, "mjphone");
            return (Criteria) this;
        }

        public Criteria andMjphoneNotLike(String value) {
            addCriterion("mjphone not like", value, "mjphone");
            return (Criteria) this;
        }

        public Criteria andMjphoneIn(List<String> values) {
            addCriterion("mjphone in", values, "mjphone");
            return (Criteria) this;
        }

        public Criteria andMjphoneNotIn(List<String> values) {
            addCriterion("mjphone not in", values, "mjphone");
            return (Criteria) this;
        }

        public Criteria andMjphoneBetween(String value1, String value2) {
            addCriterion("mjphone between", value1, value2, "mjphone");
            return (Criteria) this;
        }

        public Criteria andMjphoneNotBetween(String value1, String value2) {
            addCriterion("mjphone not between", value1, value2, "mjphone");
            return (Criteria) this;
        }

        public Criteria andYlnameIsNull() {
            addCriterion("ylname is null");
            return (Criteria) this;
        }

        public Criteria andYlnameIsNotNull() {
            addCriterion("ylname is not null");
            return (Criteria) this;
        }

        public Criteria andYlnameEqualTo(String value) {
            addCriterion("ylname =", value, "ylname");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table whuser
         *
         * @mbg.generated
         */
        public Criteria andYlnameEqualToColumn(Whuser.Column column) {
            addCriterion(new StringBuilder("ylname = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andYlnameNotEqualTo(String value) {
            addCriterion("ylname <>", value, "ylname");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table whuser
         *
         * @mbg.generated
         */
        public Criteria andYlnameNotEqualToColumn(Whuser.Column column) {
            addCriterion(new StringBuilder("ylname <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andYlnameGreaterThan(String value) {
            addCriterion("ylname >", value, "ylname");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table whuser
         *
         * @mbg.generated
         */
        public Criteria andYlnameGreaterThanColumn(Whuser.Column column) {
            addCriterion(new StringBuilder("ylname > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andYlnameGreaterThanOrEqualTo(String value) {
            addCriterion("ylname >=", value, "ylname");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table whuser
         *
         * @mbg.generated
         */
        public Criteria andYlnameGreaterThanOrEqualToColumn(Whuser.Column column) {
            addCriterion(new StringBuilder("ylname >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andYlnameLessThan(String value) {
            addCriterion("ylname <", value, "ylname");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table whuser
         *
         * @mbg.generated
         */
        public Criteria andYlnameLessThanColumn(Whuser.Column column) {
            addCriterion(new StringBuilder("ylname < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andYlnameLessThanOrEqualTo(String value) {
            addCriterion("ylname <=", value, "ylname");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table whuser
         *
         * @mbg.generated
         */
        public Criteria andYlnameLessThanOrEqualToColumn(Whuser.Column column) {
            addCriterion(new StringBuilder("ylname <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andYlnameLike(String value) {
            addCriterion("ylname like", value, "ylname");
            return (Criteria) this;
        }

        public Criteria andYlnameNotLike(String value) {
            addCriterion("ylname not like", value, "ylname");
            return (Criteria) this;
        }

        public Criteria andYlnameIn(List<String> values) {
            addCriterion("ylname in", values, "ylname");
            return (Criteria) this;
        }

        public Criteria andYlnameNotIn(List<String> values) {
            addCriterion("ylname not in", values, "ylname");
            return (Criteria) this;
        }

        public Criteria andYlnameBetween(String value1, String value2) {
            addCriterion("ylname between", value1, value2, "ylname");
            return (Criteria) this;
        }

        public Criteria andYlnameNotBetween(String value1, String value2) {
            addCriterion("ylname not between", value1, value2, "ylname");
            return (Criteria) this;
        }

        public Criteria andYlphoneIsNull() {
            addCriterion("ylphone is null");
            return (Criteria) this;
        }

        public Criteria andYlphoneIsNotNull() {
            addCriterion("ylphone is not null");
            return (Criteria) this;
        }

        public Criteria andYlphoneEqualTo(String value) {
            addCriterion("ylphone =", value, "ylphone");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table whuser
         *
         * @mbg.generated
         */
        public Criteria andYlphoneEqualToColumn(Whuser.Column column) {
            addCriterion(new StringBuilder("ylphone = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andYlphoneNotEqualTo(String value) {
            addCriterion("ylphone <>", value, "ylphone");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table whuser
         *
         * @mbg.generated
         */
        public Criteria andYlphoneNotEqualToColumn(Whuser.Column column) {
            addCriterion(new StringBuilder("ylphone <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andYlphoneGreaterThan(String value) {
            addCriterion("ylphone >", value, "ylphone");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table whuser
         *
         * @mbg.generated
         */
        public Criteria andYlphoneGreaterThanColumn(Whuser.Column column) {
            addCriterion(new StringBuilder("ylphone > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andYlphoneGreaterThanOrEqualTo(String value) {
            addCriterion("ylphone >=", value, "ylphone");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table whuser
         *
         * @mbg.generated
         */
        public Criteria andYlphoneGreaterThanOrEqualToColumn(Whuser.Column column) {
            addCriterion(new StringBuilder("ylphone >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andYlphoneLessThan(String value) {
            addCriterion("ylphone <", value, "ylphone");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table whuser
         *
         * @mbg.generated
         */
        public Criteria andYlphoneLessThanColumn(Whuser.Column column) {
            addCriterion(new StringBuilder("ylphone < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andYlphoneLessThanOrEqualTo(String value) {
            addCriterion("ylphone <=", value, "ylphone");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table whuser
         *
         * @mbg.generated
         */
        public Criteria andYlphoneLessThanOrEqualToColumn(Whuser.Column column) {
            addCriterion(new StringBuilder("ylphone <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andYlphoneLike(String value) {
            addCriterion("ylphone like", value, "ylphone");
            return (Criteria) this;
        }

        public Criteria andYlphoneNotLike(String value) {
            addCriterion("ylphone not like", value, "ylphone");
            return (Criteria) this;
        }

        public Criteria andYlphoneIn(List<String> values) {
            addCriterion("ylphone in", values, "ylphone");
            return (Criteria) this;
        }

        public Criteria andYlphoneNotIn(List<String> values) {
            addCriterion("ylphone not in", values, "ylphone");
            return (Criteria) this;
        }

        public Criteria andYlphoneBetween(String value1, String value2) {
            addCriterion("ylphone between", value1, value2, "ylphone");
            return (Criteria) this;
        }

        public Criteria andYlphoneNotBetween(String value1, String value2) {
            addCriterion("ylphone not between", value1, value2, "ylphone");
            return (Criteria) this;
        }

        public Criteria andRemarkIsNull() {
            addCriterion("remark is null");
            return (Criteria) this;
        }

        public Criteria andRemarkIsNotNull() {
            addCriterion("remark is not null");
            return (Criteria) this;
        }

        public Criteria andRemarkEqualTo(String value) {
            addCriterion("remark =", value, "remark");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table whuser
         *
         * @mbg.generated
         */
        public Criteria andRemarkEqualToColumn(Whuser.Column column) {
            addCriterion(new StringBuilder("remark = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andRemarkNotEqualTo(String value) {
            addCriterion("remark <>", value, "remark");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table whuser
         *
         * @mbg.generated
         */
        public Criteria andRemarkNotEqualToColumn(Whuser.Column column) {
            addCriterion(new StringBuilder("remark <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andRemarkGreaterThan(String value) {
            addCriterion("remark >", value, "remark");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table whuser
         *
         * @mbg.generated
         */
        public Criteria andRemarkGreaterThanColumn(Whuser.Column column) {
            addCriterion(new StringBuilder("remark > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andRemarkGreaterThanOrEqualTo(String value) {
            addCriterion("remark >=", value, "remark");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table whuser
         *
         * @mbg.generated
         */
        public Criteria andRemarkGreaterThanOrEqualToColumn(Whuser.Column column) {
            addCriterion(new StringBuilder("remark >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andRemarkLessThan(String value) {
            addCriterion("remark <", value, "remark");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table whuser
         *
         * @mbg.generated
         */
        public Criteria andRemarkLessThanColumn(Whuser.Column column) {
            addCriterion(new StringBuilder("remark < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andRemarkLessThanOrEqualTo(String value) {
            addCriterion("remark <=", value, "remark");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table whuser
         *
         * @mbg.generated
         */
        public Criteria andRemarkLessThanOrEqualToColumn(Whuser.Column column) {
            addCriterion(new StringBuilder("remark <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andRemarkLike(String value) {
            addCriterion("remark like", value, "remark");
            return (Criteria) this;
        }

        public Criteria andRemarkNotLike(String value) {
            addCriterion("remark not like", value, "remark");
            return (Criteria) this;
        }

        public Criteria andRemarkIn(List<String> values) {
            addCriterion("remark in", values, "remark");
            return (Criteria) this;
        }

        public Criteria andRemarkNotIn(List<String> values) {
            addCriterion("remark not in", values, "remark");
            return (Criteria) this;
        }

        public Criteria andRemarkBetween(String value1, String value2) {
            addCriterion("remark between", value1, value2, "remark");
            return (Criteria) this;
        }

        public Criteria andRemarkNotBetween(String value1, String value2) {
            addCriterion("remark not between", value1, value2, "remark");
            return (Criteria) this;
        }

        public Criteria andIfstayIsNull() {
            addCriterion("ifstay is null");
            return (Criteria) this;
        }

        public Criteria andIfstayIsNotNull() {
            addCriterion("ifstay is not null");
            return (Criteria) this;
        }

        public Criteria andIfstayEqualTo(String value) {
            addCriterion("ifstay =", value, "ifstay");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table whuser
         *
         * @mbg.generated
         */
        public Criteria andIfstayEqualToColumn(Whuser.Column column) {
            addCriterion(new StringBuilder("ifstay = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIfstayNotEqualTo(String value) {
            addCriterion("ifstay <>", value, "ifstay");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table whuser
         *
         * @mbg.generated
         */
        public Criteria andIfstayNotEqualToColumn(Whuser.Column column) {
            addCriterion(new StringBuilder("ifstay <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIfstayGreaterThan(String value) {
            addCriterion("ifstay >", value, "ifstay");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table whuser
         *
         * @mbg.generated
         */
        public Criteria andIfstayGreaterThanColumn(Whuser.Column column) {
            addCriterion(new StringBuilder("ifstay > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIfstayGreaterThanOrEqualTo(String value) {
            addCriterion("ifstay >=", value, "ifstay");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table whuser
         *
         * @mbg.generated
         */
        public Criteria andIfstayGreaterThanOrEqualToColumn(Whuser.Column column) {
            addCriterion(new StringBuilder("ifstay >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIfstayLessThan(String value) {
            addCriterion("ifstay <", value, "ifstay");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table whuser
         *
         * @mbg.generated
         */
        public Criteria andIfstayLessThanColumn(Whuser.Column column) {
            addCriterion(new StringBuilder("ifstay < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIfstayLessThanOrEqualTo(String value) {
            addCriterion("ifstay <=", value, "ifstay");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table whuser
         *
         * @mbg.generated
         */
        public Criteria andIfstayLessThanOrEqualToColumn(Whuser.Column column) {
            addCriterion(new StringBuilder("ifstay <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIfstayLike(String value) {
            addCriterion("ifstay like", value, "ifstay");
            return (Criteria) this;
        }

        public Criteria andIfstayNotLike(String value) {
            addCriterion("ifstay not like", value, "ifstay");
            return (Criteria) this;
        }

        public Criteria andIfstayIn(List<String> values) {
            addCriterion("ifstay in", values, "ifstay");
            return (Criteria) this;
        }

        public Criteria andIfstayNotIn(List<String> values) {
            addCriterion("ifstay not in", values, "ifstay");
            return (Criteria) this;
        }

        public Criteria andIfstayBetween(String value1, String value2) {
            addCriterion("ifstay between", value1, value2, "ifstay");
            return (Criteria) this;
        }

        public Criteria andIfstayNotBetween(String value1, String value2) {
            addCriterion("ifstay not between", value1, value2, "ifstay");
            return (Criteria) this;
        }

        public Criteria andIfleavenjIsNull() {
            addCriterion("ifleavenj is null");
            return (Criteria) this;
        }

        public Criteria andIfleavenjIsNotNull() {
            addCriterion("ifleavenj is not null");
            return (Criteria) this;
        }

        public Criteria andIfleavenjEqualTo(String value) {
            addCriterion("ifleavenj =", value, "ifleavenj");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table whuser
         *
         * @mbg.generated
         */
        public Criteria andIfleavenjEqualToColumn(Whuser.Column column) {
            addCriterion(new StringBuilder("ifleavenj = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIfleavenjNotEqualTo(String value) {
            addCriterion("ifleavenj <>", value, "ifleavenj");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table whuser
         *
         * @mbg.generated
         */
        public Criteria andIfleavenjNotEqualToColumn(Whuser.Column column) {
            addCriterion(new StringBuilder("ifleavenj <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIfleavenjGreaterThan(String value) {
            addCriterion("ifleavenj >", value, "ifleavenj");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table whuser
         *
         * @mbg.generated
         */
        public Criteria andIfleavenjGreaterThanColumn(Whuser.Column column) {
            addCriterion(new StringBuilder("ifleavenj > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIfleavenjGreaterThanOrEqualTo(String value) {
            addCriterion("ifleavenj >=", value, "ifleavenj");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table whuser
         *
         * @mbg.generated
         */
        public Criteria andIfleavenjGreaterThanOrEqualToColumn(Whuser.Column column) {
            addCriterion(new StringBuilder("ifleavenj >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIfleavenjLessThan(String value) {
            addCriterion("ifleavenj <", value, "ifleavenj");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table whuser
         *
         * @mbg.generated
         */
        public Criteria andIfleavenjLessThanColumn(Whuser.Column column) {
            addCriterion(new StringBuilder("ifleavenj < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIfleavenjLessThanOrEqualTo(String value) {
            addCriterion("ifleavenj <=", value, "ifleavenj");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table whuser
         *
         * @mbg.generated
         */
        public Criteria andIfleavenjLessThanOrEqualToColumn(Whuser.Column column) {
            addCriterion(new StringBuilder("ifleavenj <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIfleavenjLike(String value) {
            addCriterion("ifleavenj like", value, "ifleavenj");
            return (Criteria) this;
        }

        public Criteria andIfleavenjNotLike(String value) {
            addCriterion("ifleavenj not like", value, "ifleavenj");
            return (Criteria) this;
        }

        public Criteria andIfleavenjIn(List<String> values) {
            addCriterion("ifleavenj in", values, "ifleavenj");
            return (Criteria) this;
        }

        public Criteria andIfleavenjNotIn(List<String> values) {
            addCriterion("ifleavenj not in", values, "ifleavenj");
            return (Criteria) this;
        }

        public Criteria andIfleavenjBetween(String value1, String value2) {
            addCriterion("ifleavenj between", value1, value2, "ifleavenj");
            return (Criteria) this;
        }

        public Criteria andIfleavenjNotBetween(String value1, String value2) {
            addCriterion("ifleavenj not between", value1, value2, "ifleavenj");
            return (Criteria) this;
        }

        public Criteria andIfloseIsNull() {
            addCriterion("iflose is null");
            return (Criteria) this;
        }

        public Criteria andIfloseIsNotNull() {
            addCriterion("iflose is not null");
            return (Criteria) this;
        }

        public Criteria andIfloseEqualTo(String value) {
            addCriterion("iflose =", value, "iflose");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table whuser
         *
         * @mbg.generated
         */
        public Criteria andIfloseEqualToColumn(Whuser.Column column) {
            addCriterion(new StringBuilder("iflose = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIfloseNotEqualTo(String value) {
            addCriterion("iflose <>", value, "iflose");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table whuser
         *
         * @mbg.generated
         */
        public Criteria andIfloseNotEqualToColumn(Whuser.Column column) {
            addCriterion(new StringBuilder("iflose <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIfloseGreaterThan(String value) {
            addCriterion("iflose >", value, "iflose");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table whuser
         *
         * @mbg.generated
         */
        public Criteria andIfloseGreaterThanColumn(Whuser.Column column) {
            addCriterion(new StringBuilder("iflose > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIfloseGreaterThanOrEqualTo(String value) {
            addCriterion("iflose >=", value, "iflose");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table whuser
         *
         * @mbg.generated
         */
        public Criteria andIfloseGreaterThanOrEqualToColumn(Whuser.Column column) {
            addCriterion(new StringBuilder("iflose >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIfloseLessThan(String value) {
            addCriterion("iflose <", value, "iflose");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table whuser
         *
         * @mbg.generated
         */
        public Criteria andIfloseLessThanColumn(Whuser.Column column) {
            addCriterion(new StringBuilder("iflose < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIfloseLessThanOrEqualTo(String value) {
            addCriterion("iflose <=", value, "iflose");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table whuser
         *
         * @mbg.generated
         */
        public Criteria andIfloseLessThanOrEqualToColumn(Whuser.Column column) {
            addCriterion(new StringBuilder("iflose <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIfloseLike(String value) {
            addCriterion("iflose like", value, "iflose");
            return (Criteria) this;
        }

        public Criteria andIfloseNotLike(String value) {
            addCriterion("iflose not like", value, "iflose");
            return (Criteria) this;
        }

        public Criteria andIfloseIn(List<String> values) {
            addCriterion("iflose in", values, "iflose");
            return (Criteria) this;
        }

        public Criteria andIfloseNotIn(List<String> values) {
            addCriterion("iflose not in", values, "iflose");
            return (Criteria) this;
        }

        public Criteria andIfloseBetween(String value1, String value2) {
            addCriterion("iflose between", value1, value2, "iflose");
            return (Criteria) this;
        }

        public Criteria andIfloseNotBetween(String value1, String value2) {
            addCriterion("iflose not between", value1, value2, "iflose");
            return (Criteria) this;
        }

        public Criteria andLoseinfoIsNull() {
            addCriterion("loseinfo is null");
            return (Criteria) this;
        }

        public Criteria andLoseinfoIsNotNull() {
            addCriterion("loseinfo is not null");
            return (Criteria) this;
        }

        public Criteria andLoseinfoEqualTo(String value) {
            addCriterion("loseinfo =", value, "loseinfo");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table whuser
         *
         * @mbg.generated
         */
        public Criteria andLoseinfoEqualToColumn(Whuser.Column column) {
            addCriterion(new StringBuilder("loseinfo = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andLoseinfoNotEqualTo(String value) {
            addCriterion("loseinfo <>", value, "loseinfo");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table whuser
         *
         * @mbg.generated
         */
        public Criteria andLoseinfoNotEqualToColumn(Whuser.Column column) {
            addCriterion(new StringBuilder("loseinfo <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andLoseinfoGreaterThan(String value) {
            addCriterion("loseinfo >", value, "loseinfo");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table whuser
         *
         * @mbg.generated
         */
        public Criteria andLoseinfoGreaterThanColumn(Whuser.Column column) {
            addCriterion(new StringBuilder("loseinfo > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andLoseinfoGreaterThanOrEqualTo(String value) {
            addCriterion("loseinfo >=", value, "loseinfo");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table whuser
         *
         * @mbg.generated
         */
        public Criteria andLoseinfoGreaterThanOrEqualToColumn(Whuser.Column column) {
            addCriterion(new StringBuilder("loseinfo >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andLoseinfoLessThan(String value) {
            addCriterion("loseinfo <", value, "loseinfo");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table whuser
         *
         * @mbg.generated
         */
        public Criteria andLoseinfoLessThanColumn(Whuser.Column column) {
            addCriterion(new StringBuilder("loseinfo < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andLoseinfoLessThanOrEqualTo(String value) {
            addCriterion("loseinfo <=", value, "loseinfo");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table whuser
         *
         * @mbg.generated
         */
        public Criteria andLoseinfoLessThanOrEqualToColumn(Whuser.Column column) {
            addCriterion(new StringBuilder("loseinfo <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andLoseinfoLike(String value) {
            addCriterion("loseinfo like", value, "loseinfo");
            return (Criteria) this;
        }

        public Criteria andLoseinfoNotLike(String value) {
            addCriterion("loseinfo not like", value, "loseinfo");
            return (Criteria) this;
        }

        public Criteria andLoseinfoIn(List<String> values) {
            addCriterion("loseinfo in", values, "loseinfo");
            return (Criteria) this;
        }

        public Criteria andLoseinfoNotIn(List<String> values) {
            addCriterion("loseinfo not in", values, "loseinfo");
            return (Criteria) this;
        }

        public Criteria andLoseinfoBetween(String value1, String value2) {
            addCriterion("loseinfo between", value1, value2, "loseinfo");
            return (Criteria) this;
        }

        public Criteria andLoseinfoNotBetween(String value1, String value2) {
            addCriterion("loseinfo not between", value1, value2, "loseinfo");
            return (Criteria) this;
        }

        public Criteria andDocinfoIsNull() {
            addCriterion("docinfo is null");
            return (Criteria) this;
        }

        public Criteria andDocinfoIsNotNull() {
            addCriterion("docinfo is not null");
            return (Criteria) this;
        }

        public Criteria andDocinfoEqualTo(String value) {
            addCriterion("docinfo =", value, "docinfo");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table whuser
         *
         * @mbg.generated
         */
        public Criteria andDocinfoEqualToColumn(Whuser.Column column) {
            addCriterion(new StringBuilder("docinfo = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDocinfoNotEqualTo(String value) {
            addCriterion("docinfo <>", value, "docinfo");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table whuser
         *
         * @mbg.generated
         */
        public Criteria andDocinfoNotEqualToColumn(Whuser.Column column) {
            addCriterion(new StringBuilder("docinfo <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDocinfoGreaterThan(String value) {
            addCriterion("docinfo >", value, "docinfo");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table whuser
         *
         * @mbg.generated
         */
        public Criteria andDocinfoGreaterThanColumn(Whuser.Column column) {
            addCriterion(new StringBuilder("docinfo > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDocinfoGreaterThanOrEqualTo(String value) {
            addCriterion("docinfo >=", value, "docinfo");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table whuser
         *
         * @mbg.generated
         */
        public Criteria andDocinfoGreaterThanOrEqualToColumn(Whuser.Column column) {
            addCriterion(new StringBuilder("docinfo >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDocinfoLessThan(String value) {
            addCriterion("docinfo <", value, "docinfo");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table whuser
         *
         * @mbg.generated
         */
        public Criteria andDocinfoLessThanColumn(Whuser.Column column) {
            addCriterion(new StringBuilder("docinfo < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDocinfoLessThanOrEqualTo(String value) {
            addCriterion("docinfo <=", value, "docinfo");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table whuser
         *
         * @mbg.generated
         */
        public Criteria andDocinfoLessThanOrEqualToColumn(Whuser.Column column) {
            addCriterion(new StringBuilder("docinfo <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDocinfoLike(String value) {
            addCriterion("docinfo like", value, "docinfo");
            return (Criteria) this;
        }

        public Criteria andDocinfoNotLike(String value) {
            addCriterion("docinfo not like", value, "docinfo");
            return (Criteria) this;
        }

        public Criteria andDocinfoIn(List<String> values) {
            addCriterion("docinfo in", values, "docinfo");
            return (Criteria) this;
        }

        public Criteria andDocinfoNotIn(List<String> values) {
            addCriterion("docinfo not in", values, "docinfo");
            return (Criteria) this;
        }

        public Criteria andDocinfoBetween(String value1, String value2) {
            addCriterion("docinfo between", value1, value2, "docinfo");
            return (Criteria) this;
        }

        public Criteria andDocinfoNotBetween(String value1, String value2) {
            addCriterion("docinfo not between", value1, value2, "docinfo");
            return (Criteria) this;
        }

        public Criteria andIfsafeIsNull() {
            addCriterion("ifsafe is null");
            return (Criteria) this;
        }

        public Criteria andIfsafeIsNotNull() {
            addCriterion("ifsafe is not null");
            return (Criteria) this;
        }

        public Criteria andIfsafeEqualTo(String value) {
            addCriterion("ifsafe =", value, "ifsafe");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table whuser
         *
         * @mbg.generated
         */
        public Criteria andIfsafeEqualToColumn(Whuser.Column column) {
            addCriterion(new StringBuilder("ifsafe = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIfsafeNotEqualTo(String value) {
            addCriterion("ifsafe <>", value, "ifsafe");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table whuser
         *
         * @mbg.generated
         */
        public Criteria andIfsafeNotEqualToColumn(Whuser.Column column) {
            addCriterion(new StringBuilder("ifsafe <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIfsafeGreaterThan(String value) {
            addCriterion("ifsafe >", value, "ifsafe");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table whuser
         *
         * @mbg.generated
         */
        public Criteria andIfsafeGreaterThanColumn(Whuser.Column column) {
            addCriterion(new StringBuilder("ifsafe > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIfsafeGreaterThanOrEqualTo(String value) {
            addCriterion("ifsafe >=", value, "ifsafe");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table whuser
         *
         * @mbg.generated
         */
        public Criteria andIfsafeGreaterThanOrEqualToColumn(Whuser.Column column) {
            addCriterion(new StringBuilder("ifsafe >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIfsafeLessThan(String value) {
            addCriterion("ifsafe <", value, "ifsafe");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table whuser
         *
         * @mbg.generated
         */
        public Criteria andIfsafeLessThanColumn(Whuser.Column column) {
            addCriterion(new StringBuilder("ifsafe < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIfsafeLessThanOrEqualTo(String value) {
            addCriterion("ifsafe <=", value, "ifsafe");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table whuser
         *
         * @mbg.generated
         */
        public Criteria andIfsafeLessThanOrEqualToColumn(Whuser.Column column) {
            addCriterion(new StringBuilder("ifsafe <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIfsafeLike(String value) {
            addCriterion("ifsafe like", value, "ifsafe");
            return (Criteria) this;
        }

        public Criteria andIfsafeNotLike(String value) {
            addCriterion("ifsafe not like", value, "ifsafe");
            return (Criteria) this;
        }

        public Criteria andIfsafeIn(List<String> values) {
            addCriterion("ifsafe in", values, "ifsafe");
            return (Criteria) this;
        }

        public Criteria andIfsafeNotIn(List<String> values) {
            addCriterion("ifsafe not in", values, "ifsafe");
            return (Criteria) this;
        }

        public Criteria andIfsafeBetween(String value1, String value2) {
            addCriterion("ifsafe between", value1, value2, "ifsafe");
            return (Criteria) this;
        }

        public Criteria andIfsafeNotBetween(String value1, String value2) {
            addCriterion("ifsafe not between", value1, value2, "ifsafe");
            return (Criteria) this;
        }

        public Criteria andDatatypeIsNull() {
            addCriterion("datatype is null");
            return (Criteria) this;
        }

        public Criteria andDatatypeIsNotNull() {
            addCriterion("datatype is not null");
            return (Criteria) this;
        }

        public Criteria andDatatypeEqualTo(String value) {
            addCriterion("datatype =", value, "datatype");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table whuser
         *
         * @mbg.generated
         */
        public Criteria andDatatypeEqualToColumn(Whuser.Column column) {
            addCriterion(new StringBuilder("datatype = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDatatypeNotEqualTo(String value) {
            addCriterion("datatype <>", value, "datatype");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table whuser
         *
         * @mbg.generated
         */
        public Criteria andDatatypeNotEqualToColumn(Whuser.Column column) {
            addCriterion(new StringBuilder("datatype <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDatatypeGreaterThan(String value) {
            addCriterion("datatype >", value, "datatype");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table whuser
         *
         * @mbg.generated
         */
        public Criteria andDatatypeGreaterThanColumn(Whuser.Column column) {
            addCriterion(new StringBuilder("datatype > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDatatypeGreaterThanOrEqualTo(String value) {
            addCriterion("datatype >=", value, "datatype");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table whuser
         *
         * @mbg.generated
         */
        public Criteria andDatatypeGreaterThanOrEqualToColumn(Whuser.Column column) {
            addCriterion(new StringBuilder("datatype >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDatatypeLessThan(String value) {
            addCriterion("datatype <", value, "datatype");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table whuser
         *
         * @mbg.generated
         */
        public Criteria andDatatypeLessThanColumn(Whuser.Column column) {
            addCriterion(new StringBuilder("datatype < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDatatypeLessThanOrEqualTo(String value) {
            addCriterion("datatype <=", value, "datatype");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table whuser
         *
         * @mbg.generated
         */
        public Criteria andDatatypeLessThanOrEqualToColumn(Whuser.Column column) {
            addCriterion(new StringBuilder("datatype <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDatatypeLike(String value) {
            addCriterion("datatype like", value, "datatype");
            return (Criteria) this;
        }

        public Criteria andDatatypeNotLike(String value) {
            addCriterion("datatype not like", value, "datatype");
            return (Criteria) this;
        }

        public Criteria andDatatypeIn(List<String> values) {
            addCriterion("datatype in", values, "datatype");
            return (Criteria) this;
        }

        public Criteria andDatatypeNotIn(List<String> values) {
            addCriterion("datatype not in", values, "datatype");
            return (Criteria) this;
        }

        public Criteria andDatatypeBetween(String value1, String value2) {
            addCriterion("datatype between", value1, value2, "datatype");
            return (Criteria) this;
        }

        public Criteria andDatatypeNotBetween(String value1, String value2) {
            addCriterion("datatype not between", value1, value2, "datatype");
            return (Criteria) this;
        }

        public Criteria andIftransferareaIsNull() {
            addCriterion("iftransferarea is null");
            return (Criteria) this;
        }

        public Criteria andIftransferareaIsNotNull() {
            addCriterion("iftransferarea is not null");
            return (Criteria) this;
        }

        public Criteria andIftransferareaEqualTo(String value) {
            addCriterion("iftransferarea =", value, "iftransferarea");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table whuser
         *
         * @mbg.generated
         */
        public Criteria andIftransferareaEqualToColumn(Whuser.Column column) {
            addCriterion(new StringBuilder("iftransferarea = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIftransferareaNotEqualTo(String value) {
            addCriterion("iftransferarea <>", value, "iftransferarea");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table whuser
         *
         * @mbg.generated
         */
        public Criteria andIftransferareaNotEqualToColumn(Whuser.Column column) {
            addCriterion(new StringBuilder("iftransferarea <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIftransferareaGreaterThan(String value) {
            addCriterion("iftransferarea >", value, "iftransferarea");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table whuser
         *
         * @mbg.generated
         */
        public Criteria andIftransferareaGreaterThanColumn(Whuser.Column column) {
            addCriterion(new StringBuilder("iftransferarea > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIftransferareaGreaterThanOrEqualTo(String value) {
            addCriterion("iftransferarea >=", value, "iftransferarea");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table whuser
         *
         * @mbg.generated
         */
        public Criteria andIftransferareaGreaterThanOrEqualToColumn(Whuser.Column column) {
            addCriterion(new StringBuilder("iftransferarea >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIftransferareaLessThan(String value) {
            addCriterion("iftransferarea <", value, "iftransferarea");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table whuser
         *
         * @mbg.generated
         */
        public Criteria andIftransferareaLessThanColumn(Whuser.Column column) {
            addCriterion(new StringBuilder("iftransferarea < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIftransferareaLessThanOrEqualTo(String value) {
            addCriterion("iftransferarea <=", value, "iftransferarea");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table whuser
         *
         * @mbg.generated
         */
        public Criteria andIftransferareaLessThanOrEqualToColumn(Whuser.Column column) {
            addCriterion(new StringBuilder("iftransferarea <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIftransferareaLike(String value) {
            addCriterion("iftransferarea like", value, "iftransferarea");
            return (Criteria) this;
        }

        public Criteria andIftransferareaNotLike(String value) {
            addCriterion("iftransferarea not like", value, "iftransferarea");
            return (Criteria) this;
        }

        public Criteria andIftransferareaIn(List<String> values) {
            addCriterion("iftransferarea in", values, "iftransferarea");
            return (Criteria) this;
        }

        public Criteria andIftransferareaNotIn(List<String> values) {
            addCriterion("iftransferarea not in", values, "iftransferarea");
            return (Criteria) this;
        }

        public Criteria andIftransferareaBetween(String value1, String value2) {
            addCriterion("iftransferarea between", value1, value2, "iftransferarea");
            return (Criteria) this;
        }

        public Criteria andIftransferareaNotBetween(String value1, String value2) {
            addCriterion("iftransferarea not between", value1, value2, "iftransferarea");
            return (Criteria) this;
        }

        public Criteria andIftransferstreetIsNull() {
            addCriterion("iftransferstreet is null");
            return (Criteria) this;
        }

        public Criteria andIftransferstreetIsNotNull() {
            addCriterion("iftransferstreet is not null");
            return (Criteria) this;
        }

        public Criteria andIftransferstreetEqualTo(String value) {
            addCriterion("iftransferstreet =", value, "iftransferstreet");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table whuser
         *
         * @mbg.generated
         */
        public Criteria andIftransferstreetEqualToColumn(Whuser.Column column) {
            addCriterion(new StringBuilder("iftransferstreet = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIftransferstreetNotEqualTo(String value) {
            addCriterion("iftransferstreet <>", value, "iftransferstreet");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table whuser
         *
         * @mbg.generated
         */
        public Criteria andIftransferstreetNotEqualToColumn(Whuser.Column column) {
            addCriterion(new StringBuilder("iftransferstreet <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIftransferstreetGreaterThan(String value) {
            addCriterion("iftransferstreet >", value, "iftransferstreet");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table whuser
         *
         * @mbg.generated
         */
        public Criteria andIftransferstreetGreaterThanColumn(Whuser.Column column) {
            addCriterion(new StringBuilder("iftransferstreet > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIftransferstreetGreaterThanOrEqualTo(String value) {
            addCriterion("iftransferstreet >=", value, "iftransferstreet");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table whuser
         *
         * @mbg.generated
         */
        public Criteria andIftransferstreetGreaterThanOrEqualToColumn(Whuser.Column column) {
            addCriterion(new StringBuilder("iftransferstreet >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIftransferstreetLessThan(String value) {
            addCriterion("iftransferstreet <", value, "iftransferstreet");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table whuser
         *
         * @mbg.generated
         */
        public Criteria andIftransferstreetLessThanColumn(Whuser.Column column) {
            addCriterion(new StringBuilder("iftransferstreet < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIftransferstreetLessThanOrEqualTo(String value) {
            addCriterion("iftransferstreet <=", value, "iftransferstreet");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table whuser
         *
         * @mbg.generated
         */
        public Criteria andIftransferstreetLessThanOrEqualToColumn(Whuser.Column column) {
            addCriterion(new StringBuilder("iftransferstreet <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIftransferstreetLike(String value) {
            addCriterion("iftransferstreet like", value, "iftransferstreet");
            return (Criteria) this;
        }

        public Criteria andIftransferstreetNotLike(String value) {
            addCriterion("iftransferstreet not like", value, "iftransferstreet");
            return (Criteria) this;
        }

        public Criteria andIftransferstreetIn(List<String> values) {
            addCriterion("iftransferstreet in", values, "iftransferstreet");
            return (Criteria) this;
        }

        public Criteria andIftransferstreetNotIn(List<String> values) {
            addCriterion("iftransferstreet not in", values, "iftransferstreet");
            return (Criteria) this;
        }

        public Criteria andIftransferstreetBetween(String value1, String value2) {
            addCriterion("iftransferstreet between", value1, value2, "iftransferstreet");
            return (Criteria) this;
        }

        public Criteria andIftransferstreetNotBetween(String value1, String value2) {
            addCriterion("iftransferstreet not between", value1, value2, "iftransferstreet");
            return (Criteria) this;
        }

        public Criteria andJiguanIsNull() {
            addCriterion("jiguan is null");
            return (Criteria) this;
        }

        public Criteria andJiguanIsNotNull() {
            addCriterion("jiguan is not null");
            return (Criteria) this;
        }

        public Criteria andJiguanEqualTo(String value) {
            addCriterion("jiguan =", value, "jiguan");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table whuser
         *
         * @mbg.generated
         */
        public Criteria andJiguanEqualToColumn(Whuser.Column column) {
            addCriterion(new StringBuilder("jiguan = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andJiguanNotEqualTo(String value) {
            addCriterion("jiguan <>", value, "jiguan");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table whuser
         *
         * @mbg.generated
         */
        public Criteria andJiguanNotEqualToColumn(Whuser.Column column) {
            addCriterion(new StringBuilder("jiguan <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andJiguanGreaterThan(String value) {
            addCriterion("jiguan >", value, "jiguan");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table whuser
         *
         * @mbg.generated
         */
        public Criteria andJiguanGreaterThanColumn(Whuser.Column column) {
            addCriterion(new StringBuilder("jiguan > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andJiguanGreaterThanOrEqualTo(String value) {
            addCriterion("jiguan >=", value, "jiguan");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table whuser
         *
         * @mbg.generated
         */
        public Criteria andJiguanGreaterThanOrEqualToColumn(Whuser.Column column) {
            addCriterion(new StringBuilder("jiguan >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andJiguanLessThan(String value) {
            addCriterion("jiguan <", value, "jiguan");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table whuser
         *
         * @mbg.generated
         */
        public Criteria andJiguanLessThanColumn(Whuser.Column column) {
            addCriterion(new StringBuilder("jiguan < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andJiguanLessThanOrEqualTo(String value) {
            addCriterion("jiguan <=", value, "jiguan");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table whuser
         *
         * @mbg.generated
         */
        public Criteria andJiguanLessThanOrEqualToColumn(Whuser.Column column) {
            addCriterion(new StringBuilder("jiguan <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andJiguanLike(String value) {
            addCriterion("jiguan like", value, "jiguan");
            return (Criteria) this;
        }

        public Criteria andJiguanNotLike(String value) {
            addCriterion("jiguan not like", value, "jiguan");
            return (Criteria) this;
        }

        public Criteria andJiguanIn(List<String> values) {
            addCriterion("jiguan in", values, "jiguan");
            return (Criteria) this;
        }

        public Criteria andJiguanNotIn(List<String> values) {
            addCriterion("jiguan not in", values, "jiguan");
            return (Criteria) this;
        }

        public Criteria andJiguanBetween(String value1, String value2) {
            addCriterion("jiguan between", value1, value2, "jiguan");
            return (Criteria) this;
        }

        public Criteria andJiguanNotBetween(String value1, String value2) {
            addCriterion("jiguan not between", value1, value2, "jiguan");
            return (Criteria) this;
        }

        public Criteria andLivetypeIsNull() {
            addCriterion("livetype is null");
            return (Criteria) this;
        }

        public Criteria andLivetypeIsNotNull() {
            addCriterion("livetype is not null");
            return (Criteria) this;
        }

        public Criteria andLivetypeEqualTo(String value) {
            addCriterion("livetype =", value, "livetype");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table whuser
         *
         * @mbg.generated
         */
        public Criteria andLivetypeEqualToColumn(Whuser.Column column) {
            addCriterion(new StringBuilder("livetype = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andLivetypeNotEqualTo(String value) {
            addCriterion("livetype <>", value, "livetype");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table whuser
         *
         * @mbg.generated
         */
        public Criteria andLivetypeNotEqualToColumn(Whuser.Column column) {
            addCriterion(new StringBuilder("livetype <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andLivetypeGreaterThan(String value) {
            addCriterion("livetype >", value, "livetype");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table whuser
         *
         * @mbg.generated
         */
        public Criteria andLivetypeGreaterThanColumn(Whuser.Column column) {
            addCriterion(new StringBuilder("livetype > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andLivetypeGreaterThanOrEqualTo(String value) {
            addCriterion("livetype >=", value, "livetype");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table whuser
         *
         * @mbg.generated
         */
        public Criteria andLivetypeGreaterThanOrEqualToColumn(Whuser.Column column) {
            addCriterion(new StringBuilder("livetype >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andLivetypeLessThan(String value) {
            addCriterion("livetype <", value, "livetype");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table whuser
         *
         * @mbg.generated
         */
        public Criteria andLivetypeLessThanColumn(Whuser.Column column) {
            addCriterion(new StringBuilder("livetype < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andLivetypeLessThanOrEqualTo(String value) {
            addCriterion("livetype <=", value, "livetype");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table whuser
         *
         * @mbg.generated
         */
        public Criteria andLivetypeLessThanOrEqualToColumn(Whuser.Column column) {
            addCriterion(new StringBuilder("livetype <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andLivetypeLike(String value) {
            addCriterion("livetype like", value, "livetype");
            return (Criteria) this;
        }

        public Criteria andLivetypeNotLike(String value) {
            addCriterion("livetype not like", value, "livetype");
            return (Criteria) this;
        }

        public Criteria andLivetypeIn(List<String> values) {
            addCriterion("livetype in", values, "livetype");
            return (Criteria) this;
        }

        public Criteria andLivetypeNotIn(List<String> values) {
            addCriterion("livetype not in", values, "livetype");
            return (Criteria) this;
        }

        public Criteria andLivetypeBetween(String value1, String value2) {
            addCriterion("livetype between", value1, value2, "livetype");
            return (Criteria) this;
        }

        public Criteria andLivetypeNotBetween(String value1, String value2) {
            addCriterion("livetype not between", value1, value2, "livetype");
            return (Criteria) this;
        }

        public Criteria andUsertypeIsNull() {
            addCriterion("usertype is null");
            return (Criteria) this;
        }

        public Criteria andUsertypeIsNotNull() {
            addCriterion("usertype is not null");
            return (Criteria) this;
        }

        public Criteria andUsertypeEqualTo(String value) {
            addCriterion("usertype =", value, "usertype");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table whuser
         *
         * @mbg.generated
         */
        public Criteria andUsertypeEqualToColumn(Whuser.Column column) {
            addCriterion(new StringBuilder("usertype = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andUsertypeNotEqualTo(String value) {
            addCriterion("usertype <>", value, "usertype");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table whuser
         *
         * @mbg.generated
         */
        public Criteria andUsertypeNotEqualToColumn(Whuser.Column column) {
            addCriterion(new StringBuilder("usertype <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andUsertypeGreaterThan(String value) {
            addCriterion("usertype >", value, "usertype");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table whuser
         *
         * @mbg.generated
         */
        public Criteria andUsertypeGreaterThanColumn(Whuser.Column column) {
            addCriterion(new StringBuilder("usertype > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andUsertypeGreaterThanOrEqualTo(String value) {
            addCriterion("usertype >=", value, "usertype");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table whuser
         *
         * @mbg.generated
         */
        public Criteria andUsertypeGreaterThanOrEqualToColumn(Whuser.Column column) {
            addCriterion(new StringBuilder("usertype >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andUsertypeLessThan(String value) {
            addCriterion("usertype <", value, "usertype");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table whuser
         *
         * @mbg.generated
         */
        public Criteria andUsertypeLessThanColumn(Whuser.Column column) {
            addCriterion(new StringBuilder("usertype < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andUsertypeLessThanOrEqualTo(String value) {
            addCriterion("usertype <=", value, "usertype");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table whuser
         *
         * @mbg.generated
         */
        public Criteria andUsertypeLessThanOrEqualToColumn(Whuser.Column column) {
            addCriterion(new StringBuilder("usertype <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andUsertypeLike(String value) {
            addCriterion("usertype like", value, "usertype");
            return (Criteria) this;
        }

        public Criteria andUsertypeNotLike(String value) {
            addCriterion("usertype not like", value, "usertype");
            return (Criteria) this;
        }

        public Criteria andUsertypeIn(List<String> values) {
            addCriterion("usertype in", values, "usertype");
            return (Criteria) this;
        }

        public Criteria andUsertypeNotIn(List<String> values) {
            addCriterion("usertype not in", values, "usertype");
            return (Criteria) this;
        }

        public Criteria andUsertypeBetween(String value1, String value2) {
            addCriterion("usertype between", value1, value2, "usertype");
            return (Criteria) this;
        }

        public Criteria andUsertypeNotBetween(String value1, String value2) {
            addCriterion("usertype not between", value1, value2, "usertype");
            return (Criteria) this;
        }

        public Criteria andUphoneIsNull() {
            addCriterion("uphone is null");
            return (Criteria) this;
        }

        public Criteria andUphoneIsNotNull() {
            addCriterion("uphone is not null");
            return (Criteria) this;
        }

        public Criteria andUphoneEqualTo(String value) {
            addCriterion("uphone =", value, "uphone");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table whuser
         *
         * @mbg.generated
         */
        public Criteria andUphoneEqualToColumn(Whuser.Column column) {
            addCriterion(new StringBuilder("uphone = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andUphoneNotEqualTo(String value) {
            addCriterion("uphone <>", value, "uphone");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table whuser
         *
         * @mbg.generated
         */
        public Criteria andUphoneNotEqualToColumn(Whuser.Column column) {
            addCriterion(new StringBuilder("uphone <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andUphoneGreaterThan(String value) {
            addCriterion("uphone >", value, "uphone");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table whuser
         *
         * @mbg.generated
         */
        public Criteria andUphoneGreaterThanColumn(Whuser.Column column) {
            addCriterion(new StringBuilder("uphone > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andUphoneGreaterThanOrEqualTo(String value) {
            addCriterion("uphone >=", value, "uphone");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table whuser
         *
         * @mbg.generated
         */
        public Criteria andUphoneGreaterThanOrEqualToColumn(Whuser.Column column) {
            addCriterion(new StringBuilder("uphone >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andUphoneLessThan(String value) {
            addCriterion("uphone <", value, "uphone");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table whuser
         *
         * @mbg.generated
         */
        public Criteria andUphoneLessThanColumn(Whuser.Column column) {
            addCriterion(new StringBuilder("uphone < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andUphoneLessThanOrEqualTo(String value) {
            addCriterion("uphone <=", value, "uphone");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table whuser
         *
         * @mbg.generated
         */
        public Criteria andUphoneLessThanOrEqualToColumn(Whuser.Column column) {
            addCriterion(new StringBuilder("uphone <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andUphoneLike(String value) {
            addCriterion("uphone like", value, "uphone");
            return (Criteria) this;
        }

        public Criteria andUphoneNotLike(String value) {
            addCriterion("uphone not like", value, "uphone");
            return (Criteria) this;
        }

        public Criteria andUphoneIn(List<String> values) {
            addCriterion("uphone in", values, "uphone");
            return (Criteria) this;
        }

        public Criteria andUphoneNotIn(List<String> values) {
            addCriterion("uphone not in", values, "uphone");
            return (Criteria) this;
        }

        public Criteria andUphoneBetween(String value1, String value2) {
            addCriterion("uphone between", value1, value2, "uphone");
            return (Criteria) this;
        }

        public Criteria andUphoneNotBetween(String value1, String value2) {
            addCriterion("uphone not between", value1, value2, "uphone");
            return (Criteria) this;
        }

        public Criteria andPhoneremarkIsNull() {
            addCriterion("phoneremark is null");
            return (Criteria) this;
        }

        public Criteria andPhoneremarkIsNotNull() {
            addCriterion("phoneremark is not null");
            return (Criteria) this;
        }

        public Criteria andPhoneremarkEqualTo(String value) {
            addCriterion("phoneremark =", value, "phoneremark");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table whuser
         *
         * @mbg.generated
         */
        public Criteria andPhoneremarkEqualToColumn(Whuser.Column column) {
            addCriterion(new StringBuilder("phoneremark = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andPhoneremarkNotEqualTo(String value) {
            addCriterion("phoneremark <>", value, "phoneremark");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table whuser
         *
         * @mbg.generated
         */
        public Criteria andPhoneremarkNotEqualToColumn(Whuser.Column column) {
            addCriterion(new StringBuilder("phoneremark <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andPhoneremarkGreaterThan(String value) {
            addCriterion("phoneremark >", value, "phoneremark");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table whuser
         *
         * @mbg.generated
         */
        public Criteria andPhoneremarkGreaterThanColumn(Whuser.Column column) {
            addCriterion(new StringBuilder("phoneremark > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andPhoneremarkGreaterThanOrEqualTo(String value) {
            addCriterion("phoneremark >=", value, "phoneremark");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table whuser
         *
         * @mbg.generated
         */
        public Criteria andPhoneremarkGreaterThanOrEqualToColumn(Whuser.Column column) {
            addCriterion(new StringBuilder("phoneremark >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andPhoneremarkLessThan(String value) {
            addCriterion("phoneremark <", value, "phoneremark");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table whuser
         *
         * @mbg.generated
         */
        public Criteria andPhoneremarkLessThanColumn(Whuser.Column column) {
            addCriterion(new StringBuilder("phoneremark < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andPhoneremarkLessThanOrEqualTo(String value) {
            addCriterion("phoneremark <=", value, "phoneremark");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table whuser
         *
         * @mbg.generated
         */
        public Criteria andPhoneremarkLessThanOrEqualToColumn(Whuser.Column column) {
            addCriterion(new StringBuilder("phoneremark <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andPhoneremarkLike(String value) {
            addCriterion("phoneremark like", value, "phoneremark");
            return (Criteria) this;
        }

        public Criteria andPhoneremarkNotLike(String value) {
            addCriterion("phoneremark not like", value, "phoneremark");
            return (Criteria) this;
        }

        public Criteria andPhoneremarkIn(List<String> values) {
            addCriterion("phoneremark in", values, "phoneremark");
            return (Criteria) this;
        }

        public Criteria andPhoneremarkNotIn(List<String> values) {
            addCriterion("phoneremark not in", values, "phoneremark");
            return (Criteria) this;
        }

        public Criteria andPhoneremarkBetween(String value1, String value2) {
            addCriterion("phoneremark between", value1, value2, "phoneremark");
            return (Criteria) this;
        }

        public Criteria andPhoneremarkNotBetween(String value1, String value2) {
            addCriterion("phoneremark not between", value1, value2, "phoneremark");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table whuser
     *
     * @mbg.generated do_not_delete_during_merge
     */
    public static class Criteria extends GeneratedCriteria {
        /**
         * This field was generated by MyBatis Generator.
         * This field corresponds to the database table whuser
         *
         * @mbg.generated
         */
        private WhuserExample example;

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table whuser
         *
         * @mbg.generated
         */
        protected Criteria(WhuserExample example) {
            super();
            this.example = example;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table whuser
         *
         * @mbg.generated
         */
        public WhuserExample example() {
            return this.example;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table whuser
         *
         * @mbg.generated
         */
        @Deprecated
        public Criteria andIf(boolean ifAdd, ICriteriaAdd add) {
            if (ifAdd) {
                add.add(this);
            }
            return this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table whuser
         *
         * @mbg.generated
         */
        public Criteria when(boolean condition, ICriteriaWhen then) {
            if (condition) {
                then.criteria(this);
            }
            return this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table whuser
         *
         * @mbg.generated
         */
        public Criteria when(boolean condition, ICriteriaWhen then, ICriteriaWhen otherwise) {
            if (condition) {
                then.criteria(this);
            } else {
                otherwise.criteria(this);
            }
            return this;
        }

        @Deprecated
        public interface ICriteriaAdd {
            /**
             * This method was generated by MyBatis Generator.
             * This method corresponds to the database table whuser
             *
             * @mbg.generated
             */
            Criteria add(Criteria add);
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table whuser
     *
     * @mbg.generated
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }

    public interface ICriteriaWhen {
        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table whuser
         *
         * @mbg.generated
         */
        void criteria(Criteria criteria);
    }

    public interface IExampleWhen {
        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table whuser
         *
         * @mbg.generated
         */
        void example(org.linlinjava.litemall.db.domain.WhuserExample example);
    }
}